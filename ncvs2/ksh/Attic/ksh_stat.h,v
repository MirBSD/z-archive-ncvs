head	1.2;
access;
symbols
	start:1.1.7.1 mirbsd:1.1.7;
locks; strict;
comment	@ * @;


1.2
date	2005.10.21.11.33.11;	author tg;	state dead;
branches;
next	1.1;
commitid	275f4358cfde0f84;

1.1
date	2005.03.06.15.42.54;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.06.15.42.54;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* un-hook bin/ksh, usr.bin/xmlwf and lib/libexpat from the build
  - expat as discussed with bsiegert@@ today on the phone
  - ksh as announced earlier on the lists
* un-hook lib/libexpat from make includes
* remove /usr/include/{,open}ssl upgrade workaround from includes/Makefile
* nuke old bin/ksh
* nuke libexpat and xmlwf
@
text
@/**	$MirOS: src/bin/ksh/ksh_stat.h,v 1.1 2005/03/06 15:42:54 tg Exp $ */
/*	$OpenBSD: ksh_stat.h,v 1.3 1996/10/01 02:05:39 downsj Exp $	*/

#ifndef KSH_STAT_H
#define KSH_STAT_H

/* Wrapper around the ugly sys/stat includes/ifdefs */

/* assumes <sys/types.h> already included */
#include <sys/stat.h>

#ifndef HAVE_LSTAT
# define lstat(path, buf)	stat(path, buf)
#endif /* HAVE_LSTAT */

#if defined(S_ISSOCK) && defined(S_IFIFO)
# if S_ISSOCK (S_IFIFO)
#  define STAT_MACROS_BROKEN
# endif
#endif

#ifdef STAT_MACROS_BROKEN
# undef S_ISREG
# undef S_ISDIR
# undef S_ISCHR
# undef S_ISBLK
# undef S_ISFIFO
# undef S_ISSOCK
# undef S_ISLNK
#endif /* STAT_MACROS_BROKEN */

#if !defined(S_ISREG) && defined(S_IFREG)
# define S_ISREG(m)	(((m) & S_IFMT) == S_IFREG)
#endif /* S_ISREG */
#if !defined(S_ISDIR) && defined(S_IFDIR)
# define S_ISDIR(m)	(((m) & S_IFMT) == S_IFDIR)
#endif /* S_ISDIR */
#if !defined(S_ISCHR) && defined(S_IFCHR)
# define S_ISCHR(m)	(((m) & S_IFMT) == S_IFCHR)
#endif /* S_ISCHR */
#if !defined(S_ISBLK) && defined(S_IFBLK)
# define S_ISBLK(m)	(((m) & S_IFMT) == S_IFBLK)
#endif /* S_ISBLK */
#if !defined(S_ISFIFO) && defined(S_IFIFO)
# define S_ISFIFO(m)	(((m) & S_IFMT) == S_IFIFO)
#endif /* S_ISFIFO */
#if !defined(S_ISLNK) && defined(S_IFLNK)
# define S_ISLNK(m)	(((m) & S_IFMT) == S_IFLNK)
#endif /* S_ISLNK */
#if !defined(S_ISSOCK) && defined(S_IFSOCK)
# define S_ISSOCK(m)	(((m) & S_IFMT) == S_IFSOCK)
#endif /* S_ISSOCK */
#if !defined(S_ISCDF) && defined(S_CDF)
# define S_ISCDF(m)	(S_ISDIR(m) && ((m) & S_CDF))
#endif /* S_ISSOCK */

#ifndef S_ISVTX
# define S_ISVTX	01000	/* sticky bit */
#endif /* S_ISVTX */

#ifndef S_IXUSR
# define S_IXUSR	00100	/* user execute bit */
#endif /* S_IXUSR */
#ifndef S_IXGRP
# define S_IXGRP	00010	/* user execute bit */
#endif /* S_IXGRP */
#ifndef S_IXOTH
# define S_IXOTH	00001	/* user execute bit */
#endif /* S_IXOTH */

#endif	/* ndef KSH_STAT_H */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/**	$MirOS$ */
@


1.1.7.1
log
@Import current state of MirbsdKsh
@
text
@@
