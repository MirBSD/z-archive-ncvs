head	1.10;
access;
symbols;
locks; strict;
comment	@# @;


1.10
date	2005.12.05.21.25.09;	author tg;	state dead;
branches;
next	1.9;
commitid	49854394b01a7fd0;

1.9
date	2005.12.05.21.07.24;	author tg;	state Exp;
branches;
next	1.8;
commitid	548a4394ac186e29;

1.8
date	2005.12.05.21.04.11;	author tg;	state Exp;
branches;
next	1.7;
commitid	61834394ab59eb71;

1.7
date	2005.12.05.21.02.01;	author tg;	state Exp;
branches;
next	1.6;
commitid	11fd4394aa7c5b37;

1.6
date	2005.05.26.00.41.44;	author tg;	state Exp;
branches;
next	1.5;
commitid	4e4a42951b292298;

1.5
date	2005.05.05.23.49.19;	author tg;	state Exp;
branches;
next	1.4;
commitid	2237427ab0ff5e5c;

1.4
date	2005.05.05.23.25.24;	author tg;	state Exp;
branches;
next	1.3;
commitid	4416427aab6f3a84;

1.3
date	2005.05.05.23.17.26;	author tg;	state Exp;
branches;
next	1.2;
commitid	156b427aa9878787;

1.2
date	2005.05.05.16.02.37;	author tg;	state Exp;
branches;
next	1.1;
commitid	4d31427a439b5aa0;

1.1
date	2005.02.04.23.25.47;	author tg;	state Exp;
branches;
next	;


desc
@@


1.10
log
@rename the files a bit (to clean the attic which moves into ocvs):
* commit_prep2	-> tracker
* log_accum2	-> mklogci
* log_write2	-> genlog
* tag_accum2	-> mklogtag
@
text
@#!/bin/mksh
# $MirOS: CVSROOT/tag_accum2,v 1.9 2005/12/05 21:07:24 tg Exp $
#-
# Copyright (c) 2004, 2005
#	Thorsten "mirabile" Glaser <tg@@MirBSD.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a nontrivial bug.
#-
# Log cvs 1.12 tagging operations in the same manner log_accum2 does
# for regular file operations.

SHELL=${SHELL:-/bin/mksh}
id=$1
shift

function die
{
	print -r Error: "$@@"
	rm /tmp/\#cvs.*.$id
	exit 1
}

rcpt=
logf=NO
op=
branch=
tag=$3
repo=$4
dir=$5
cloguri=NO
replyto=NO
set -A files
set -A fold
set -A fnew
opt_done=0
let i=0

F=/tmp/\#cvs.tag.$id
T=/tmp/\#cvs.tagend.$id

[[ $(</tmp/\#cvs.lastdir.$id) = $repo/$dir ]]
leave=$?

case $1 {
(add)	op=Adding	;;
(mov)	op=Moving	;;
(del)	op=Deleting	;;
(*)	die check usage	;;
}
shift

case $1 {
([Tt])	branch=" branch" ;;
([Nn])	branch=" static" ;;
}
shift

[[ -z $tag || -z $repo || -z $dir ]] && die check usage
shift; shift; shift
module=${dir%%/*}
if [[ $module = $dir ]]; then
	dir=.
else
	dir=${dir#*/}
fi

while (( $# > 0 )); do
	if [[ $1 = -m && $opt_done = 0 ]]; then
		rcpt="$rcpt $2"
		shift; shift
	elif [[ $1 = -f && $opt_done = 0 ]]; then
		logf=$2
		shift; shift;
	elif [[ $1 = -I && $opt_done = 0 ]]; then
		cloguri="$2"
		shift; shift;
	elif [[ $1 = -R && $opt_done = 0 ]]; then
		replyto="$2"
		shift; shift;
	else
		opt_done=1
		files[i]="$1"
		fold[i]="$2"
		fnew[i]="$3"
		shift; shift; shift
		let ++i
	fi
done

if (( i == 0 )); then
	rm /tmp/\#cvs.*.$id
	exit 0
fi

let j=0
while (( j < i )); do
	print -r -- "${fold[j]}\t${fnew[j]}\t$dir/./${files[j]}"
	let ++j
done >>$F

[[ $leave = 1 ]] && exit 0

print 'old rev.\tnew rev.\tfilename' >$T
print -- '--------\t--------\t--------' >>$T
sort -t'	' -k3 $F | \
    sed -e 's!/\./!/!g' -e 's!	\./!	!' \
    >>$T
column -ts'	' <$T >$F

hn=$(hostname 2>/dev/null)
[[ $hn = *.* ]] || hn=$hn.$(domainname 2>/dev/null)
[[ $hn = *. ]] && hn=${hn}invalid

cat >$T <<-EOF
	Commit ID:	$id
	CVSROOT:	$repo
	Module name:	$module
	Changes by:	${USER}@@$hn	$(TZ=UTC date '+%Y/%m/%d %T' 2>/dev/null) UTC

	$op$branch tag '$tag' affecting:

EOF

sendmail -t |&
print -pr -- To: $rcpt
print -pr -- Subject: CVS: $hn: $module
if [[ $replyto != NO ]]; then
	print -pr -- Mail-Followup-To: $replyto
	print -pr -- Reply-To: $replyto
fi
print -p
exec 3>&p
cat $T >&3
if [[ $cloguri = NO ]]; then
	cat $F >&3
else
	print -u3 various files\; if you want to know more, go read
	print -ru3 -- $cloguri
fi
exec 3>&-

if [[ -e $logf ]]; then
	cat $F >>$T
	print ________________________________________________________________________ >>$T
	print >>$T
	$SHELL $repo/CVSROOT/log_write2 $logf <$T
fi

rm /tmp/\#cvs.*.$id
exit 0
@


1.9
log
@fix (hopefully) some cases of stale temp files hanging around
@
text
@d2 1
a2 1
# $MirOS: CVSROOT/tag_accum2,v 1.8 2005/12/05 21:04:11 tg Exp $
@


1.8
log
@fix indentation, use (( ... )) not [ ... ]
@
text
@d2 1
a2 1
# $MirOS: CVSROOT/tag_accum2,v 1.7 2005/12/05 21:02:01 tg Exp $
d37 1
d108 4
a111 1
(( i > 0 )) || exit 0
@


1.7
log
@replace perl log_accum2 script with rewritten-from-scratch shell script
(mksh, of course) which produces almost the same, but much nicer, output,
has got all the features I added, and throws in much less of thatannoying
whitespace into the changelog and email

I tested it lots on a private repo copy, but there might still be bugs
None of this code is still (c) by the authors of the perl script, I did
this myself (using masses of good anarchistic met (honey wine) from the
famous www.cafe-libertad.de ;)
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.3 2005/12/04 16:03:44 tg Rel $
d62 4
a65 4
add)	op=Adding	;;
mov)	op=Moving	;;
del)	op=Deleting	;;
*)	die check usage	;;
d70 2
a71 2
[Tt])	branch=" branch" ;;
[Nn])	branch=" static" ;;
d119 2
a120 2
sort -t'	' -k3 $F \
    | sed -e 's!/\./!/!g' -e 's!	\./!	!' \
d128 5
a132 5
cat >$T <<EOF
Commit ID:	$id
CVSROOT:	$repo
Module name:	$module
Changes by:	${USER}@@$hn	$(TZ=UTC date '+%Y/%m/%d %T' 2>/dev/null) UTC
d134 1
a134 1
$op$branch tag '$tag' affecting:
@


1.6
log
@* cvs-genperm: make CVSROOT/up executable (why not ;)
  yeah, this breaks if it doesn't exist, so what, you know what
  you're doing when you're using this tool on your repo anyway!
* all: switch to /bin/mksh
@
text
@d2 1
a2 1
# $MirOS: CVSROOT/tag_accum2,v 1.5 2005/05/05 23:49:19 tg Exp $
d5 1
a5 1
#	Thorsten "mirabile" Glaser <tg@@MirBSD.org>
d18 8
a25 7
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
d36 1
a36 1
	print Error: "$@@"
d111 1
a111 1
	print "${fold[j]}\t${fnew[j]}\t$dir/./${files[j]}"
d126 1
d139 2
a140 2
print -p To: $rcpt
print -p Subject: CVS: $hn: $module
d158 1
a158 1
	print '________________________________________________________________________' >>$T
d160 1
a160 1
	$SHELL $CVSROOT/CVSROOT/log_write2 $logf <$T
@


1.5
log
@* document Commit ID for tags, too
  (they are not found in the RCS file, though)
* some 2>/dev/null
* use $SHELL explicitly
@
text
@d1 2
a2 2
#!/bin/ksh
# $MirOS: CVSROOT/tag_accum2,v 1.4 2005/05/05 23:25:24 tg Exp $
d29 1
a29 1
SHELL=${SHELL:-/bin/ksh}
@


1.4
log
@switch to use commitid instead of pgrp
@
text
@d2 1
a2 1
# $MirOS: CVSROOT/tag_accum2,v 1.3 2005/05/05 23:17:26 tg Exp $
d29 1
d123 2
a124 2
hn=$(hostname)
[[ $hn = *.* ]] || hn=$hn.$(domainname)
d127 1
d130 1
a130 1
Changes by:	${USER}@@$hn	$(TZ=UTC date '+%Y/%m/%d %T') UTC
d158 1
a158 1
	$CVSROOT/CVSROOT/log_write2 $logf <$T
@


1.3
log
@change syntax so that commitid is now required
THIS BREAKS USING THIS CVSREPO ON CVS <GNU1.12.12
@
text
@d2 1
a2 1
# $MirOS: CVSROOT/tag_accum2,v 1.2 2005/05/05 16:02:37 tg Exp $
d29 3
a52 10
let id=PGRP
if (( id == 0 )); then
	print WARNING: Your mksh does not support getpgrp!
	print Update, you will soon be unable to commit on this machine.
	let id=$(perl -e 'print getpgrp();')
fi

	print -u2 "DEBUG: pgrp $id is commitid $1 in tag_accum2"
	shift

@


1.2
log
@add some debugging for replacing the perl to getpgrp()
with using the commit ID
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.2 2005/03/03 19:43:30 tg Rel $
a56 2
if [[ $1 = -i ]]; then
	shift
a58 1
fi
@


1.1
log
@Add the MirOS Project CVS ChangeLog and eMail generation programmes
and the CVS repository permission fixup script.
@
text
@d2 1
a2 1
# $MirOS$
d5 1
a5 1
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d57 6
@

