head	1.2;
access;
symbols
	start:1.1.1.1 tg:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2005.12.13.22.27.13;	author tg;	state dead;
branches;
next	1.1;
commitid	0439f4ac1aff1455;

1.1
date	2005.12.13.20.44.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	0439f32c6884c25e;

1.1.1.1
date	2005.12.13.20.44.45;	author tg;	state Exp;
branches;
next	;
commitid	0439f32c6884c25e;


desc
@@


1.2
log
@consolidate all added source files in a central directory
so it can be reused by the v6-transport stuff
@
text
@#include <sys/param.h>
#include "sockaddr_in6.h"
#include "byte.h"
#include "socket.h"
#include "ip6.h"
#include "haveip6.h"
#include "error.h"

int socket_recv6(int s,char *buf,unsigned int len,char ip[16],uint16 *port,uint32 *scope_id)
{
#ifdef LIBC_HAS_IP6
  struct sockaddr_in6 sa;
#else
  struct sockaddr_in sa;
#endif
  unsigned int dummy = sizeof sa;
  int r;

  byte_zero(&sa,dummy);
  r = recvfrom(s,buf,len,0,(struct sockaddr *) &sa,&dummy);
  if (r == -1) return -1;

#ifdef LIBC_HAS_IP6
  if (noipv6) {
    struct sockaddr_in *sa4=(struct sockaddr_in *)&sa;
    byte_copy(ip,12,V4mappedprefix);
    byte_copy(ip+12,4,(char *) &sa4->sin_addr);
    uint16_unpack_big((char *) &sa4->sin_port,port);
    return r;
  }
  byte_copy(ip,16,(char *) &sa.sin6_addr);
  uint16_unpack_big((char *) &sa.sin6_port,port);
  if (scope_id) *scope_id=sa.sin6_scope_id;
#else
  byte_copy(ip,12,(char *)V4mappedprefix);
  byte_copy(ip+12,4,(char *) &sa.sin_addr);
  uint16_unpack_big((char *) &sa.sin_port,port);
  if (scope_id) *scope_id=0;
#endif

  return r;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import ports/net/djbdns of snapshot
@
text
@@
