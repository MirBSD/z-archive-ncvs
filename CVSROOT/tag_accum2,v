head	2.3;
access;
symbols;
locks; strict;
comment	@# @;


2.3
date	2005.01.18.17.15.13;	author tg;	state Exp;
branches;
next	2.2;

2.2
date	2004.12.12.13.26.51;	author tg;	state Exp;
branches;
next	2.1;

2.1
date	2004.12.10.17.48.01;	author tg;	state Exp;
branches;
next	;


desc
@@


2.3
log
@use experimental PGRP support
@
text
@#!/bin/ksh
# $MirBSD: CVSROOT/tag_accum2,v 2.2 2004/12/12 13:26:51 tg Exp $
#-
# Copyright (c) 2004, 2005
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
#-
# Log cvs 1.12 tagging operations in the same manner log_accum2 does
# for regular file operations.

function die
{
	print Error: "$@@"
	exit 1
}

rcpt=
logf=NO
op=
branch=
tag=$3
repo=$4
dir=$5
cloguri=NO
replyto=NO
set -A files
set -A fold
set -A fnew
opt_done=0
let i=0

let id=PGRP
if (( id == 0 )); then
	print WARNING: Your mksh does not support getpgrp!
	print Update, you will soon be unable to commit on this machine.
	let id=$(perl -e 'print getpgrp();')
fi

F=/tmp/\#cvs.tag.$id
T=/tmp/\#cvs.tagend.$id

[[ $(</tmp/\#cvs.lastdir.$id) = $repo/$dir ]]
leave=$?

case $1 {
add)	op=Adding	;;
mov)	op=Moving	;;
del)	op=Deleting	;;
*)	die check usage	;;
}
shift

case $1 {
[Tt])	branch=" branch" ;;
[Nn])	branch=" static" ;;
}
shift

[[ -z $tag || -z $repo || -z $dir ]] && die check usage
shift; shift; shift
module=${dir%%/*}
if [[ $module = $dir ]]; then
	dir=.
else
	dir=${dir#*/}
fi

while (( $# > 0 )); do
	if [[ $1 = -m && $opt_done = 0 ]]; then
		rcpt="$rcpt $2"
		shift; shift
	elif [[ $1 = -f && $opt_done = 0 ]]; then
		logf=$2
		shift; shift;
	elif [[ $1 = -I && $opt_done = 0 ]]; then
		cloguri="$2"
		shift; shift;
	elif [[ $1 = -R && $opt_done = 0 ]]; then
		replyto="$2"
		shift; shift;
	else
		opt_done=1
		files[i]="$1"
		fold[i]="$2"
		fnew[i]="$3"
		shift; shift; shift
		let ++i
	fi
done

(( i > 0 )) || exit 0

let j=0
while (( j < i )); do
	print "${fold[j]}\t${fnew[j]}\t$dir/./${files[j]}"
	let ++j
done >>$F

[[ $leave = 1 ]] && exit 0

print 'old rev.\tnew rev.\tfilename' >$T
print -- '--------\t--------\t--------' >>$T
sort -t'	' -k3 $F \
    | sed -e 's!/\./!/!g' -e 's!	\./!	!' \
    >>$T
column -ts'	' <$T >$F

hn=$(hostname)
[[ $hn = *.* ]] || hn=$hn.$(domainname)

cat >$T <<EOF
CVSROOT:	$repo
Module name:	$module
Changes by:	${USER}@@$hn	$(TZ=UTC date '+%Y/%m/%d %T') UTC

$op$branch tag '$tag' affecting:

EOF

sendmail -t |&
print -p To: $rcpt
print -p Subject: CVS: $hn: $module
if [[ $replyto != NO ]]; then
	print -pr -- Mail-Followup-To: $replyto
	print -pr -- Reply-To: $replyto
fi
print -p
exec 3>&p
cat $T >&3
if [[ $cloguri = NO ]]; then
	cat $F >&3
else
	print -u3 various files\; if you want to know more, go read
	print -ru3 -- $cloguri
fi
exec 3>&-

if [[ -e $logf ]]; then
	cat $F >>$T
	print '________________________________________________________________________' >>$T
	print >>$T
	$CVSROOT/CVSROOT/log_write2 $logf <$T
fi

rm /tmp/\#cvs.*.$id
exit 0
@


2.2
log
@use log_write2
@
text
@d2 1
a2 1
# $MirBSD: CVSROOT/tag_accum2,v 2.1 2004/12/10 17:48:01 tg Exp $
d4 1
a4 1
# Copyright (c) 2004
d50 7
a56 1
id=$(perl -e 'print getpgrp();')
@


2.1
log
@MirBSD is (c) 1988-2001, 2002ff. by Thorsten "mirabile" Glaser.
MirOS is (c) 2002, 2003, 2004ff. by The MirOS Project.
All rights reserved.

Add ChangeLog and eMail preparation scripts from loki:/ocvs
@
text
@d2 1
a2 1
# $MirBSD: CVSROOT/tag_accum2,v 2.1 2004/12/10 17:37:09 tg Exp $
d154 1
a154 1
	cat $T >>$logf
@

