head	1.2;
access;
symbols
	XFree86-4_4_0:1.1.9.1 xc:1.1.9;
locks; strict;
comment	@# @;


1.2
date	2005.01.06.23.20.30;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.15.18.03.19;	author tg;	state Exp;
branches
	1.1.9.1;
next	;

1.1.9.1
date	2004.12.15.18.03.19;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge X11 out of my feet
@
text
@# $Xorg: Makefile.ini,v 1.3 2000/08/17 19:41:50 cpqbld Exp $
#
#   WARNING    WARNING    WARNING    WARNING    WARNING    WARNING    WARNING
#
# This is NOT an automatically generated Makefile!  It is hand-crafted as a 
# bootstrap, may need editing for your system.  The BOOTSTRAPCFLAGS variable
# may be given at the top of the build tree for systems that do not define
# any machine-specific preprocessor symbols.
#
# $XFree86: xc/config/imake/Makefile.ini,v 3.11 2002/04/04 14:05:34 eich Exp $

CROSSCOMPILEDIR =
CROSSCOMPILEFLAGS = -DCROSSCOMPILEDIR=\"$(CROSSCOMPILEDIR)\"
BOOTSTRAPCFLAGS = 
CC = cc
PREPROCESS_CMD = cc -E
CDEBUGFLAGS = -O
INCLUDES = -I../../include -I../../imports/x11/include/X11
CFLAGS = -DDEFAULT_CC=\"$(CC)\" $(BOOTSTRAPCFLAGS) $(CDEBUGFLAGS) $(INCLUDES)
IMAKEMDEP_CROSSCOMPILE = -DCROSSCOMPILE_CPP
SHELL = /bin/sh
RM = rm -f
MV = mv
MAKE = make
RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
	 tags TAGS make.log
NPROC = 1

imake::
	@@echo "making imake with BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS) and CROSSCOMPILEFLAGS=$(CROSSCOMPILEFLAGS) in config/imake"

imake:: imake.o
	$(CC) -o imake $(CFLAGS) imake.o

imake.o: ccimake imake.c imakemdep_cpp.h
	$(CC) -c $(CFLAGS) `./ccimake` imake.c

ccimake: ccimake.c
	$(CC) -o ccimake $(CROSSCOMPILEFLAGS) $(CFLAGS) ccimake.c

imakemdep_cpp.h: ccimake imakemdep.h
	if [ -n "$(CROSSCOMPILEDIR)" ] ; then \
	$(CROSSCOMPILEDIR)/$(PREPROCESS_CMD) `./ccimake` \
	$(IMAKEMDEP_CROSSCOMPILE) imakemdep.h > imakemdep_cpp.h; \
	else touch imakemdep_cpp.h; fi

# a derived object erroneously would get shared across platforms by clearmake
.NO_CONFIG_REC: ccimake

bootstrap:
	-@@if [ -d bootstrap ]; then exit 0; else set -x; mkdir bootstrap; fi
	$(MV) *.o bootstrap
	@@if [ -f imake.exe ]; then set -x; $(MV) imake.exe bootstrap; \
	 elif [ -f imake ]; then set -x; $(MV) imake bootstrap; else exit 0; fi

relink:
	$(RM) imake
	$(MAKE) $(MFLAGS) imake

clean:
	$(RM) ccimake imake.o imake
	$(RM_CMD) \#*
	$(RM) -r Makefile.proto Makefile Makefile.dep bootstrap
	$(RM) imakemdep_cpp.h

depend:

imake.exe::
	@@echo making imake with BOOTSTRAPCFLAGS=-DWIN32

imake.exe:: imake.obj
	cl -nologo imake.obj libc.lib kernel32.lib

imake.obj: imake.c
	cl -nologo -W2 -D__STDC__ -c -DWIN32 $(CFLAGS) imake.c

clean.Win32:
	if exist imake.exe del imake.exe
	if exist imake.obj del imake.obj

clean.os2:
	imakesvc 4 imake imake.exe imake.o /imake.exe

imake.os2: imake.c
	$(CC) -DBSD43 $(CFLAGS) -o imake.exe imake.c
	copy imake.exe \\ 
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
CFLAGS = $(BOOTSTRAPCFLAGS) $(CDEBUGFLAGS) $(INCLUDES)
@


1.1.9.1
log
@Import of XFree86(TM) 4.4.0, the exactly same as was imported
into ocvs under tag XFree86_4_4_0 path src/X-Window, as "X11"
module (for MirOS #8, probably MirOS #7 and maybe OpenBSD).
@
text
@@
