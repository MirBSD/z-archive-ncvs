head     1.1;
branch   1.1.9;
access   ;
symbols  XFree86-4_4_0:1.1.9.1 xc:1.1.9;
locks    ; strict;
comment  @# @;


1.1
date     2004.12.15.18.03.32;  author tg;  state Exp;
branches 1.1.9.1;
next     ;

1.1.9.1
date     2004.12.15.18.03.32;  author tg;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp Feb 16 02:56
.ds Dm  Feb 10 17:2
.ds Xs 5532 2 xdestroycontext.gl
.TH GLXDESTROYCONTEXT
.SH NAME
glXDestroyContext
\- destroy a GLX context

.SH C SPECIFICATION
void \f3glXDestroyContext\fP(
Display \fI*dpy\fP,
.nf
.ta \w'\f3void \fPglXDestroyContext( 'u
	GLXContext \fIctx\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2dpy\fP\ \ 'u 
\f2dpy\fP
Specifies the connection to the X server.
.TP
\f2ctx\fP
Specifies the GLX context to be destroyed.
.SH DESCRIPTION
If the GLX rendering context \f2ctx\fP is not current to any thread,
\f3glXDestroyContext\fP 
destroys it immediately.
Otherwise,
\f2ctx\fP is destroyed when it becomes not current to any thread.
In either case, the resource ID
referenced by \f2ctx\fP is freed immediately.
.SH ERRORS
\f3GLXBadContext\fP is generated if \f2ctx\fP is not a valid GLX context.
.SH SEE ALSO
\f3glXCreateContext\fP,
\f3glXMakeCurrent\fP
@


1.1.9.1
log
@Import of XFree86(TM) 4.4.0, the exactly same as was imported
into ocvs under tag XFree86_4_4_0 path src/X-Window, as "X11"
module (for MirOS #8, probably MirOS #7 and maybe OpenBSD).
@
text
@@
