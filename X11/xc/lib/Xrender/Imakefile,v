head     1.1;
branch   1.1.9;
access   ;
symbols  XFree86-4_4_0:1.1.9.1 xc:1.1.9;
locks    ; strict;
comment  @# @;


1.1
date     2004.12.15.18.10.27;  author tg;  state Exp;
branches 1.1.9.1;
next     ;

1.1.9.1
date     2004.12.15.18.10.27;  author tg;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@XCOMM $XFree86: xc/lib/Xrender/Imakefile,v 1.11 2002/11/14 21:01:18 tsi Exp $

#ifdef UseInstalled

XCOMM Allow for builds against old installed bits.  Note that this requires
XCOMM that additional files be copied (or linked) into this directory.  See
XCOMM NONSTANDARD_HEADERS below.

#ifndef SharedLibXrender
#define SharedLibXrender	YES
#endif

#ifndef NormalLibXrender
#define NormalLibXrender	(!SharedLibXrender | ForceNormalLib)
#endif

#ifndef DebugLibXrender
#define DebugLibXrender		NO
#endif

#ifndef ProfileLibXrender
#define ProfileLibXrender	NO
#endif

#undef  SharedXrenderRev
#define SharedXrenderRev	1.1
SOXRENDERREV = SharedXrenderRev

#if SharedLibXrender
#define SharedXft1Rev		1.2
SharedLibReferences(XFT1,Xft,$(XFT1SRC),SOXFT1REV,SharedXft1Rev)
#else
ProjectUnsharedLibReferences(XFT1,Xft,$(XFT1SRC),BuildLibDir)
#endif

#undef LinkBuildLibrary
#define LinkBuildLibrary(lib) MakeDir($(BUILDLIBDIR))			@@@@\
	RemoveFile($(BUILDLIBDIR)/lib)					@@@@\
	cd $(BUILDLIBDIR) && $(LN) $(BUILDLIBTOP)/$(CURRENT_DIR)/lib .
#undef _LinkBuildLibrary
#define _LinkBuildLibrary(lib) LinkBuildLibrary(lib)

#undef LinkBuildLibraryMaybe
#define LinkBuildLibraryMaybe(lib,doit) MakeDir($(BUILDLIBDIR))		@@@@\
	@@if doit; then (set -x; \					@@@@\
	  RemoveFile($(BUILDLIBDIR)/lib); \				@@@@\
	  cd $(BUILDLIBDIR) && $(LN) $(BUILDLIBTOP)/$(CURRENT_DIR)/lib .); fi

#undef  LdPreLibs
#define LdPreLibs -L$(BUILDLIBDIR) LdPreLib XLdPreLibs

LDPRELIBS = LdPreLibs

NONSTANDARD_HEADERS = extutil.h region.h render.h renderproto.h

all:: $(NONSTANDARD_HEADERS)
includes depend:: $(NONSTANDARD_HEADERS)

$(NONSTANDARD_HEADERS):
	@@echo Header file $@@ is missing.

#ifdef XBuildIncDir
RENDERCLEANDIR = $(BUILDINCROOT)
#else
RENDERCLEANDIR = $(BUILDINCDIR)
#endif

clean::
	$(RM) -r $(RENDERCLEANDIR)

#endif

#define DoNormalLib NormalLibXrender
#define DoSharedLib SharedLibXrender
#define DoDebugLib DebugLibXrender
#define DoProfileLib ProfileLibXrender
#define LibName Xrender
#define SoRev SOXRENDERREV

#ifdef XBuildIncDir
#define IncSubdir X11
#define IncSubSubdir extensions
RENDERINCDIR   = $(BUILDINCDIR)
#else
#define IncSubdir extensions
RENDERINCDIR   = $(BUILDINCROOT)
#endif

#include <Threads.tmpl>

#ifdef SharedXrenderReqs
REQUIREDLIBS = SharedXrenderReqs
#endif

#if Malloc0ReturnsNull
ALLOC_DEFINES = -DMALLOC_0_RETURNS_NULL
#endif

      DEFINES = $(ALLOC_DEFINES)
#ifdef UseInstalled
     INCLUDES = -I$(RENDERINCDIR) -I$(INCROOT)/X11 -I$(INCROOT)/X11/extensions
#else
     INCLUDES = -I$(XLIBSRC) -I$(EXTINCSRC)
#endif
     
         SRCS = Xrender.c \
                Color.c \
                Composite.c \
                Cursor.c \
                Glyph.c \
                Picture.c \
                FillRect.c \
                FillRects.c \
                Filter.c \
                Poly.c \
                Trap.c \
                Tri.c

         OBJS = Xrender.o \
                Color.o \
                Composite.o \
                Cursor.o \
                Glyph.o \
                Picture.o \
                FillRect.o \
                FillRects.o \
                Filter.o \
                Poly.o \
                Trap.o \
                Tri.o

     LINTLIBS = $(LINTXLIB)

HEADERS = Xrender.h $(NONSTANDARD_HEADERS)

#include <Library.tmpl>

DependTarget()

#ifndef clean
/* Generate a distclean target */
distclean:: clean
	RemoveFile(Makefile)
#endif
@


1.1.9.1
log
@Import of XFree86(TM) 4.4.0, the exactly same as was imported
into ocvs under tag XFree86_4_4_0 path src/X-Window, as "X11"
module (for MirOS #8, probably MirOS #7 and maybe OpenBSD).
@
text
@@
