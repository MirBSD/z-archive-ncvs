head	1.15;
access;
symbols;
locks; strict;
comment	@# @;


1.15
date	2005.01.23.01.19.37;	author tg;	state Exp;
branches;
next	1.14;

1.14
date	2005.01.22.17.01.11;	author tg;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.19.18.35.28;	author tg;	state Exp;
branches;
next	1.12;

1.12
date	2005.01.19.17.41.30;	author tg;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.19.09.41.10;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2005.01.18.18.27.00;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2005.01.18.18.19.53;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2005.01.18.16.01.14;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2005.01.17.21.58.41;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2005.01.09.21.16.07;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2005.01.05.21.08.54;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.01.05.19.21.07;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.05.17.59.16;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.05.16.04.16;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.05.10.34.09;	author tg;	state Exp;
branches;
next	;


desc
@@


1.15
log
@thou shalt not leave debugging crap in
@
text
@# $MirBSD: gcc/Makefile,v 1.14 2005/01/22 17:01:11 tg Exp $

.include <bsd.own.mk>
.include "${BSDSRCDIR}/Makefile.inc"

FSFOBJDIR!=	readlink ${.OBJDIR} || ( cd ${.OBJDIR} && pwd )

IGNORE_TGTS=	obj
BUILD_TGTS=	all clean depend lint prereq tags
INSTALL_TGTS=	includes install

EXTRA_ENV=	PATH=/bin:/usr/bin:/sbin:/usr/sbin

.MAIN: all

.for _i in ${IGNORE_TGTS}
${_i}:
	cd ${.CURDIR} && ${EXTRA_ENV} ${MAKE} -f Makefile.sub $@@
.endfor

.for _i in ${BUILD_TGTS}
${_i}: ${_STFILE_FSF}
	cd ${.CURDIR} && ${EXTRA_ENV} ${_STCMD_FSF} ${MAKE} -f Makefile.sub $@@
.endfor

.for _i in ${INSTALL_TGTS}
${_i}:
	d="${DESTDIR}"; cd $${d:-/}; [[ -n $$d ]] || d="/:/*"; \
	    env WRITEDIR="$$d" NOWRITEDIR="${FSFOBJDIR}" ${EXTRA_ENV} \
	    ${SUDO} ${SHELL} ${BSDSRCDIR}/scripts/systrace.mk make
	cd ${.CURDIR} && ${EXTRA_ENV} ${_STCMD_DEST} ${MAKE} -f Makefile.sub $@@
	sleep 1; ${SUDO} rm -f ${_STFILE_DEST}
.endfor

${_STFILE_FSF}:
	cd ${FSFOBJDIR} && env WRITEDIR="${FSFOBJDIR}" ${EXTRA_ENV} \
	    ${SHELL} ${BSDSRCDIR}/scripts/systrace.mk make

cleandir-recursive: ${_STFILE_FSF}
	cd ${.CURDIR} && ${EXTRA_ENV} ${_STCMD_FSF} \
	    ${MAKE} -f Makefile.sub cleandir

cleandir: cleandir-recursive local-cleandir

local-cleandir: .PHONY
	-sleep 1; rm -f ${_STFILE_FSF}

b-r: .PHONY
	# Test if the targets are mounted suitable for root (BTSTF)
.for _dir in ${BSDOBJDIR} ${BSDRELDIR}
	mkdir -p ${_dir} || ${SUDO} mkdir -p ${_dir}
	${SUDO} touch ${_dir}/permissions.test
	${SUDO} chown root:wheel ${_dir}/permissions.test
	${SUDO} rm ${_dir}/permissions.test
.endfor
	touch ${BSDOBJDIR}/permissions.test && rm ${BSDOBJDIR}/permissions.test
	@@echo ============================================================
	@@date
	@@echo ============================================================
	${MAKE} obj
	${MAKE}
	${SUDO} ${MAKE} install
	${MAKE} release BSDRELDIR=${BSDRELDIR}

release: .PHONY
	mkdir -p ${BSDRELDIR}/gcc ${BSDRELDIR}/rel \
	    || ${SUDO} mkdir -p ${BSDRELDIR}/gcc ${BSDRELDIR}/rel
	cd ${BSDSRCDIR} && ${EXTRA_ENV} ${MAKE} distrib-dirs mksystrace-dest \
	    DESTDIR=${BSDRELDIR}/gcc
	cd ${.CURDIR} && exec ${SUDO} ${MAKE} install DESTDIR=${BSDRELDIR}/gcc
	@@echo "============================================================"
	@@echo "Checking files:"
	@@echo ""
	-cd ${BSDSRCDIR}/distrib/lists/gcc && DESTDIR=${BSDRELDIR}/gcc \
	    RELEASEDIR=${BSDRELDIR}/rel ${EXTRA_ENV} ${SUDO} ${SHELL} \
	    ${BSDSRCDIR}/scripts/tarck
	@@echo "============================================================"
.ifdef WAIT_CHECKFLIST
	@@read a?'Press Return to continue...'
.endif
	cd ${BSDSRCDIR}/distrib/lists/gcc && DESTDIR=${BSDRELDIR}/gcc \
	    RELEASEDIR=${BSDRELDIR}/rel ${EXTRA_ENV} ${SUDO} ${SHELL} \
	    ${BSDSRCDIR}/scripts/tarmk ${OSrev}
	-cd ${BSDRELDIR}/rel; cksum gcc*.ngz \
	    | cat - CKSUM | ${SUDO} sort -k3 -o CKSUM
	-cd ${BSDRELDIR}/rel; rmd160 gcc*.ngz \
	    | cat - RMD160 | ${SUDO} sort -o RMD160
	@@echo ============================================================
	@@echo Build and Release for the GNU Compiler Collection complete.
	@@date; uname -a
	@@echo ============================================================

.include <bsd.obj.mk>
@


1.14
log
@first b-r complete
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.13 2005/01/19 18:35:28 tg Exp $
a80 2

xmr:
@


1.13
log
@remove /usr/local, /usr/games and friends from $PATH during build
(and install)

rationale: gmake's found anyway; this way it won't accidentally
pull in glib, gettext, bison or something.
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.12 2005/01/19 17:41:30 tg Exp $
d57 1
a57 1
	@@print ============================================================
d59 1
a59 1
	@@print ============================================================
d81 2
d86 1
a86 1
	-cd ${RELEASEDIR}; cksum gcc*.ngz \
d88 1
a88 1
	-cd ${RELEASEDIR}; rmd160 gcc*.ngz \
d90 2
a91 2
	@@print ============================================================
	@@print Build and Release for the GNU Compiler Collection complete.
d93 1
a93 1
	@@print ============================================================
@


1.12
log
@fix make b-r
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.11 2005/01/19 09:41:10 tg Exp $
d12 2
d18 1
a18 1
	cd ${.CURDIR} && ${MAKE} -f Makefile.sub $@@
d23 1
a23 1
	cd ${.CURDIR} && ${_STCMD_FSF} ${MAKE} -f Makefile.sub $@@
d29 1
a29 1
	    env WRITEDIR="$$d" NOWRITEDIR="${FSFOBJDIR}" \
d31 1
a31 1
	cd ${.CURDIR} && ${_STCMD_DEST} ${MAKE} -f Makefile.sub $@@
d36 1
a36 1
	cd ${FSFOBJDIR} && env WRITEDIR="${FSFOBJDIR}" \
d40 2
a41 1
	cd ${.CURDIR} && ${_STCMD_FSF} ${MAKE} -f Makefile.sub cleandir
d68 1
a68 1
	cd ${BSDSRCDIR} && ${MAKE} distrib-dirs mksystrace-dest \
d75 1
a75 1
	    RELEASEDIR=${BSDRELDIR}/rel ${SUDO} ${SHELL} \
d82 1
a82 1
	    RELEASEDIR=${BSDRELDIR}/rel ${SUDO} ${SHELL} \
@


1.11
log
@| make: don't know how to make /usr/releng/base/usr/lib/crtbegin.o. Stop in /usr/src/distrib/special/chat.
this is how far I get, now I need a break and a _good_ solution
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.10 2005/01/18 18:27:00 tg Exp $
d71 1
a71 1
	-cd ${BSDSRCDIR}/../distrib/lists/gcc && DESTDIR=${BSDRELDIR}/gcc \
d78 1
a78 1
	cd ${BSDSRCDIR}/../distrib/lists/gcc && DESTDIR=${BSDRELDIR}/gcc \
@


1.10
log
@sync with etc
re-think _what_ *.ngz expands to
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.9 2005/01/18 18:19:53 tg Exp $
d30 1
a30 1
	${SUDO} rm -f ${_STFILE_DEST}
d43 1
a43 1
	-rm -f ${_STFILE_FSF}
@


1.9
log
@enhance with make release and b-r
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.8 2005/01/18 16:01:14 tg Exp $
d81 4
a84 2
	-cd ${RELEASEDIR}; cksum *.ngz | ${SUDO} sort -o CKSUM -k 3
	-cd ${RELEASEDIR}; rmd160 *.ngz | ${SUDO} sort -o RMD160
@


1.8
log
@fix path to own object directory after recent commit
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.7 2005/01/17 21:58:41 tg Exp $
d45 43
@


1.7
log
@sync
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.6 2005/01/09 21:16:07 tg Exp $
d34 1
a34 1
	cd ${BSDOBJDIR} && env WRITEDIR="${FSFOBJDIR}" \
@


1.6
log
@moved sync+sleep 1 to systrace.mk
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.5 2005/01/05 21:08:54 tg Exp $
d26 2
a27 1
	d="${DESTDIR}"; cd $${d:-/} && env WRITEDIR="$${d:-/}:$$d/*" \
d34 1
a34 1
	cd ${FSFOBJDIR} && env WRITEDIR="${FSFOBJDIR}/*" \
@


1.5
log
@say hello to Objective-C
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.4 2005/01/05 19:21:07 tg Exp $
a27 1
	@@sync; sleep 1
@


1.4
log
@conditionalise libada build and try to catch some systrace bogons
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.3 2005/01/05 17:59:16 tg Exp $
d9 1
a9 1
BUILD_TGTS=	all clean cleandir depend lint prereq tags
d37 4
a40 1
cleandir: local-cleandir
@


1.3
log
@add prereq to the list of subdir'd targets
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.2 2005/01/05 16:04:16 tg Exp $
d25 4
a28 1
${_i}: ${_STFILE_DEST}
d30 1
a36 5
${_STFILE_DEST}:
	d="${DESTDIR}"; cd $${d:-/} && env WRITEDIR="$${d:-/}:$$d/*" \
	    ${SUDO} ${SHELL} ${BSDSRCDIR}/scripts/systrace.mk make
	touch .stfile.dest

d40 1
a40 2
	test ! -e .stfile.dest || ${SUDO} rm -f ${_STFILE_DEST}
	-rm -f ${_STFILE_FSF} .stfile.dest
@


1.2
log
@bring this thing into a pretty usable shape
as a bonus, if ${DESTDIR}/systrace.policy is generated
by us, it's removed by us on make cleandir as well
@
text
@d1 1
a1 1
# $MirBSD: gcc/Makefile,v 1.1 2005/01/05 10:34:09 tg Exp $
d9 1
a9 1
BUILD_TGTS=	all clean cleandir depend lint tags
@


1.1
log
@my baby seems to build so far quite fine
@
text
@d1 1
a1 1
# $MirBSD$
d3 2
a4 2
  SUBDIR+= gcc
  SUBDIR+= libada
d6 39
a44 1
.include <bsd.subdir.mk>
@

