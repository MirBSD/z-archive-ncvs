head	1.3;
access;
symbols
	gcc-3_4-20050121:1.1.2.1
	gcc-3_4-20050114:1.1.2.1
	gcc_20041231-propolice-3_4_1-1:1.1.2.1
	gcc_propolice:1.1.2.1.0.2
	gcc-3_4-20041231:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.3
date	2005.01.09.14.02.17;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.09.13.22.18;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.04.17.22.42;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.01.04.17.22.42;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@oups. gcc 3.4.4 doesn't use symcat.h any more
we live in an ANSI C world, I s'pose
@
text
@/* $MirBSD$ */

/* Copyright (C) 2001, 2002 Free Software Foundation, Inc.
   Contributed by Joseph Myers <jsm28@@cam.ac.uk>.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2, or (at your option) any later
version.

GCC is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING.  If not, write to the Free
Software Foundation, 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.  */

/* This header provides a declarative way of describing the attributes
   that are applied to some functions by default.

   Before including this header, you must define the following macros.
   In each case where there is an ENUM, it is an identifier used to
   reference the tree in subsequent definitions.

   DEF_ATTR_NULL_TREE (ENUM)

     Constructs a NULL_TREE.

   DEF_ATTR_INT (ENUM, VALUE)

     Constructs an INTEGER_CST with value VALUE (an integer representable
     in HOST_WIDE_INT).

   DEF_ATTR_IDENT (ENUM, STRING)

     Constructs an IDENTIFIER_NODE for STRING.

   DEF_ATTR_TREE_LIST (ENUM, PURPOSE, VALUE, CHAIN)

     Constructs a TREE_LIST with given PURPOSE, VALUE and CHAIN (given
     as previous ENUM names).  */

DEF_ATTR_NULL_TREE (ATTR_NULL)

/* Construct a tree for a given integer and a list containing it.  */
#define DEF_ATTR_FOR_INT(VALUE)					\
  DEF_ATTR_INT (ATTR_##VALUE, VALUE)			\
  DEF_ATTR_TREE_LIST (ATTR_LIST_##VALUE, ATTR_NULL,	\
		      ATTR_##VALUE, ATTR_NULL)
DEF_ATTR_FOR_INT (0)
DEF_ATTR_FOR_INT (1)
DEF_ATTR_FOR_INT (2)
DEF_ATTR_FOR_INT (3)
DEF_ATTR_FOR_INT (4)
#undef DEF_ATTR_FOR_INT

/* Construct a tree for a list of two integers.  */
#define DEF_LIST_INT_INT(VALUE1, VALUE2)				 \
  DEF_ATTR_TREE_LIST (ATTR_LIST_##VALUE1##_##VALUE2, ATTR_NULL,		 \
		      ATTR_##VALUE1, ATTR_LIST_##VALUE2)
DEF_LIST_INT_INT (1,0)
DEF_LIST_INT_INT (1,2)
DEF_LIST_INT_INT (1,3)
DEF_LIST_INT_INT (2,0)
DEF_LIST_INT_INT (2,3)
DEF_LIST_INT_INT (3,0)
DEF_LIST_INT_INT (3,2)
DEF_LIST_INT_INT (3,4)
DEF_LIST_INT_INT (1,3_2)
#undef DEF_LIST_INT_INT

/* Construct tress for identifiers.  */
DEF_ATTR_IDENT (ATTR_BOUNDED, "bounded")
DEF_ATTR_IDENT (ATTR_BUFFER, "buffer")
DEF_ATTR_IDENT (ATTR_CONST, "const")
DEF_ATTR_IDENT (ATTR_FORMAT, "format")
DEF_ATTR_IDENT (ATTR_FORMAT_ARG, "format_arg")
DEF_ATTR_IDENT (ATTR_MALLOC, "malloc")
DEF_ATTR_IDENT (ATTR_NONNULL, "nonnull")
DEF_ATTR_IDENT (ATTR_NORETURN, "noreturn")
DEF_ATTR_IDENT (ATTR_NOTHROW, "nothrow")
DEF_ATTR_IDENT (ATTR_PRINTF, "printf")
DEF_ATTR_IDENT (ATTR_ASM_FPRINTF, "asm_fprintf")
DEF_ATTR_IDENT (ATTR_GCC_DIAG, "gcc_diag")
DEF_ATTR_IDENT (ATTR_GCC_CDIAG, "gcc_cdiag")
DEF_ATTR_IDENT (ATTR_GCC_CXXDIAG, "gcc_cxxdiag")
DEF_ATTR_IDENT (ATTR_PURE, "pure")
DEF_ATTR_IDENT (ATTR_SCANF, "scanf")
DEF_ATTR_IDENT (ATTR_SIZE, "size")
DEF_ATTR_IDENT (ATTR_STRFMON, "strfmon")
DEF_ATTR_IDENT (ATTR_STRING, "string")
DEF_ATTR_IDENT (ATTR_STRFTIME, "strftime")

DEF_ATTR_TREE_LIST (ATTR_NOTHROW_LIST, ATTR_NOTHROW, ATTR_NULL, ATTR_NULL)

DEF_ATTR_TREE_LIST (ATTR_CONST_NOTHROW_LIST, ATTR_CONST,	\
			ATTR_NULL, ATTR_NOTHROW_LIST)
DEF_ATTR_TREE_LIST (ATTR_PURE_NOTHROW_LIST, ATTR_PURE,		\
			ATTR_NULL, ATTR_NOTHROW_LIST)
DEF_ATTR_TREE_LIST (ATTR_NORETURN_NOTHROW_LIST, ATTR_NORETURN,	\
			ATTR_NULL, ATTR_NOTHROW_LIST)
DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_LIST, ATTR_MALLOC,	\
			ATTR_NULL, ATTR_NOTHROW_LIST)

DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_1, ATTR_NONNULL, ATTR_LIST_1, \
			ATTR_NOTHROW_LIST)
DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_2, ATTR_NONNULL, ATTR_LIST_2, \
			ATTR_NOTHROW_LIST)
DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_3, ATTR_NONNULL, ATTR_LIST_3, \
			ATTR_NOTHROW_LIST)
/* Nothrow functions whose first and second parameters are nonnull pointers.  */
DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_1_2, ATTR_NONNULL, ATTR_LIST_2, \
			ATTR_NOTHROW_NONNULL_1)
/* Nothrow functions whose first and fourth parameters are nonnull pointers.  */
DEF_ATTR_TREE_LIST (ATTR_NOTHROW_NONNULL_1_4, ATTR_NONNULL, ATTR_LIST_4, \
			ATTR_NOTHROW_NONNULL_1)
/* Nothrow const functions whose first parameter is a nonnull pointer.  */
DEF_ATTR_TREE_LIST (ATTR_CONST_NOTHROW_NONNULL_1, ATTR_CONST, ATTR_NULL, \
			ATTR_NOTHROW_NONNULL_1)
/* Nothrow pure functions whose first parameter is a nonnull pointer.  */
DEF_ATTR_TREE_LIST (ATTR_PURE_NOTHROW_NONNULL_1, ATTR_PURE, ATTR_NULL, \
			ATTR_NOTHROW_NONNULL_1)
/* Nothrow pure functions whose first and second parameters are nonnull pointers.  */
DEF_ATTR_TREE_LIST (ATTR_PURE_NOTHROW_NONNULL_1_2, ATTR_PURE, ATTR_NULL, \
			ATTR_NOTHROW_NONNULL_1_2)
/* Nothrow malloc functions whose first parameter is a nonnull pointer.  */
DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_NONNULL_1, ATTR_MALLOC, ATTR_NULL, \
			ATTR_NOTHROW_NONNULL_1)

/* Construct a tree for a format attribute.  */
#define DEF_FORMAT_ATTRIBUTE(TYPE, FA, VALUES)				 \
  DEF_ATTR_TREE_LIST (ATTR_##TYPE##_##VALUES, ATTR_NULL,		 \
		      ATTR_##TYPE, ATTR_LIST_##VALUES)			 \
  DEF_ATTR_TREE_LIST (ATTR_FORMAT_##TYPE##_##VALUES, ATTR_FORMAT,	 \
		      ATTR_##TYPE##_##VALUES, ATTR_NOTHROW_NONNULL_##FA)
DEF_FORMAT_ATTRIBUTE(PRINTF,1,1_0)
DEF_FORMAT_ATTRIBUTE(PRINTF,1,1_2)
DEF_FORMAT_ATTRIBUTE(PRINTF,2,2_0)
DEF_FORMAT_ATTRIBUTE(PRINTF,2,2_3)
DEF_FORMAT_ATTRIBUTE(PRINTF,3,3_0)
DEF_FORMAT_ATTRIBUTE(PRINTF,3,3_4)
DEF_FORMAT_ATTRIBUTE(SCANF,1,1_0)
DEF_FORMAT_ATTRIBUTE(SCANF,1,1_2)
DEF_FORMAT_ATTRIBUTE(SCANF,2,2_0)
DEF_FORMAT_ATTRIBUTE(SCANF,2,2_3)
DEF_FORMAT_ATTRIBUTE(STRFTIME,3,3_0)
DEF_FORMAT_ATTRIBUTE(STRFMON,3,3_4)
#undef DEF_FORMAT_ATTRIBUTE

/* Construct a tree for a format_arg attribute.  */
#define DEF_FORMAT_ARG_ATTRIBUTE(FA)					\
  DEF_ATTR_TREE_LIST (ATTR_FORMAT_ARG_##FA, ATTR_FORMAT_ARG,		\
		      ATTR_LIST_##FA, ATTR_NOTHROW_NONNULL_##FA)
DEF_FORMAT_ARG_ATTRIBUTE(1)
DEF_FORMAT_ARG_ATTRIBUTE(2)
#undef DEF_FORMAT_ARG_ATTRIBUTE

/* Construct a tree for a bounded attribute. */

/* Generate a fragment for future use in a bounded attr, e.g. ATTR_BUFFER_2_3  */
#define DEF_ATTR_BOUNDED_FRAG(TYPE, VALUES)  \
  DEF_ATTR_TREE_LIST (ATTR_##TYPE##_##VALUES, ATTR_NULL,	\
		      ATTR_##TYPE, ATTR_LIST_##VALUES)
/* Create bounded attribute chained to nothrow, e.g. of the
   form ATTR_NOTHROW_BOUNDED_BUFFER_2_3  */
#define DEF_NOTHROW_BOUNDED_ATTRIBUTE(TYPE, VALUES)  \
  DEF_ATTR_TREE_LIST (ATTR_NOTHROW_BOUNDED_##TYPE##_##VALUES, ATTR_BOUNDED, \
		      ATTR_##TYPE##_##VALUES, ATTR_NOTHROW_LIST)
/* the same with NONNULL */
#define DEF_NOTHROW_BOUNDED_ATTRIBUTE_NONNULL(TYPE, VALUES, NN)  \
  DEF_ATTR_TREE_LIST (ATTR_NOTHROW_BOUNDED_NN_##NN##_##TYPE##_##VALUES, ATTR_BOUNDED, \
		      ATTR_##TYPE##_##VALUES, \
		      ATTR_NOTHROW_NONNULL_##NN)
/* Chain multiple nothrow bounded buffer attributes together  */
#define DEF_MULTIPLE_NOTHROW_BOUNDED_BUFFER_ATTRIBUTE(VAL1,VAL2)  \
  DEF_ATTR_TREE_LIST (ATTR_NOTHROW_BOUNDED_BUFFER_##VAL1##_##VAL2,ATTR_BOUNDED,\
		      ATTR_BUFFER_##VAL1,  \
	 	      ATTR_NOTHROW_BOUNDED_BUFFER_##VAL2)
/* the same with NONNULL */
#define DEF_MULTIPLE_NOTHROW_BOUNDED_BUFFER_ATTRIBUTE_NN(VAL1,VAL2,NN)  \
  DEF_ATTR_TREE_LIST (ATTR_NOTHROW_BOUNDED_BUFFER_##VAL1##_##VAL2##_NN_##NN,ATTR_BOUNDED,\
		      ATTR_BUFFER_##VAL1,  \
	 	      ATTR_NOTHROW_BOUNDED_NN_##NN##_##BUFFER_##VAL2)
/* Chain a bounded attribute to a format printf attribute  */
#define DEF_FORMAT_PRINTF_BOUNDED_ATTRIBUTE(TYPE, VALUES, PREPEND,PRINTVALS) \
  DEF_ATTR_TREE_LIST (PREPEND##TYPE##_##VALUES, \
		      ATTR_BOUNDED, ATTR_##TYPE##_##VALUES, \
		      ATTR_FORMAT_PRINTF_##PRINTVALS)
DEF_ATTR_BOUNDED_FRAG(BUFFER,1_2)
DEF_ATTR_BOUNDED_FRAG(BUFFER,1_3)
DEF_ATTR_BOUNDED_FRAG(BUFFER,2_3)
DEF_ATTR_BOUNDED_FRAG(SIZE,1_3_2)
DEF_ATTR_BOUNDED_FRAG(STRING,1_2)
DEF_NOTHROW_BOUNDED_ATTRIBUTE(BUFFER,1_2)
DEF_NOTHROW_BOUNDED_ATTRIBUTE(BUFFER,1_3)
DEF_NOTHROW_BOUNDED_ATTRIBUTE(BUFFER,2_3)
DEF_NOTHROW_BOUNDED_ATTRIBUTE_NONNULL(SIZE,1_3_2,1_4)
DEF_NOTHROW_BOUNDED_ATTRIBUTE_NONNULL(BUFFER,1_3,1)
DEF_NOTHROW_BOUNDED_ATTRIBUTE_NONNULL(BUFFER,1_3,1_2)
DEF_MULTIPLE_NOTHROW_BOUNDED_BUFFER_ATTRIBUTE_NN(2_3,1_3,1_2)
DEF_FORMAT_PRINTF_BOUNDED_ATTRIBUTE(STRING,1_2,ATTR_PRINTF_3_4_BOUNDED_,3_4)
DEF_FORMAT_PRINTF_BOUNDED_ATTRIBUTE(STRING,1_2,ATTR_PRINTF_3_0_BOUNDED_,3_0)

#undef DEF_ATTR_BOUNDED_FRAG
#undef DEF_NOTHROW_BOUNDED_ATTRIBUTE
#undef DEF_MULTIPLE_NOTHROW_BOUNDED_ATTRIBUTE
#undef DEF_FORMAT_PRINTF_BOUNDED_ATTRIBUTE
@


1.2
log
@this awfully looks like anil madhavapeddy's bounds checker,
from espie's openbsd port, builtin*def hacked by me too
@
text
@d1 2
d167 2
a168 2
  DEF_ATTR_TREE_LIST (CONCAT4 (ATTR_,TYPE,_,VALUES), ATTR_NULL,	\
		      CONCAT2 (ATTR_,TYPE), CONCAT2 (ATTR_LIST_,VALUES))
d172 2
a173 2
  DEF_ATTR_TREE_LIST (CONCAT4 (ATTR_NOTHROW_BOUNDED_,TYPE,_,VALUES), ATTR_BOUNDED, \
		      CONCAT4 (ATTR_,TYPE,_,VALUES), ATTR_NOTHROW_LIST)
d176 3
a178 3
  DEF_ATTR_TREE_LIST (CONCAT6 (ATTR_NOTHROW_BOUNDED_NN_,NN,_,TYPE,_,VALUES), ATTR_BOUNDED, \
		      CONCAT4 (ATTR_,TYPE,_,VALUES), \
		      CONCAT2 (ATTR_NOTHROW_NONNULL_,NN))
d181 3
a183 3
  DEF_ATTR_TREE_LIST (CONCAT4(ATTR_NOTHROW_BOUNDED_BUFFER_,VAL1,_,VAL2),ATTR_BOUNDED,\
		      CONCAT2(ATTR_BUFFER_,VAL1),  \
	 	      CONCAT2(ATTR_NOTHROW_BOUNDED_BUFFER_,VAL2))
d186 3
a188 3
  DEF_ATTR_TREE_LIST (CONCAT6(ATTR_NOTHROW_BOUNDED_BUFFER_,VAL1,_,VAL2,_NN,NN),ATTR_BOUNDED,\
		      CONCAT2(ATTR_BUFFER_,VAL1),  \
	 	      CONCAT4(ATTR_NOTHROW_BOUNDED_NN_,NN,_,BUFFER_,VAL2))
d191 3
a193 3
  DEF_ATTR_TREE_LIST (CONCAT4 (PREPEND,TYPE,_,VALUES), \
		      ATTR_BOUNDED, CONCAT4 (ATTR_,TYPE,_,VALUES), \
		      CONCAT2(ATTR_FORMAT_PRINTF_,PRINTVALS))
@


1.1
log
@Initial revision
@
text
@d66 1
d70 1
d72 1
d76 2
d92 1
d94 1
d161 50
@


1.1.2.1
log
@Import GCC 3.4-stable, FSF tag -rgcc-ss-3_4-20041231
with all top-level non-directories (files) and these
directories removed:
- INSTALL
- contrib
- gcc/po
- gcc/testsuite
- gcc/treelang
- include
- intl
- libffi/testsuite
- libiberty
- libjava/testsuite
- libstdc++-v3/docs
- libstdc++-v3/po
- libstdc++-v3/testsuite
- maintainer-scripts
- zlib
@
text
@@
