head	1.1;
branch	1.1.2;
access;
symbols
	gcc-3_4-20050121:1.1.2.1
	gcc-3_4-20050114:1.1.2.1
	gcc_20041231-propolice-3_4_1-1:1.1.2.1
	gcc_propolice:1.1.2.1.0.2
	gcc-3_4-20041231:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.1
date	2005.01.04.17.24.07;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.01.04.17.24.07;	author tg;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@# Under VMS, directory names cannot contain dots.
version:=$(shell echo $(gcc_version) | sed -e 's/\./_/g')

libsubdir=$(libdir)/gcc-lib

# Rules for linker and compiler wrappers.  These are only useful on
# a VMS host.
EXTRA_PROGRAMS=ld.exe decc.exe
vms-ld.o : $(srcdir)/config/alpha/vms-ld.c
	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)
ld.exe : vms-ld.o
	$(CC) -o $@@ vms-ld.o ../libiberty/libiberty.a

vms-cc.o : $(srcdir)/config/alpha/vms-cc.c
	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)
decc.exe : vms-cc.o
	$(CC) -o $@@ vms-cc.o ../libiberty/libiberty.a

# These extra parts can only be compiled on a VMS host and are only needed
# on a VMS target.  The rules are in t-vms.
VMS_EXTRA_PARTS=vcrt0.o pcrt0.o

# Doesn't work on VMS
USE_COLLECT2=
@


1.1.2.1
log
@Import GCC 3.4-stable, FSF tag -rgcc-ss-3_4-20041231
with all top-level non-directories (files) and these
directories removed:
- INSTALL
- contrib
- gcc/po
- gcc/testsuite
- gcc/treelang
- include
- intl
- libffi/testsuite
- libiberty
- libjava/testsuite
- libstdc++-v3/docs
- libstdc++-v3/po
- libstdc++-v3/testsuite
- maintainer-scripts
- zlib
@
text
@@
