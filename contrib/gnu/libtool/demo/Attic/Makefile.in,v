head	1.2;
access;
symbols
	libtool-1_5_10:1.1.2.3
	libtool-1_5_8:1.1.2.2
	libtool-1_4_3:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2004.02.03.19.41.43;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.02.03.17.55.51;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.02.03.17.55.51;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.08.09.22.59.31;	author tg;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2004.10.14.17.46.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* MirOSify
* bootstrap
* nuke unneeded stuff
@
text
@# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @@SHELL@@

srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
VPATH = @@srcdir@@
prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

bindir = @@bindir@@
sbindir = @@sbindir@@
libexecdir = @@libexecdir@@
datadir = @@datadir@@
sysconfdir = @@sysconfdir@@
sharedstatedir = @@sharedstatedir@@
localstatedir = @@localstatedir@@
libdir = @@libdir@@
infodir = @@infodir@@
mandir = @@mandir@@
includedir = @@includedir@@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@@PACKAGE@@
pkglibdir = $(libdir)/@@PACKAGE@@
pkgincludedir = $(includedir)/@@PACKAGE@@

top_builddir = .

ACLOCAL = @@ACLOCAL@@
AUTOCONF = @@AUTOCONF@@
AUTOMAKE = @@AUTOMAKE@@
AUTOHEADER = @@AUTOHEADER@@

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
transform = @@program_transform_name@@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @@host_alias@@
host_triplet = @@host@@
AS = @@AS@@
CC = @@CC@@
DLLTOOL = @@DLLTOOL@@
ECHO = @@ECHO@@
EXEEXT = @@EXEEXT@@
LIBM = @@LIBM@@
LIBTOOL = @@LIBTOOL@@
LIBTOOL_DEPS = @@LIBTOOL_DEPS@@
LN_S = @@LN_S@@
MAKEINFO = @@MAKEINFO@@
OBJDUMP = @@OBJDUMP@@
OBJEXT = @@OBJEXT@@
PACKAGE = @@PACKAGE@@
RANLIB = @@RANLIB@@
STATIC = @@STATIC@@
STRIP = @@STRIP@@
VERSION = @@VERSION@@

AUTOMAKE_OPTIONS = no-dependencies foreign

EXTRA_DIST = acinclude.m4

# Build a libtool library, libhello.la for installation in libdir.
lib_LTLIBRARIES = libhello.la
libhello_la_SOURCES = hello.c foo.c
libhello_la_LIBADD = $(LIBM)
libhello_la_LDFLAGS = -version-info 3:12:1

include_HEADERS = foo.h
@@BINARY_HELLDL_TRUE@@BUILD_helldl = @@BINARY_HELLDL_TRUE@@helldl
@@BINARY_HELLDL_FALSE@@BUILD_helldl = 

bin_PROGRAMS = hell hell.static $(BUILD_helldl)

# Build hell from main.c and libhello.la
hell_SOURCES = main.c
hell_LDADD = libhello.la

# Create a statically linked version of hell.
hell_static_SOURCES = main.c
hell_static_LDADD = libhello.la
hell_static_LDFLAGS = $(STATIC)

# Create a version of hell that does a preloaded dlopen.
@@BINARY_HELLDL_TRUE@@helldl_SOURCES = @@BINARY_HELLDL_TRUE@@dlmain.c
@@BINARY_HELLDL_TRUE@@helldl_LDFLAGS = @@BINARY_HELLDL_TRUE@@-export-dynamic -dlpreopen libhello.la
@@BINARY_HELLDL_TRUE@@helldl_DEPENDENCIES = @@BINARY_HELLDL_TRUE@@libhello.la

@@BINARY_HELLDL_FALSE@@bin_SCRIPTS = @@BINARY_HELLDL_FALSE@@helldl

#----------------------------------------------------------------------
# The following declarations are only used in the testsuite:
#----------------------------------------------------------------------

hardcode_tests = hc-direct hc-libflag hc-libpath hc-minusL

CLEANFILES = $(hardcode_tests) $(EXTRA_LIBRARIES) $(EXTRA_LTLIBRARIES) $(EXTRA_PROGRAMS)

# Unfortunately, in order to test libtool thoroughly, we need access
# to its private directory.
objdir = `sed -n -e 's/^objdir=\(.*\)$$/\1/p' ../libtool`

# This is one of the essential tests for deplibs_check_method=pass_all.
# If this one passes with pass_all, it is likely that pass_all works
EXTRA_LIBRARIES = libhell0.a
libhell0_a_SOURCES = hello.c foo.c
EXTRA_LTLIBRARIES = libhell1.la libhell2.la
libhell1_la_SOURCES = hell1.c
libhell1_la_LIBADD = -L. -lhell0
libhell1_la_LDFLAGS = -rpath $(libdir)
libhell1_la_DEPENDENCIES = libhell0.a
libhell2_la_SOURCES = hell2.c
libhell2_la_LIBADD = -L. -lhell0
libhell2_la_LDFLAGS = -rpath $(libdir)
libhell2_la_DEPENDENCIES = libhell0.a
EXTRA_PROGRAMS = hell0
hell0_SOURCES = main.c
hell0_LDADD = libhell1.la libhell2.la $(LIBM)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_CLEAN_FILES = 

DEFS = @@DEFS@@ -I. -I$(srcdir) 
CPPFLAGS = @@CPPFLAGS@@
LDFLAGS = @@LDFLAGS@@
LIBS = @@LIBS@@
libhell0_a_LIBADD = 
libhell0_a_OBJECTS =  hello.$(OBJEXT) foo.$(OBJEXT)
AR = ar
LTLIBRARIES =  $(lib_LTLIBRARIES)

libhell1_la_OBJECTS =  hell1.lo
libhell2_la_OBJECTS =  hell2.lo
libhello_la_DEPENDENCIES = 
libhello_la_OBJECTS =  hello.lo foo.lo
@@BINARY_HELLDL_TRUE@@bin_PROGRAMS =  hell$(EXEEXT) hell.static \
@@BINARY_HELLDL_TRUE@@helldl$(EXEEXT)
@@BINARY_HELLDL_FALSE@@bin_PROGRAMS =  hell$(EXEEXT) hell.static
PROGRAMS =  $(bin_PROGRAMS)

hell0_OBJECTS =  main.$(OBJEXT)
hell0_DEPENDENCIES =  libhell1.la libhell2.la
hell0_LDFLAGS = 
hell_OBJECTS =  main.$(OBJEXT)
hell_DEPENDENCIES =  libhello.la
hell_LDFLAGS = 
hell_static_OBJECTS =  main.$(OBJEXT)
hell_static_DEPENDENCIES =  libhello.la
@@BINARY_HELLDL_TRUE@@helldl_OBJECTS =  dlmain.$(OBJEXT)
helldl_LDADD = $(LDADD)
SCRIPTS =  $(bin_SCRIPTS)

CFLAGS = @@CFLAGS@@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@@
HEADERS =  $(include_HEADERS)

DIST_COMMON =  README Makefile.am Makefile.in acinclude.m4 aclocal.m4 \
configure configure.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libhell0_a_SOURCES) $(libhell1_la_SOURCES) $(libhell2_la_SOURCES) $(libhello_la_SOURCES) $(hell0_SOURCES) $(hell_SOURCES) $(hell_static_SOURCES) $(helldl_SOURCES)
OBJECTS = $(libhell0_a_OBJECTS) $(libhell1_la_OBJECTS) $(libhell2_la_OBJECTS) $(libhello_la_OBJECTS) $(hell0_OBJECTS) $(hell_OBJECTS) $(hell_static_OBJECTS) $(helldl_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$@@ CONFIG_HEADERS= $(SHELL) ./config.status

$(ACLOCAL_M4):  configure.in  acinclude.m4
	cd $(srcdir) && $(ACLOCAL)

config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: $(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libhell0.a: $(libhell0_a_OBJECTS) $(libhell0_a_DEPENDENCIES)
	-rm -f libhell0.a
	$(AR) cru libhell0.a $(libhell0_a_OBJECTS) $(libhell0_a_LIBADD)
	$(RANLIB) libhell0.a

mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

libhell1.la: $(libhell1_la_OBJECTS) $(libhell1_la_DEPENDENCIES)
	$(LINK)  $(libhell1_la_LDFLAGS) $(libhell1_la_OBJECTS) $(libhell1_la_LIBADD) $(LIBS)

libhell2.la: $(libhell2_la_OBJECTS) $(libhell2_la_DEPENDENCIES)
	$(LINK)  $(libhell2_la_LDFLAGS) $(libhell2_la_OBJECTS) $(libhell2_la_LIBADD) $(LIBS)

libhello.la: $(libhello_la_OBJECTS) $(libhello_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libhello_la_LDFLAGS) $(libhello_la_OBJECTS) $(libhello_la_LIBADD) $(LIBS)

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

hell0$(EXEEXT): $(hell0_OBJECTS) $(hell0_DEPENDENCIES)
	@@rm -f hell0$(EXEEXT)
	$(LINK) $(hell0_LDFLAGS) $(hell0_OBJECTS) $(hell0_LDADD) $(LIBS)

hell$(EXEEXT): $(hell_OBJECTS) $(hell_DEPENDENCIES)
	@@rm -f hell$(EXEEXT)
	$(LINK) $(hell_LDFLAGS) $(hell_OBJECTS) $(hell_LDADD) $(LIBS)

hell.static: $(hell_static_OBJECTS) $(hell_static_DEPENDENCIES)
	@@rm -f hell.static
	$(LINK) $(hell_static_LDFLAGS) $(hell_static_OBJECTS) $(hell_static_LDADD) $(LIBS)

helldl$(EXEEXT): $(helldl_OBJECTS) $(helldl_DEPENDENCIES)
	@@rm -f helldl$(EXEEXT)
	$(LINK) $(helldl_LDFLAGS) $(helldl_OBJECTS) $(helldl_LDADD) $(LIBS)

install-binSCRIPTS: $(bin_SCRIPTS)
	@@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_SCRIPT) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \
	    $(INSTALL_SCRIPT) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	  else if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_SCRIPT) $(srcdir)/$$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \
	    $(INSTALL_SCRIPT) $(srcdir)/$$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; fi; \
	done

uninstall-binSCRIPTS:
	@@$(NORMAL_UNINSTALL)
	list='$(bin_SCRIPTS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	done

install-includeHEADERS: $(include_HEADERS)
	@@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(includedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(includedir)/$$p; \
	done

uninstall-includeHEADERS:
	@@$(NORMAL_UNINSTALL)
	list='$(include_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(includedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	-rm -rf $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) zxf $(distdir).tar.gz
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	dc_install_base=`cd $(distdir)/=inst && pwd`; \
	cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) dist
	-rm -rf $(distdir)
	@@banner="$(distdir).tar.gz is ready for distribution"; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"
dist: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
dist-all: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
distdir: $(DISTFILES)
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	@@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES install-binPROGRAMS \
		install-binSCRIPTS
install-exec: install-exec-am

install-data-am: install-includeHEADERS
install-data: install-data-am

install-am: all-am
	@@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-binPROGRAMS \
		uninstall-binSCRIPTS uninstall-includeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) \
		$(DESTDIR)$(bindir) $(DESTDIR)$(includedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-compile mostlyclean-libtool \
		mostlyclean-libLTLIBRARIES mostlyclean-binPROGRAMS \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-compile clean-libtool clean-libLTLIBRARIES \
		clean-binPROGRAMS clean-tags clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-compile distclean-libtool \
		distclean-libLTLIBRARIES distclean-binPROGRAMS \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am
	-rm -f config.status

maintainer-clean-am:  maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-libLTLIBRARIES \
		maintainer-clean-binPROGRAMS maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@@echo "This command is intended for maintainers to use;"
	@@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am
	-rm -f config.status

.PHONY: mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool mostlyclean-libLTLIBRARIES \
distclean-libLTLIBRARIES clean-libLTLIBRARIES \
maintainer-clean-libLTLIBRARIES uninstall-libLTLIBRARIES \
install-libLTLIBRARIES mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS uninstall-binSCRIPTS install-binSCRIPTS \
uninstall-includeHEADERS install-includeHEADERS tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean

# create a script that says that -dlopen is not supported
@@BINARY_HELLDL_FALSE@@helldl helldl$(EXEEXT):
@@BINARY_HELLDL_FALSE@@	rm -f $@@
@@BINARY_HELLDL_FALSE@@	echo '#! /bin/sh' > $@@
@@BINARY_HELLDL_FALSE@@	echo '-dlopen is unsupported' >> $@@
@@BINARY_HELLDL_FALSE@@	chmod +x $@@

$(OBJECTS): libtool
libtool: $(LIBTOOL_DEPS)
	$(SHELL) ./config.status --recheck

# The following rules are only for the libtool demo and tests.
# Regenerate our acinclude.m4 only if it doesn't exist.
$(srcdir)/acinclude.m4:
	rm -f $(srcdir)/acinclude.m4
	cd $(srcdir) && $(LN_S) ../libtool.m4 acinclude.m4

# Test programs to see what gets hardcoded.
.PHONY: hardcode
hardcode: $(hardcode_tests)
hc-direct: $(hell_OBJECTS) $(hell_DEPENDENCIES) $(libdir)/libhello.la
	@@rm -f hc-direct
	@@echo "You may ignore any linking errors from the following command:"
	@@shlib=./$(objdir)/libhello.a; \
	  eval "`egrep '^library_names' libhello.la`"; \
	  for lib in $$library_names; do \
	    shlib="./$(objdir)/$$lib"; \
	  done; \
	  eval `egrep -e '^(hardcode_.*|wl)=' libtool`; \
	  libdir=$(libdir); \
	  flag=`eval echo \"$$hardcode_libdir_flag_spec\"`; \
	  echo "$(CC) $(CFLAGS) $(LDFLAGS) -o $@@ $(hell_OBJECTS) $$shlib $(LIBS) $(LIBM) $$flag || echo unsupported > $@@"; \
	  eval "$(CC) $(CFLAGS) $(LDFLAGS) -o $@@ $(hell_OBJECTS) $$shlib $(LIBS) $(LIBM) $$flag || echo unsupported > $@@"

hc-libflag: $(hell_OBJECTS) $(hell_DEPENDENCIES) $(libdir)/libhello.la
	@@eval `egrep -e '^(hardcode_.*|wl)=' libtool`; \
	  libdir=`pwd`/$(objdir); \
	  flag=`eval echo \"$$hardcode_libdir_flag_spec\"`; \
	  if test -z "$$flag"; then \
	    echo "echo unsupported > $@@"; \
	    echo unsupported > $@@ || status="$$?"; \
	  else \
	    echo "$(CC) $(CFLAGS) $(LDFLAGS) -o $@@ $(hell_OBJECTS) $$flag -L$(libdir) -lhello $(LIBS) $(LIBM)"; \
	    $(CC) $(CFLAGS) $(LDFLAGS) -o $@@ $(hell_OBJECTS) $$flag -L$(libdir) -lhello $(LIBS) $(LIBM) || status="$$?"; \
	  fi; \
	  exit $$status

hc-libpath: $(hell_OBJECTS) $(hell_DEPENDENCIES) $(libdir)/libhello.la
	@@rm -f hc-libpath
	@@echo "You may ignore any linking errors from the following command:"
	@@eval `egrep -e '^(shlibpath_var|hardcode_.*|wl)=' libtool`; \
	  libdir=$(libdir); \
	  flag=`eval echo \"$$hardcode_libdir_flag_spec\"`; \
	  echo "$$shlibpath_var=./$(objdir) $(CC) $(CFLAGS) $(LDFLAGS) -o $@@ $(hell_OBJECTS) -lhello $(LIBS) $(LIBM) $$flag || echo unsupported > $@@"; \
	  eval "$$shlibpath_var=./$(objdir) $(CC) $(CFLAGS) $(LDFLAGS) -o $@@ $(hell_OBJECTS) -lhello $(LIBS) $(LIBM) $$flag || echo unsupported > $@@"

hc-minusL: $(hell_OBJECTS) $(hell_DEPENDENCIES)
	@@rm -f hc-minusL
	@@eval `egrep -e '^(hardcode_.*|wl)=' libtool`; \
	  libdir=$(libdir); \
	  flag=`eval echo \"$$hardcode_libdir_flag_spec\"`; \
	  echo "$(CC) $(CFLAGS) $(LDFLAGS) -o $@@ $(hell_OBJECTS) -L./$(objdir) -lhello $(LIBS) $(LIBM) $$flag || echo unsupported > $@@"; \
	  eval "$(CC) $(CFLAGS) $(LDFLAGS) -o $@@ $(hell_OBJECTS) -L./$(objdir) -lhello $(LIBS) $(LIBM) $$flag || echo unsupported > $@@"

deplibs-check: hell0

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU Libtool 1.4.3 (last of the 1.4 series)

Requires to bootstrap:
* autoconf 2.13-o
* automake 1.4-p5
or later.
@
text
@@


1.1.2.2
log
@http://ftp.gnu.org/gnu/libtool/libtool-1.5.8.tar.gz
@
text
@d1 1
a1 2
# Makefile.in generated by automake 1.8.5 from Makefile.am.
# @@configure_input@@
d3 1
a3 2
# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
a12 1
@@SET_MAKE@@
d14 1
d16 5
d22 12
d35 1
a35 1
SOURCES = $(libhell0_a_SOURCES) $(libhell1_la_SOURCES) $(libhell2_la_SOURCES) $(libhello_la_SOURCES) $(hell_SOURCES) $(hell0_SOURCES) $(hell_static_SOURCES) $(helldl_SOURCES)
a36 3
srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
VPATH = @@srcdir@@
d40 1
d42 6
a47 1
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
d49 5
a53 5
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
d60 1
a61 89
bin_PROGRAMS = hell$(EXEEXT) hell_static$(EXEEXT) $(am__EXEEXT_1)
EXTRA_PROGRAMS = hell0$(EXEEXT)
DIST_COMMON = README $(am__configure_deps) $(include_HEADERS) \
	$(srcdir)/../config.guess $(srcdir)/../config.sub \
	$(srcdir)/../install-sh $(srcdir)/../ltmain.sh \
	$(srcdir)/../missing $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/configure
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(mkdir_p)
CONFIG_CLEAN_FILES =
ARFLAGS = cru
libhell0_a_AR = $(AR) $(ARFLAGS)
libhell0_a_LIBADD =
am_libhell0_a_OBJECTS = hello.$(OBJEXT) foo.$(OBJEXT)
libhell0_a_OBJECTS = $(am_libhell0_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am_libhell1_la_OBJECTS = hell1.lo
libhell1_la_OBJECTS = $(am_libhell1_la_OBJECTS)
am_libhell2_la_OBJECTS = hell2.lo
libhell2_la_OBJECTS = $(am_libhell2_la_OBJECTS)
am__DEPENDENCIES_1 =
libhello_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libhello_la_OBJECTS = hello.lo foo.lo
libhello_la_OBJECTS = $(am_libhello_la_OBJECTS)
@@BINARY_HELLDL_TRUE@@am__EXEEXT_1 = helldl$(EXEEXT)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_hell_OBJECTS = main.$(OBJEXT)
hell_OBJECTS = $(am_hell_OBJECTS)
hell_DEPENDENCIES = libhello.la
am_hell0_OBJECTS = main.$(OBJEXT)
hell0_OBJECTS = $(am_hell0_OBJECTS)
hell0_DEPENDENCIES = libhell1.la libhell2.la $(am__DEPENDENCIES_1)
am_hell_static_OBJECTS = main.$(OBJEXT)
hell_static_OBJECTS = $(am_hell_static_OBJECTS)
hell_static_DEPENDENCIES = libhello.la
am__helldl_SOURCES_DIST = dlmain.c
@@BINARY_HELLDL_TRUE@@am_helldl_OBJECTS = dlmain.$(OBJEXT)
helldl_OBJECTS = $(am_helldl_OBJECTS)
helldl_LDADD = $(LDADD)
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@@
SOURCES = $(libhell0_a_SOURCES) $(libhell1_la_SOURCES) \
	$(libhell2_la_SOURCES) $(libhello_la_SOURCES) $(hell_SOURCES) \
	$(hell0_SOURCES) $(hell_static_SOURCES) $(helldl_SOURCES)
DIST_SOURCES = $(libhell0_a_SOURCES) $(libhell1_la_SOURCES) \
	$(libhell2_la_SOURCES) $(libhello_la_SOURCES) $(hell_SOURCES) \
	$(hell0_SOURCES) $(hell_static_SOURCES) \
	$(am__helldl_SOURCES_DIST)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @@ACLOCAL@@
AMDEP_FALSE = @@AMDEP_FALSE@@
AMDEP_TRUE = @@AMDEP_TRUE@@
AMTAR = @@AMTAR@@
AR = @@AR@@
a62 6
AUTOCONF = @@AUTOCONF@@
AUTOHEADER = @@AUTOHEADER@@
AUTOMAKE = @@AUTOMAKE@@
AWK = @@AWK@@
BINARY_HELLDL_FALSE = @@BINARY_HELLDL_FALSE@@
BINARY_HELLDL_TRUE = @@BINARY_HELLDL_TRUE@@
a63 11
CCDEPMODE = @@CCDEPMODE@@
CFLAGS = @@CFLAGS@@
CPP = @@CPP@@
CPPFLAGS = @@CPPFLAGS@@
CXX = @@CXX@@
CXXCPP = @@CXXCPP@@
CXXDEPMODE = @@CXXDEPMODE@@
CXXFLAGS = @@CXXFLAGS@@
CYGPATH_W = @@CYGPATH_W@@
DEFS = @@DEFS@@
DEPDIR = @@DEPDIR@@
a65 4
ECHO_C = @@ECHO_C@@
ECHO_N = @@ECHO_N@@
ECHO_T = @@ECHO_T@@
EGREP = @@EGREP@@
a66 7
F77 = @@F77@@
FFLAGS = @@FFLAGS@@
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
INSTALL_STRIP_PROGRAM = @@INSTALL_STRIP_PROGRAM@@
LDFLAGS = @@LDFLAGS@@
a67 2
LIBOBJS = @@LIBOBJS@@
LIBS = @@LIBS@@
a70 1
LTLIBOBJS = @@LTLIBOBJS@@
a74 6
PACKAGE_BUGREPORT = @@PACKAGE_BUGREPORT@@
PACKAGE_NAME = @@PACKAGE_NAME@@
PACKAGE_STRING = @@PACKAGE_STRING@@
PACKAGE_TARNAME = @@PACKAGE_TARNAME@@
PACKAGE_VERSION = @@PACKAGE_VERSION@@
PATH_SEPARATOR = @@PATH_SEPARATOR@@
a75 2
SET_MAKE = @@SET_MAKE@@
SHELL = @@SHELL@@
d79 1
a79 44
ac_ct_AR = @@ac_ct_AR@@
ac_ct_AS = @@ac_ct_AS@@
ac_ct_CC = @@ac_ct_CC@@
ac_ct_CXX = @@ac_ct_CXX@@
ac_ct_DLLTOOL = @@ac_ct_DLLTOOL@@
ac_ct_F77 = @@ac_ct_F77@@
ac_ct_OBJDUMP = @@ac_ct_OBJDUMP@@
ac_ct_RANLIB = @@ac_ct_RANLIB@@
ac_ct_STRIP = @@ac_ct_STRIP@@
am__fastdepCC_FALSE = @@am__fastdepCC_FALSE@@
am__fastdepCC_TRUE = @@am__fastdepCC_TRUE@@
am__fastdepCXX_FALSE = @@am__fastdepCXX_FALSE@@
am__fastdepCXX_TRUE = @@am__fastdepCXX_TRUE@@
am__include = @@am__include@@
am__leading_dot = @@am__leading_dot@@
am__quote = @@am__quote@@
bindir = @@bindir@@
build = @@build@@
build_alias = @@build_alias@@
build_cpu = @@build_cpu@@
build_os = @@build_os@@
build_vendor = @@build_vendor@@
datadir = @@datadir@@
exec_prefix = @@exec_prefix@@
host = @@host@@
host_alias = @@host_alias@@
host_cpu = @@host_cpu@@
host_os = @@host_os@@
host_vendor = @@host_vendor@@
includedir = @@includedir@@
infodir = @@infodir@@
install_sh = @@install_sh@@
libdir = @@libdir@@
libexecdir = @@libexecdir@@
localstatedir = @@localstatedir@@
mandir = @@mandir@@
mkdir_p = @@mkdir_p@@
oldincludedir = @@oldincludedir@@
prefix = @@prefix@@
program_transform_name = @@program_transform_name@@
sbindir = @@sbindir@@
sharedstatedir = @@sharedstatedir@@
sysconfdir = @@sysconfdir@@
target_alias = @@target_alias@@
d81 1
d88 2
a89 1
libhello_la_LDFLAGS = -no-undefined -version-info 3:12:1
d91 1
d93 2
a94 1
@@BINARY_HELLDL_TRUE@@BUILD_helldl = helldl
d106 5
a110 4
@@BINARY_HELLDL_TRUE@@helldl_SOURCES = dlmain.c
@@BINARY_HELLDL_TRUE@@helldl_LDFLAGS = -export-dynamic -dlpreopen libhello.la
@@BINARY_HELLDL_TRUE@@helldl_DEPENDENCIES = libhello.la
@@BINARY_HELLDL_FALSE@@bin_SCRIPTS = helldl
d115 1
d118 1
a118 5
# 'hell0' in EXTRA_PROGRAMS gets translated to 'hell0.exe'; but we
# must explicitly list the wrapper script 'hell0'.  (bin_PROGRAMS
# are handled seamlessly by automake rules; the extra step is only
# necessary for EXTRA_PROGRAMS)
CLEANFILES = $(hardcode_tests) $(EXTRA_LIBRARIES) $(EXTRA_LTLIBRARIES) $(EXTRA_PROGRAMS) hell0
d122 1
a122 4
objdir = `$(LIBTOOL) --config | sed -n -e 's/^objdir=\(.*\)$$/\1/p'`
SET_HARDCODE_FLAGS = \
  eval `$(LIBTOOL) --config | sed -n -e '/^hardcode_.*=/p; /^wl=/p'`

d131 1
a131 1
libhell1_la_LDFLAGS = -no-undefined -rpath $(libdir)
d135 1
a135 1
libhell2_la_LDFLAGS = -no-undefined -rpath $(libdir)
d137 1
d140 40
a179 1
all: all-am
d181 12
d194 10
a203 26
.SUFFIXES: .c .lo .o .obj
am--refresh:
	@@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@@ $(am__depfiles_maybe);; \
	esac;
d205 1
a205 1
$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
d207 39
d247 8
a254 5
$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
libhell0.a: $(libhell0_a_OBJECTS) $(libhell0_a_DEPENDENCIES) 
d256 1
a256 1
	$(libhell0_a_AR) libhell0.a $(libhell0_a_OBJECTS) $(libhell0_a_LIBADD)
d258 10
d270 1
a270 1
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
d273 2
a274 3
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
d280 2
a281 4
	@@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
d284 1
a284 9
clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libhell1.la: $(libhell1_la_OBJECTS) $(libhell1_la_DEPENDENCIES) 
d286 2
a287 1
libhell2.la: $(libhell2_la_OBJECTS) $(libhell2_la_DEPENDENCIES) 
d289 2
a290 1
libhello.la: $(libhello_la_OBJECTS) $(libhello_la_DEPENDENCIES) 
d292 10
d304 1
a304 1
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
d306 3
a308 7
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
d314 2
a315 4
	@@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
d318 5
a322 7
clean-binPROGRAMS:
	@@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
hell$(EXEEXT): $(hell_OBJECTS) $(hell_DEPENDENCIES) 
d325 3
a327 5
hell0$(EXEEXT): $(hell0_OBJECTS) $(hell0_DEPENDENCIES) 
	@@rm -f hell0$(EXEEXT)
	$(LINK) $(hell0_LDFLAGS) $(hell0_OBJECTS) $(hell0_LDADD) $(LIBS)
hell_static$(EXEEXT): $(hell_static_OBJECTS) $(hell_static_DEPENDENCIES) 
	@@rm -f hell_static$(EXEEXT)
d329 2
a330 1
helldl$(EXEEXT): $(helldl_OBJECTS) $(helldl_DEPENDENCIES) 
d333 1
d336 1
a336 1
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
d338 7
a344 6
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
d349 2
a350 4
	@@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
a352 24
mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
d355 1
a355 1
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
d357 3
a359 4
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
d364 2
a365 4
	@@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
a367 8
ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
d370 4
a373 9
TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
d375 4
a378 8
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
d381 3
a383 5
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
d385 6
a390 8
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here
d393 3
a395 1
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
d397 2
a398 59
distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/..
	@@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	$(AMTAR) chof - $(distdir) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	$(AMTAR) chof - $(distdir) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)
d404 7
a410 21
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf - ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(AMTAR) xf - ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(AMTAR) xf - ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
d416 33
a448 37
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
d451 5
a455 2
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES
d457 1
a457 6
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
a458 1
uninstall: uninstall-am
d462 12
a474 6
installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
d481 2
a482 1
	-rm -f $(CONFIG_CLEAN_FILES)
d485 3
a487 3
	@@echo "This command is intended for maintainers to use"
	@@echo "it deletes files that may require special tools to rebuild."
clean: clean-am
d489 1
a489 2
clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am
d491 3
a493 5
distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags
d495 1
a495 1
dvi: dvi-am
d497 4
a500 1
dvi-am:
d502 2
a503 1
html: html-am
d505 6
a510 14
info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:
d513 1
a513 4
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic
d515 15
a529 34
mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool ctags dist dist-all dist-bzip2 dist-gzip \
	dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-exec install-exec-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-includeHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES
d555 1
a555 1
	  eval "`grep '^library_names' libhello.la`"; \
d559 1
a559 1
	  $(SET_HARDCODE_FLAGS); \
d566 1
a566 1
	@@$(SET_HARDCODE_FLAGS); \
d581 1
a581 2
	@@$(SET_HARDCODE_FLAGS); \
	  eval `$(LIBTOOL) --config | grep '^shlibpath_var='`; \
d589 1
a589 1
	@@$(SET_HARDCODE_FLAGS); \
d595 2
a596 1
deplibs-check: hell0$(EXEEXT)
@


1.1.2.3
log
@http://ftp.gnu.org/gnu/libtool/libtool-1.5.10.tar.gz
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.1 from Makefile.am.
a41 1
build_triplet = @@build@@
d46 4
a49 5
	$(srcdir)/../compile $(srcdir)/../config.guess \
	$(srcdir)/../config.sub $(srcdir)/../install-sh \
	$(srcdir)/../ltmain.sh $(srcdir)/../missing \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/configure
d58 1
a58 1
mkinstalldirs = $(install_sh) -d
d65 1
a65 8
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"
d74 1
a74 1
am_libhello_la_OBJECTS = libhello_la-hello.lo libhello_la-foo.lo
d99 1
a99 1
LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) \
d103 1
a103 1
LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
a203 2
am__tar = @@am__tar@@
am__untar = @@am__untar@@
a237 1
libhello_la_CFLAGS = $(AM_CFLAGS)
d268 1
a268 2
CLEANFILES = $(hardcode_tests) $(EXTRA_LIBRARIES) $(EXTRA_LTLIBRARIES) \
	$(EXTRA_PROGRAMS) hell0
d338 1
a338 1
	    f=$(am__strip_dir) \
d346 2
a347 2
	@@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
a440 6
libhello_la-hello.lo: hello.c
	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhello_la_CFLAGS) $(CFLAGS) -c -o libhello_la-hello.lo `test -f 'hello.c' || echo '$(srcdir)/'`hello.c

libhello_la-foo.lo: foo.c
	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libhello_la_CFLAGS) $(CFLAGS) -c -o libhello_la-foo.lo `test -f 'foo.c' || echo '$(srcdir)/'`foo.c

d455 1
a455 1
	  f=$(am__strip_dir) \
d463 1
a463 1
	  f=$(am__strip_dir) \
d552 1
a552 1
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
d556 1
a556 1
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
d560 1
a560 1
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
d573 1
a573 1
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
d582 1
a582 1
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
d584 1
a584 1
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
d586 1
a586 1
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
d672 1
a672 1
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
@


