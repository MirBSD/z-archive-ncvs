head	1.2;
access;
symbols
	libtool-1_5_10:1.1.2.2
	libtool-1_5_8:1.1.2.2
	libtool-1_5-20040215:1.1.2.2
	libtool-1_4_3:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@ * @;


1.2
date	2004.02.03.19.41.55;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.02.03.17.55.56;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.02.03.17.55.56;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.02.15.13.09.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* MirOSify
* bootstrap
* nuke unneeded stuff
@
text
@/* main.c -- inter-library dependency test program
   Copyright (C) 1998, 1999, 2000 Free Software Foundation
   by Thomas Tanner <tanner@@ffii.org>
   This file is part of GNU Libtool.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
USA. */

#include "l1/l1.h"
#include "l2/l2.h"
#include "l4/l4.h"
#include <stdio.h>
#include <string.h>

int
main (argc,argv)
    int argc;
    char **argv;
{
  printf("dependencies:\n");
  func_l1(0);
  func_l2(0);
  func_l4(0);
  if (argc == 2 && strcmp (argv[1], "-alt") == 0
      && var_l1 + var_l2 + var_l4 == 8)
	return 0;
  if (var_l1 + var_l2 + var_l4 != 20)
  	return 1;
  return 0;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU Libtool 1.4.3 (last of the 1.4 series)

Requires to bootstrap:
* autoconf 2.13-o
* automake 1.4-p5
or later.
@
text
@@


1.1.2.2
log
@libtool 1.5 branch from today
@
text
@a38 1
  printf("var_l1(%d) + var_l2(%d) + var_l4(%d) == %d\n",var_l1,var_l2,var_l4, var_l1 + var_l2 + var_l4);
a39 2
	{
	printf("var_l1(%d) + var_l2(%d) + var_l4(%d) != 20\n",var_l1,var_l2,var_l4);
a40 1
	}
@

