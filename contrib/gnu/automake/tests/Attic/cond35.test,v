head	1.2;
access;
symbols
	cvs-200408041000:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2004.08.04.10.28.05;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.08.04.10.06.29;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.08.04.10.06.29;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@we basically only want the GNU master files
@
text
@#!/bin/sh
# Copyright (C) 2004  Free Software Foundation, Inc.
#
# This file is part of GNU Automake.
#
# GNU Automake is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# GNU Automake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Automake; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

# Check rules output for parser defined conditionally.
# Report from Roman Fietze.

required='flex bison gcc'
. ./defs

set -e

cat >>configure.in <<'EOF'
AM_CONDITIONAL([CASE_A], test -z "$case_B")
AC_PROG_CC
AM_PROG_LEX
AC_PROG_YACC
AC_OUTPUT
EOF

cat >>Makefile.am <<'EOF'
AM_YFLAGS               =       -d

BUILT_SOURCES           =       tparse.h

if CASE_A
bin_PROGRAMS            =       ta
ta_SOURCES              =       ta.c tparse.h tscan.l tparse.y
ta_LDADD                =       $(LEXLIB)
else
bin_PROGRAMS            =       tb
tb_SOURCES              =       tb.c tparse.h tscan.l tparse.y
tb_LDADD                =       $(LEXLIB)
endif


test-ta:
	test -f ta$(EXEEXT)
test-tb:
	test -f tb$(EXEEXT)
EOF

$ACLOCAL
$AUTOCONF
$AUTOMAKE --add-missing

test `grep tparse.h: Makefile.in | wc -l` = 1

cat > tscan.l << 'END'
%%
"END"   return EOF;
END

cat > tparse.y << 'END'
%{
void yyerror (char *s) {}
%}
%token EOF
%%
foobar : 'f' 'o' 'o' 'b' 'a' 'r' EOF {};
END

cat >ta.c <<'END'
int main()
{
  return 0;
}
END

cp ta.c tb.c

./configure
$MAKE
$MAKE test-ta

./configure case_B=yes
$MAKE
$MAKE test-tb
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU automake CVS-current from anoncvs@@subversions.gnu.org:/cvsroot/automake
@
text
@@
