head	1.2;
access;
symbols
	cvs-200408041120:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@ * @;


1.2
date	2004.08.04.11.48.37;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.08.04.11.33.06;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.08.04.11.33.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@die baby die
@
text
@/* Common reasons that make a format string invalid.
   Copyright (C) 2003 Free Software Foundation, Inc.
   Written by Bruno Haible <bruno@@clisp.org>, 2003.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

/* These macros return freshly allocated error message strings, intended
   to be stored in *invalid_reason.  */

#define INVALID_UNTERMINATED_DIRECTIVE() \
  xstrdup (_("The string ends in the middle of a directive."))

#define INVALID_MIXES_NUMBERED_UNNUMBERED() \
  xstrdup (_("The string refers to arguments both through absolute argument numbers and through unnumbered argument specifications."))

#define INVALID_ARGNO_0(directive_number) \
  xasprintf (_("In the directive number %u, the argument number 0 is not a positive integer."), directive_number)
#define INVALID_WIDTH_ARGNO_0(directive_number) \
  xasprintf (_("In the directive number %u, the width's argument number 0 is not a positive integer."), directive_number)
#define INVALID_PRECISION_ARGNO_0(directive_number) \
  xasprintf (_("In the directive number %u, the precision's argument number 0 is not a positive integer."), directive_number)

#define INVALID_CONVERSION_SPECIFIER(directive_number,conv_char) \
  (c_isprint (conv_char) \
   ? xasprintf (_("In the directive number %u, the character '%c' is not a valid conversion specifier."), directive_number, conv_char) \
   : xasprintf (_("The character that terminates the directive number %u is not a valid conversion specifier."), directive_number))

#define INVALID_INCOMPATIBLE_ARG_TYPES(arg_number) \
  xasprintf (_("The string refers to argument number %u in incompatible ways."), arg_number)
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU gettext from :pserver:anoncvs@@sources.redhat.com:/cvs/gettext pass anoncvs
@
text
@@
