head	2.2;
access;
symbols
	cgiirc-0_5_5:1.1.3.2
	cgiirc-0_5_4:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@# @;


2.2
date	2005.01.18.20.26.31;	author tg;	state dead;
branches;
next	2.1;

2.1
date	2004.12.19.14.29.17;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.19.14.26.30;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2004.12.19.14.26.30;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2005.01.18.20.03.58;	author tg;	state Exp;
branches;
next	;


desc
@@


2.2
log
@nah, doesnt work like I would
@
text
@# $Id: Util.pm,v 1.1.3.1 2004/10/27 10:56:50 tg Exp $
package IRC::Util;
use Exporter;
@@ISA = qw(Exporter);
@@EXPORT = qw(is_vaild_channel is_vaild_nickname is_vaild_server make_lowercase check_mode match_mask fullhost2nick fullhost2host add_mode del_mode);

use strict;

sub is_vaild_channel {
   return 0 if length $_[0] > 64;
   return 0 if $_[0] =~ /[ ,]/;
   return 1 if $_[0] =~ /^[#&]/;
   return 0;
}

sub is_vaild_nickname {
   return 0 if length $_[0] > 32 or length $_[0] < 1;
   return 0 if $_[0] =~ /[^A-Za-z0-9-_\[\]\\\`\^\{\}\|]/;
   return 0 if $_[0] =~ /^[^A-Za-z_\\\[\]\`\^\{\}\|]/;
   return 1;
}

sub is_vaild_server {
   return 0 if $_[0] !~ /\./;
   return 0 if $_[0] =~ /[!@@]/;
   return 0 if $_[0] =~ /[^-A-Za-z0-9\*\._]/;
   return 1;
}

sub make_lowercase{
   my $lc = shift;
   $lc =~ tr/A-Z\[\]\\/a-z\{\}\|/;
   return $lc;
}

sub check_mode {
   my($mode,$bit) = @@_;
   return 1 if $mode =~ /\S*\Q$bit\E/;
}

# should really split all the parts up...
sub match_mask {
   my($check,$mask) = @@_;
   $mask = quotemeta $mask;
   $mask =~ s/\\\?/./g;
   $mask =~ s/\\\*/.*?/g;
   return 1 if $check =~ /$mask/;
   0;
}

sub fullhost2nick {
   my $host = shift;
   $host =~ s/!.*$//;
   return $host;
}

sub fullhost2host {
   my $host = shift;
   $host =~ s/^.*?!//;
   return $host;
}

sub add_mode{
   my($mode,$bit) = @@_;
   return $mode if $mode =~ /^\S*\Q$bit\E/;
   $mode =~ s/^(\S*)/$1$bit/;
   return $mode;
}

sub del_mode{
   my($mode,$bit) = @@_;
   return $mode if $mode !~ /^\S*\Q$bit\E/;
   $mode =~ s/^(\S*)$bit/$1/;
   return $mode;
}

1;
@


2.1
log
@*sigh* update to MirCGIIRC
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.3.1
log
@Import cgiirc 0.5.4 (pristine) again
@
text
@@


1.1.3.2
log
@there's a new CGI::IRC out, with utf-8 supposedly, and fireschrott bugfixes
@
text
@d1 1
a1 1
# $Id: Util.pm,v 1.4 2003/10/27 17:18:52 dgl Exp $
@

