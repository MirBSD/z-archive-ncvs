head	1.2;
access;
symbols
	cvs-200501070130:1.1.5.1 TNF:1.1.5;
locks; strict;
comment	@# @;


1.2
date	2005.01.07.01.49.10;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.07.01.31.22;	author tg;	state Exp;
branches
	1.1.5.1;
next	;

1.1.5.1
date	2005.01.07.01.31.22;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge
@
text
@#!/bin/ksh
# $MirBSD: src/usr.bin/wtf/wtf,v 1.6 2004/12/05 13:26:09 tg Exp $
# $NetBSD: wtf,v 1.7 2000/11/21 00:18:52 soren Exp $
#-
# Copyright (c) 2002, 2003, 2004
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.

acronyms=${ACRONYMDB:-/usr/share/misc/acronyms}

[[ $1 = is || $1 = ist ]] && shift

[ $# -lt 1 ] && echo "Usage: $(basename $0) [is] <acronym>"

rv=0
while [ $# -gt 0 ] ; do
	target="$(echo "$1" | tr '[:lower:]' '[:upper:]' \
	    | sed 'y/äöü/ÄÖÜ/')"
	ans="$(fgrep "$target" <$acronyms 2>/dev/null \
	    | sed -ne "/^$(echo "$target" \
	    | sed s,/,.,)[[:space:]]/s\`^${target}[[:space:]]*\`\`p")"
	if [[ -z $ans ]]; then
		target="$1"
		ans="$(whatis "$target" 2>/dev/null \
		    | egrep "^${target}[, ]" 2>/dev/null)" \
		 || ans=$(export IFS=\|; fgrep -i "$target" \
		    /usr/ports/INDEX 2>/dev/null \
		    | while read a b c d e; do \
			echo "${a}|${d%% \(uses*}"; done \
		    | fgrep -i "$target" 2>/dev/null \
		    | sort -u \
		    | column -ts'|' \
		)
	fi
	if [[ -n $ans ]]; then
		echo "   ${target}:\n$ans"
	  else
		echo "Gee...  I don't know what '${target}' means..." 1>&2
		rv=1
		if [ -x /usr/bin/dict ]; then
			echo "Let's try The Dictionary..." 1>&2
			rv=2
			dict "$target" && rv=0
		fi
	fi
	shift
done
exit $rv
@


1.1
log
@Initial revision
@
text
@d1 6
a6 1
#!/bin/sh
d8 6
a13 1
#	$NetBSD: wtf,v 1.11 2003/04/25 19:08:31 jmmv Exp $
d15 7
a21 7
# Public domain
#

usage() {
	echo "usage: `basename $0` [-f dbfile] [-t type] [is] <acronym>"
	exit 1
}
d25 1
a25 27
args=`getopt f:t: $*`
if [ $? -ne 0 ]; then
	usage
fi
set -- $args
while [ $# -gt 0 ]; do
	case "$1" in
		-f)
			acronyms=$2; shift
			;;
		-t)
			acronyms=/usr/share/misc/acronyms.$2; shift
			;;
		--)
			shift; break
			;;
	esac
	shift
done

if [ X"$1" = X"is" ] ; then
	shift
fi

if [ $# -lt 1 ] ; then
	usage
fi
d27 1
a27 4
if [ ! -f $acronyms ]; then
	echo "`basename $0`: cannot open acronyms database file \`$acronyms'"
	exit 1
fi
d31 27
a57 12
	target=`echo $1 | tr '[a-z]' '[A-Z]'`
	ans=`fgrep $target < $acronyms 2>/dev/null \
             | sed -ne "\|^$target[[:space:]]|s|^$target[[:space:]]*||p"`
	if [ "$ans" != "" ] ; then
		echo "$target: $ans"
	else
		ans=`whatis $1 2> /dev/null | egrep "^$1[, ]" 2> /dev/null`
		if [ $? -eq 0 ] ; then
			echo "$1: $ans"
		else
			echo "Gee...  I don't know what $1 means..." 1>&2
			rv=1
@


1.1.5.1
log
@the "original" wtf
@
text
@@
