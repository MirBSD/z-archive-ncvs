head	2.4;
access;
symbols;
locks; strict;
comment	@# @;


2.4
date	2005.02.04.20.02.31;	author tg;	state Exp;
branches;
next	2.3;

2.3
date	2005.01.14.21.29.11;	author tg;	state Exp;
branches;
next	2.2;

2.2
date	2005.01.14.01.07.50;	author tg;	state Exp;
branches;
next	2.1;

2.1
date	2005.01.03.16.23.05;	author tg;	state Exp;
branches;
next	;


desc
@@


2.4
log
@prevent from expanding control characters or options in certain places
@
text
@# $MirBSD: src/etc/profile,v 2.3 2005/01/14 21:29:11 tg Exp $

[ -s "${HOME}/.profile.preinit" ] && . ${HOME}/.profile.preinit

[ -n "$BASH_VERSION" ] && alias print='echo -e'
umask 022
[ -z "$TERM" ] && if test -x /usr/bin/tset; then
	MIROS=$(ulimit -c 0; /usr/bin/tset -sQ \?vt220)
	if [ -z "$MIROS" ]; then
		export TERM=vt100
	else
		eval $MIROS
	fi
else
	export TERM=vt220
fi
case "${TERM}:${COLORTERM}" in
interix:*|screen:*|wsvt*|xterm*)
	export COLORTERM=1
	;;
*:NO|vt*)
	unset COLORTERM
	;;
esac

if [ -x /usr/bin/id ]; then
	USER_ID="$(ulimit -c 0; /usr/bin/id -u 2>/dev/null)"
	[ -z "$USER_ID" ] && USER_ID=0
else
	USER_ID=0
fi
[ -z "$HOME" ] && HOME=/root
export USER_ID HOME
if [ -z "$USER" ]; then
	export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/root/.etc/bin:/usr/local/bin
	unset COLORTERM
elif [ $USER_ID -eq 0 ]; then
	export PATH=/root/.etc/bin:/usr/sbin:/sbin:/usr/bin:/bin:/usr/X11R6/bin:/usr/local/bin:/usr/games
else
	export PATH=~/.etc/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11R6/bin:/usr/local/bin:/usr/games
fi
export PS1='SINGLE:${PWD} # '
export CVSUMASK=002
export IRCSERVER=irc6.oftc.net
export IRCNAME="MirOS packages a kernel, userland and the attitude"
HOSTNAME="$(ulimit -c 0; hostname -s 2>/dev/null)"
OSNAME="$(ulimit -c 0; uname -s 2>/dev/null)"
export HOSTNAME="${HOSTNAME:-noFQDN}" OSNAME="${OSNAME:-unknown}"
export PAGER=less BROWSER=lynx
EDITOR="$(whence -p jupp 2>/dev/null)" || \
    EDITOR="$(whence -p jstar 2>/dev/null)" || \
    EDITOR=/usr/local/bin/jupp
[ -x "$EDITOR" ] || EDITOR=ed; export EDITOR
MIROS=
[ "$OSTYPE" = "linux-gnu" -o "$OSTYPE" = "Linux" ] && MIROS="-linux"
if [ -n "$KSH_VERSION" ]; then
	set +o sh +o vi +o posix
	[[ ${COLUMNS:-1} -le 1 ]] && export COLUMNS=80
	[ -n "$USER" ] && \
	    PS1='${USER}@@'"${HOSTNAME}"':$(local _PWD_TEMP="$PWD";
	    local _PWD_TEMP2=
	    while (( (${#_PWD_TEMP2} + ${#_PWD_TEMP}) > (COLUMNS / 3))); do
		if [[ $_PWD_TEMP = *@@(/)* ]]; then
			_PWD_TEMP2=".../"
			_PWD_TEMP="${_PWD_TEMP#*/}";
		else
			_PWD_TEMP2="..."
			_PWD_TEMP="${_PWD_TEMP#?????}";
		fi; done;
	    print "${_PWD_TEMP2}${_PWD_TEMP}")'"$(if [ $USER_ID -eq 0 ]; then
	    print ' # '; else print ' $ '; fi)"
	alias ls='/bin/ls -F'
	export PS1 MIROS=ksh$MIROS
elif [ -n "$BASH_VERSION" ]; then
	[ x"$TERM" = x"screen" ] && \
		export X_COLOUR="${X_COLOUR}"'[5;34;40m\]screen:\[[0m'
	if [ "$OSTYPE" = "linux-gnu" -o "$OSTYPE" = "Linux" ]; then
		PS1='\['"${X_COLOUR}"'[1;31m\]Linux!\[[0m\]\u@@\h:\w \$ '
		alias ls='/bin/ls -F --color'
	else
		PS1='\['"${X_COLOUR}"'[34m\]bash!\[[0m\]\u@@\h:\w \$ '
		alias ls='/bin/ls -F'
	fi
	[ -n "$NOCOLOURPROMPT" ] && PS1=${MIROS}':\u@@\h:\w \$ '
	export PS1 MIROS=bash$MIROS
else
	export MIROS=ash$MIROS
fi
alias la='ls -a'
[ $USER_ID -eq 0 ] && alias l=la || alias l=ls
alias ll='l -l'
alias lo='ll -o'
alias cls='print -n \\033c'
function bye		# cu ;-)
{
	[ "$1" = k ] && ssh-agent -k
	M='\033c'
	[ $? -ne 0 ] && M='\033c Warning: ssh-agent returned error!\n'
	print -n -- "$M"
	exit
	logout
}
function ggs		# Google Search
{
	${BROWSER:-lynx} "http://www.google.com/search?hl=la&num=100&safe=off&q=$*"
}
function ggr		# Google GRoups
{
	${BROWSER:-lynx} "http://groups.google.com/groups?hl=la&num=100&safe=off&as_umsgid=$*"
}
function ge		# German English
{
	${BROWSER:-lynx} "http://dict.leo.org/?search=$*"
}
function ulynx		# uxterm lynx (UTF-8)
{
	lynx -display_charset utf8 "$@@"
}
function klynx		# kterm lynx (EUC-JP)
{
	( sleep 1; cls; print -n 'Press Ctrl-L!' ) 2>/dev/null &
	lynx -display_charset euc-jp "$@@"
}
function loadimage	# call xloadimage by URI
{
	for fi in "$@@"; do
		if [ -e "$fi" ]; then
			xloadimage "$fi"
		else
			ftp -mo - "$fi" | xloadimage stdin
		fi
	done
}
function Lstripcom	# strip comments from file
{
	local _line

	set -o noglob
	cat "$@@" | while read _line; do
		_line=${_line%%#*}
		[[ -n $_line ]] && print -r -- $_line
	done
	set +o noglob
}
function Lretrocfg	# retrieve kernel config file
{
	strings -n4 ${1:-/bsd} | sed -n 's/^=CF=//p'
}
[ -x /emul/linux/bin/bash ] && alias lx='/emul/linux/bin/bash --login'
unset HISTFILE
set -o emacs
set +o emacs-usemeta 2>/dev/null
USER_NAME=_nonexistent
[ -x /usr/bin/id ] && USER_NAME=$(id -un 2>/dev/null)
if [ -O /tmp/.ssh-agent/$USER_NAME ]; then
	# If the agent is not running, remove stale files
	[ ! -e /tmp/.ssh-agent/$USER_NAME/socket ] \
	    && rm -f /tmp/.ssh-agent/$USER_NAME/{agent,keyread}
	# Start ssh-agent if it is not already started
	if [ ! -e /tmp/.ssh-agent/$USER_NAME/agent ]; then
		ssh-agent -s -a /tmp/.ssh-agent/$USER_NAME/socket \
		    >/tmp/.ssh-agent/$USER_NAME/agent
	fi
	# Do the following only if ssh-agent is running
	if [ -e /tmp/.ssh-agent/$USER_NAME/socket ]; then
		# Read configuration file if it exists
		[ -e /tmp/.ssh-agent/$USER_NAME/agent ] \
		    && . /tmp/.ssh-agent/$USER_NAME/agent >&2
		# Read in the keys, if not already done
		if [ ! -e /tmp/.ssh-agent/$USER_NAME/keyread ]; then
			ssh-add
			touch /tmp/.ssh-agent/$USER_NAME/keyread
		fi
	fi
fi
unset USER_NAME NOSETPATH

[ -f /etc/profile.local ] && . /etc/profile.local
[ -f ~/.profile.local ] && . ~/.profile.local
@


2.3
log
@print doesn't take -e
@
text
@d1 1
a1 1
# $MirBSD: src/etc/profile,v 2.2 2005/01/14 01:07:50 tg Exp $
d99 1
a99 1
	print -n "$M"
d141 1
a141 1
		[[ -n $_line ]] && print $_line
@


2.2
log
@shorten and make more MirOS-specific
the more portable one is kept in contrib/
@
text
@d1 1
a1 1
# $MirBSD: src/etc/profile,v 2.1 2005/01/03 16:23:05 tg Exp $
d5 1
a5 1
[ -n "$BASH_VERSION" ] && alias print=echo
d93 1
a93 1
alias cls='print -ne \\033c'
d99 1
a99 1
	print -ne "$M"
@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@d1 1
a1 22
# $MirBSD: src/etc/profile,v 1.56 2004/12/11 16:50:03 tg Exp $
#-
# Copyright (c) 1999, 2000, 2003, 2004
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
#-
# Initialisation file for MirOS ksh (pdksh, sh), (s)ash and GNU bash
# Fallback mode only for non-Korn-shells, though.
a5 6
if [ -n "$SFUDIR" -o -n "$OPENNT_ROOT" -o x"$OS" = x"Windows_NT" ]; then
	NOSETPATH=1
else
	# just in case, and not on Interix or other host OSes
	export PATH=/usr/bin:/bin:/usr/sbin:/sbin
fi
d34 1
a34 1
[ -n "$NOSETPATH" ] || if [ -z "$USER" ]; then
a42 1
CVS_RSH="$(whence -p ssh 2>/dev/null)" || CVS_RSH=/usr/bin/ssh; export CVS_RSH
d44 2
a45 3
export IRCSERVER=irc.oftc.net
export SIRCSERVER=irc6.oftc.net
export SIRCNAME="MirOS packages a kernel, userland and the attitude"
d55 1
a55 9
if [ -n "$SFUDIR_INTERIX" ]; then
	MIROS="-interix"
elif [ -n "$SFUDIR" ]; then
	MIROS="-winsfu"
elif [ x"$OS" = x"Windows_NT" ]; then
	MIROS="-winnt"
elif [ "$OSTYPE" = "linux-gnu" -o "$OSTYPE" = "Linux" ]; then
	MIROS="-linux"
fi
a93 3
[ -x /usr/bin/hd ] || eval alias hd=\''hexdump -e '\''\'\'''\''"%08.8_aX' \
	'  " 8/1 "%02X " " - " 8/1 "%02X "'\''\'\'''\'' -e '\''\'\'''\'\" \
	'  |" "%_p"'\''\'\'''\'' -e '\''\'\'''\''"|\n"'\''\'\'''\'' '\'
a102 15
function rcsedit	# check out, edit, commit
{
	t_cwd="$(pwd)"
	for file in "$@@"; do
		cd "$(dirname "$file")"
		co -l "$file"
	done
	cd "$t_cwd"
	$EDITOR "$@@"
	for file in "$@@"; do
		cd "$(dirname "$file")"
		ci -u "$file"
	done
	cd "$t_cwd"
}
a144 16
function Lfirstcol	# only the first column (useful for regen-obsdp)
{
	set -o noglob
	cat "$@@" | while read a b; do
		print "$a"
	done
	set +o noglob
}
function Lseccol	# only the second column (useful for cvs output)
{
	set -o noglob
	cat "$@@" | while read a b; do
		print "$b"
	done
	set +o noglob
}
@

