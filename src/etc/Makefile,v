head	2.6;
access;
symbols
	start:1.1.1.1 openbsd:1.1.1;
locks; strict;
comment	@# @;


2.6
date	2005.01.23.00.28.57;	author tg;	state Exp;
branches;
next	2.5;

2.5
date	2005.01.18.18.27.11;	author tg;	state Exp;
branches;
next	2.4;

2.4
date	2005.01.18.17.30.33;	author tg;	state Exp;
branches;
next	2.3;

2.3
date	2005.01.18.16.01.05;	author tg;	state Exp;
branches;
next	2.2;

2.2
date	2005.01.17.22.42.00;	author tg;	state Exp;
branches;
next	2.1;

2.1
date	2005.01.03.16.23.04;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.27.03;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.27.03;	author tg;	state Exp;
branches;
next	;


desc
@@


2.6
log
@fix b-r process for good this time
@
text
@# $MirBSD: src/etc/Makefile,v 2.5 2005/01/18 18:27:11 tg Exp $
# $OpenBSD: Makefile,v 1.206 2004/05/04 23:37:04 deraadt Exp $

TZDIR=		/usr/share/zoneinfo
LOCALTIME?=	UTC
NOOBJ=		yes

.if exists(etc.${MACHINE}/Makefile.inc)
.  include "etc.${MACHINE}/Makefile.inc"
.endif

.include <bsd.own.mk>

# -rw-r--r--
BINOWN= root
BINGRP= wheel
BIN1=	changelist ccd.conf \
	daily dhcpd.conf dhcpd.interfaces exports ftpusers \
	ftpchroot gettytab group hosts hosts.lpd inetd.conf \
	ksh.kshrc locate.rc man.conf monthly motd mrouted.conf \
	myname netstart networks newsyslog.conf ntpd.conf \
	phones printcap protocols rbootd.conf rc rc.conf rc.local \
	rc.securelevel rc.shutdown remote rpc security services \
	shells spamd.conf weekly etc.${MACHINE}/disktab profile \
	dhclient.conf mailer.conf wsconsctl.conf

# machine dependent parts
BINMD=	mk.conf syslog.conf

# -rw-rw-r--
BIN2=	motd

# Use NOGZIP on architectures where the gzip'ing would take too much time
# (pmax or slower :-)).  This way you get only tar'ed snap files and you can
# gzip them on a faster machine
.ifndef NOGZIP
GZIP?=		gzip
GZIPFLAGS?=	-9
GZIPEXT?=	.gz
.else
GZIP=		cat
GZIPFLAGS=
GZIPEXT=
.endif

all clean cleandir depend etc install lint:

distrib-dirs:
.ifdef DESTDIR
	if [ ! -d ${DESTDIR}/. ]; then \
		${INSTALL} -d -o root -g wheel -m 755 ${DESTDIR}; \
	fi
.endif
	mtree -qdef mtree/4.4BSD.dist -p ${DESTDIR}/ -U
	for i in ${DESTDIR}/usr/{ports,src}; do \
		[[ -d $$i ]] || ${INSTALL} -d -o root -g wsrc -m 775 $$i; \
	done
	cd ${DESTDIR}/; rm -f sys; ln -s usr/src/sys sys

.ifndef DESTDIR
distribution-etc-root-var distribution release snapshot:
	@@echo setenv DESTDIR before doing that!
	@@false
.else
distribution-etc-root-var: distrib-dirs
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 644 ${BIN1} ${DESTDIR}/etc/
	chmod 640 ${DESTDIR}/etc/inetd.conf
	cat etc.${MACHINE}/ttys ttys.pty >${DESTDIR}/etc/ttys && \
	    chown ${BINOWN} ${DESTDIR}/etc/ttys && \
	    chgrp ${BINGRP} ${DESTDIR}/etc/ttys && \
	    chmod 644 ${DESTDIR}/etc/ttys
	cat sysctl.conf etc.${MACHINE}/sysctl.conf >${DESTDIR}/etc/sysctl.conf && \
	    chown ${BINOWN} ${DESTDIR}/etc/sysctl.conf && \
	    chgrp ${BINGRP} ${DESTDIR}/etc/sysctl.conf && \
	    chmod 644 ${DESTDIR}/etc/sysctl.conf
	cat fbtab.head etc.${MACHINE}/fbtab fbtab.tail >${DESTDIR}/etc/fbtab && \
	    chown ${BINOWN} ${DESTDIR}/etc/fbtab && \
	    chgrp ${BINGRP} ${DESTDIR}/etc/fbtab && \
	    chmod 644 ${DESTDIR}/etc/fbtab
.  for _i in ${BINMD}
	if [ -e ${.CURDIR}/etc.${MACHINE}/${_i}.md ]; then \
		sed -e '/@@@@MDPART@@@@/r${.CURDIR}/etc.${MACHINE}/${_i}.md' \
		    -e '//d' ${.CURDIR}/${_i}; \
	    else \
		sed -e '/@@@@MDPART@@@@/d' ${.CURDIR}/${_i}; \
	  fi >${DESTDIR}/etc/${_i}; \
	    chown ${BINOWN} ${DESTDIR}/etc/${_i} && \
	    chgrp ${BINGRP} ${DESTDIR}/etc/${_i} && \
	    chmod 644 ${DESTDIR}/etc/${_i}
.  endfor
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 664 ${BIN2} ${DESTDIR}/etc/
	${INSTALL} -c -o root -g wheel -m 600 hosts.equiv ${DESTDIR}/etc/
	${INSTALL} -c -o root -g wheel -m 600 crontab ${DESTDIR}/var/cron/tabs/root
	${INSTALL} -c -o root -g wheel -m 644 login.conf ${DESTDIR}/etc/
	${INSTALL} -c -o root -g wheel -m 600 master.passwd ${DESTDIR}/etc/
	pwd_mkdb -p -d ${DESTDIR}/etc /etc/master.passwd
	${INSTALL} -c -o root -g wheel -m 644 moduli ${DESTDIR}/etc/
	${INSTALL} -c -o root -g wheel -m 600 bgpd.conf ${DESTDIR}/etc/
	${INSTALL} -c -o root -g wheel -m 600 pf.conf ${DESTDIR}/etc/
	${INSTALL} -c -o root -g wheel -m 644 pf.os ${DESTDIR}/etc/
	${INSTALL} -c -o root -g wheel -m 644 sensorsd.conf ${DESTDIR}/etc/
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 555 \
	    etc.${MACHINE}/MAKEDEV ${DESTDIR}/dev/
	cd root; \
		${INSTALL} -c -o root -g wheel -m 644 dot.profile \
		    ${DESTDIR}/root/.profile; \
		rm -f ${DESTDIR}/.profile; \
		ln ${DESTDIR}/root/.profile ${DESTDIR}/.profile
	cd skel; \
		${INSTALL} -c -o root -g wheel -m 644 ssh.known_hosts \
		    ${DESTDIR}/etc/skel/.etc/ssh/known_hosts; \
		${INSTALL} -c -o root -g wheel -m 644 dot.mailrc \
		    ${DESTDIR}/etc/skel/.mailrc; \
		${INSTALL} -c -o root -g wheel -m 644 dot.profile \
		    ${DESTDIR}/etc/skel/.profile
	cd mtree; \
		${INSTALL} -c -o root -g wheel -m 600 special \
		    ${DESTDIR}/etc/mtree/; \
		${INSTALL} -c -o root -g wheel -m 444 4.4BSD.dist \
		    ${DESTDIR}/etc/mtree/; \
		${INSTALL} -c -o root -g wheel -m 444 BSD.local.dist \
		    ${DESTDIR}/etc/mtree/
	cd ppp; \
		${INSTALL} -c -o root -g wheel -m 600 \
		    chap-secrets options.sample pap-secrets \
		    ppp.conf.sample ppp.secret.sample \
			${DESTDIR}/etc/ppp/; \
		${INSTALL} -c -o root -g wheel -m 600 \
		    isp.sample isp.chat.sample \
			${DESTDIR}/etc/ppp/peers/; \
		${INSTALL} -c -o root -g wheel -m 755 \
		    ip-up ip-down ppp.linkup.sample ppp.linkdown.sample \
			${DESTDIR}/etc/ppp/
	cd systrace; \
		${INSTALL} -c -o root -g wheel -m 600 usr_sbin_lpd \
		    ${DESTDIR}/etc/systrace/
	/bin/rm -f ${DESTDIR}/etc/localtime
	ln -s ${TZDIR}/${LOCALTIME} ${DESTDIR}/etc/localtime
	/bin/rm -f ${DESTDIR}/etc/rmt
	ln -s /usr/sbin/rmt ${DESTDIR}/etc/rmt
	${INSTALL} -c -o root -g wheel -m 644 minfree \
		${DESTDIR}/var/crash/
	${INSTALL} -c -o ${BINOWN} -g operator -m 664 /dev/null \
		${DESTDIR}/etc/dumpdates
.  if ${MACHINE} == "i386"
	${INSTALL} -c -o root -g wheel -m 644 isdnd.rc.sample \
		${DESTDIR}/etc/isdn/
	${INSTALL} -c -o root -g wheel -m 644 isdnd.sppp.sample \
		${DESTDIR}/etc/isdn/
.  endif
	${INSTALL} -c -o root -g crontab -m 660 /dev/null \
		${DESTDIR}/var/cron/at.deny
	${INSTALL} -c -o root -g crontab -m 660 /dev/null \
		${DESTDIR}/var/cron/cron.deny
	${INSTALL} -c -o root -g wheel -m 600 /dev/null \
		${DESTDIR}/var/cron/log
	${INSTALL} -c -o root -g wheel -m 444 /dev/null \
		${DESTDIR}/var/db/locate.database
	${INSTALL} -c -o ${BINOWN} -g wheel -m 640 /dev/null \
		${DESTDIR}/var/log/messages
	${INSTALL} -c -o ${BINOWN} -g wheel -m 664 /dev/null \
		${DESTDIR}/var/log/sendmail.st
	${INSTALL} -c -o ${BINOWN} -g wheel -m 644 /dev/null \
		${DESTDIR}/var/log/wtmp
	${INSTALL} -c -o daemon -g staff -m 664 /dev/null \
		${DESTDIR}/var/msgs/bounds
	${INSTALL} -c -o ${BINOWN} -g utmp -m 664 /dev/null \
		${DESTDIR}/var/run/utmp
.  if defined(SKIPDIR) && ${SKIPDIR:Mgnu/usr.sbin/sendmail}
	@@echo "Warning: skipping sendmail"
.  else
	cd ../gnu/usr.sbin/sendmail/cf/cf && exec ${MAKE} distribution
.  endif
	cd ../usr.bin/ssh && exec ${MAKE} distribution
	cd ../lib/libssl && exec ${MAKE} distribution
.  for _i in usr.sbin/httpd gnu/usr.bin/lynx
.    if defined(SKIPDIR) && ${SKIPDIR:M${_i}}
	@@echo "Warning: skipping ${_i}"
.    else
	cd ../${_i} && exec ${MAKE} -f Makefile.bsd-wrapper distribution
.    endif
.  endfor
	cd ../usr.bin/mail && exec ${MAKE} distribution
.  if defined(SKIPDIR) && ${SKIPDIR:Mgnu/usr.bin/anoncvs}
	@@echo "Warning: skipping anoncvs"
.  else
	cd ../gnu/usr.bin/anoncvs && exec ${MAKE} distribution
.  endif
	${INSTALL} -c -o root -g wheel -m 600 root/root.mail \
		${DESTDIR}/var/mail/root
	${INSTALL} -c -o root -g wheel -m 440 ../usr.bin/sudo/sudoers \
		${DESTDIR}/etc/sudoers
	cd ${DESTDIR}/etc/ssl/certs && ${SHELL} ${.CURDIR}/ssl.certs.shar && \
		chown ${BINOWN}:${BINGRP} * && chmod 444 *

distribution:
	exec ${SUDO} ${_STCMD_DEST} ${MAKE} distribution-etc-root-var
	cd .. && exec ${SUDO} ${_STCMD_DEST} ${MAKE} install

.  ifndef RELEASEDIR
release:
	@@echo setenv RELEASEDIR before building a release.
	@@false
.  else
release: distribution snap_pre snap_md
	@@echo "============================================================"
	@@echo "Checking files:"
	@@echo ""
	-cd ${.CURDIR}/../distrib/lists/base && DESTDIR="${DESTDIR}" \
	    RELEASEDIR="${RELEASEDIR}" ${SUDO} ${SHELL} \
	    ${BSDSRCDIR}/scripts/tarck
	@@echo "============================================================"
.    ifdef WAIT_CHECKFLIST
	@@read a?'Press Return to continue...'
.    endif
	cd ${.CURDIR}/../distrib/lists/base && DESTDIR="${DESTDIR}" \
	    RELEASEDIR="${RELEASEDIR}" ${SUDO} ${SHELL} \
	    ${BSDSRCDIR}/scripts/tarmk ${OSrev}
	@@cd ${.CURDIR} && ${MAKE} release-finish DESTDIR="${DESTDIR}" \
	    RELEASEDIR="${RELEASEDIR}"

release-finish:
	-cd ${DESTDIR}/snapshot; for f in bsd* *boot* *BOOT* cd*.iso \
	    *.fs *.fs.gz; do test ! -e $$f || \
		${SUDO} cp $$f ${RELEASEDIR}; \
	 done
.    ifdef MACHINE_HAS_TOOLS
	${SUDO} mkdir -p ${RELEASEDIR}/tools
	${SUDO} cp ${DESTDIR}/snapshot/tools/* ${RELEASEDIR}/tools
	cd ${RELEASEDIR} && cksum tools/* | ${SUDO} tee -a CKSUM
	cd ${RELEASEDIR} && rmd160 tools/* | ${SUDO} tee -a RMD160
.    endif
	-cd ${RELEASEDIR}; cksum bsd!(*.gz) *boot* *BOOT* *.fs \
	    *.iso *.gz *.ngz | cat - CKSUM | ${SUDO} sort -k3 -o CKSUM
	-cd ${RELEASEDIR}; rmd160 bsd!(*.gz) *boot* *BOOT* *.fs \
	    *.iso *.gz *.ngz | cat - RMD160 | ${SUDO} sort -o RMD160
	@@if [[ -s /var/tmp/.buildnotice ]]; then \
		cat /var/tmp/.buildnotice; \
		. /var/tmp/.buildnotice; \
		rm -f /var/tmp/.buildnotice || true; \
	 fi
.  endif

snap_pre:
	${SUDO} /bin/rm -rf ${DESTDIR}/snapshot
	${SUDO} ${INSTALL} -d -o root -g wheel -m 755 ${DESTDIR}/snapshot

snap_md:
# nothing here -- look in the machine-dependent Makefile.inc

.endif	# DESTDIR check

MAKEDEVARCHS+= amd64
MAKEDEVARCHS+= i386
MAKEDEVARCHS+= macppc
MAKEDEVARCHS+= sparc

clean:
	rm -f etc.${MACHINE}/MAKEDEV

cleandir:
	cd ${.CURDIR}; for m in ${MAKEDEVARCHS}; do \
	    ${MAKE} MACHINE=$$m clean; done

MAKEDEVSRC=	MAKEDEV.mi MAKEDEV.sub MAKEDEV.common
MAKEDEVDOC=	MAKEDEV.man MAKEDEV.mansub MAKEDEV.common
m4: etc.${M}/MAKEDEV
man: ${.CURDIR}/../share/man/man8/man8.${M}/MAKEDEV.8

etc.${M}/MAKEDEV: ${MAKEDEVSRC} etc.${M}/MAKEDEV.md
	@@echo "==> etc.${M}/MAKEDEV"
	m4 -DMACHINE=${M} MAKEDEV.mi >etc.${M}/.MAKEDEV.tmp && \
	    mv etc.${M}/.MAKEDEV.tmp etc.${M}/MAKEDEV || \
	    rm etc.${M}/.MAKEDEV.tmp

${.CURDIR}/../share/man/man8/man8.${M}/MAKEDEV.8: ${MAKEDEVDOC} etc.${M}/MAKEDEV.md
	m4 -DMACHINE=${M} MAKEDEV.man >$@@

allarchs: ${MAKEDEVSRC} ${MAKEDEVDOC}
	cd ${.CURDIR}; for m in ${MAKEDEVARCHS}; do \
	    ${MAKE} M=$$m m4 man; done
	@@echo "================================="
	@@echo " Don't forget to update your own"
	@@echo " '/dev/MAKEDEV' script manually!"
	@@echo "================================="

distrib:
	cd ${.CURDIR}/.. && ${MAKE} mksystrace-dest
	cd ${.CURDIR}/../distrib \
	    && ${_STCMD_OBJ} ${MAKE} cleandir \
	    && ${_STCMD_OBJ} ${MAKE} \
	    && exec ${SUDO} ${_STCMD_DEST} ${MAKE} install

GENERATED_FILES=

.for _i in ${BINMD}
GENERATED_FILES+= ${_i}.generated

.  for _j in etc.${MACHINE}/${_i}.md etc.${MACHINE_ARCH}/${_i}.md ${_i}
.    if exists(${_j})
${_i}.generated: ${_j}
.    endif
.  endfor

${_i}.generated:
	if [ -e ${.CURDIR}/etc.${MACHINE}/${_i}.md ]; then \
		sed -e '/@@@@MDPART@@@@/r${.CURDIR}/etc.${MACHINE}/${_i}.md' \
		    -e '//d'; \
	elif [ -e ${.CURDIR}/etc.${MACHINE_ARCH}/${_i}.md ]; then \
		sed -e '/@@@@MDPART@@@@/r${.CURDIR}/etc.${MACHINE_ARCH}/${_i}.md' \
		    -e '//d'; \
	else \
		sed -e '/@@@@MDPART@@@@/d'; \
	fi <${.CURDIR}/${_i} >$@@
.endfor

make-generated: ${GENERATED_FILES}

clean-generated:
	-rm -f ${GENERATED_FILES}

.ifdef DESTDIR
install-generated: make-generated
.  for _i in ${BINMD}
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 644 \
	    ${_i}.generated ${DESTDIR}/etc/${_i}
.  endfor
.else
install-generated:
	@@echo "Set DESTDIR before trying this!"; false
.endif

DHSIZE=	1024 1536 2048 3072 4096
update-moduli:
	( \
		echo '#    $$MirBSD: src/etc/Makefile,v 2.5 2005/01/18 18:27:11 tg Exp $$'; \
		echo '#    $$OpenBSD: Makefile,v 1.206 2004/05/04 23:37:04 deraadt Exp $$'; \
		echo '# Time Type Tests Tries Size Generator Modulus'; \
		( for i in ${DHSIZE}; do \
			ssh-keygen -b $$i -G /dev/stdout; \
		done) | \
		ssh-keygen -T /dev/stdout \
	) >moduli

.PHONY: distribution-etc-root-var distribution distrib-dirs release \
	make-generated clean-generated install-generated update-moduli \
	release-finish snapshot allarchs snap_pre snap_tar snap_md m4

.include <bsd.prog.mk>
@


2.5
log
@sync with gcc
easify
don't use deprecated hash algorithm
@
text
@d1 1
a1 1
# $MirBSD: src/etc/Makefile,v 2.4 2005/01/18 17:30:33 tg Exp $
d184 3
d188 1
d224 3
a226 2
	    *.fs *.fs.gz; do test -e $$f && \
		${SUDO} cp $$f ${RELEASEDIR}; done
d237 5
a242 4
	@@if [[ -s ${RELEASEDIR}/.buildnotice ]]; then \
		cat ${RELEASEDIR}/.buildnotice; \
		rm -f ${RELEASEDIR}/.buildnotice || true; \
	 fi
d288 1
d336 1
a336 1
		echo '#    $$MirBSD: src/etc/Makefile,v 2.4 2005/01/18 17:30:33 tg Exp $$'; \
@


2.4
log
@devise of some evil ways to use /usr/releng
@
text
@d1 1
a1 1
# $MirBSD: src/etc/Makefile,v 2.3 2005/01/18 16:01:05 tg Exp $
a221 6
	-cd ${RELEASEDIR}; \
		md5 bsd!(*.gz) *boot* *BOOT* *.fs *.iso *.gz *.ngz \
		    | ${SUDO} tee MD5
	-cd ${RELEASEDIR}; \
		cksum bsd!(*.gz) *boot* *BOOT* *.fs *.iso *.gz *.ngz \
		    | ${SUDO} tee CKSUM
a224 1
	cd ${RELEASEDIR} && md5 tools/* | ${SUDO} tee -a MD5
d226 1
d228 4
a231 2
	-cd ${RELEASEDIR} && ${SUDO} sort -o MD5 MD5
	-cd ${RELEASEDIR} && ${SUDO} sort -o CKSUM -k 3 CKSUM
d329 1
a329 1
		echo '#    $$MirBSD: src/etc/Makefile,v 2.3 2005/01/18 16:01:05 tg Exp $$'; \
@


2.3
log
@fix paths to and names of scripts
@
text
@d1 1
a1 1
# $MirBSD: src/etc/Makefile,v 2.2 2005/01/17 22:42:00 tg Exp $
d49 1
a49 1
.ifdef	DESTDIR
d66 1
a66 1
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 644 ${BIN1} ${DESTDIR}/etc
d91 2
a92 2
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 664 ${BIN2} ${DESTDIR}/etc
	${INSTALL} -c -o root -g wheel -m 600 hosts.equiv ${DESTDIR}/etc
d94 2
a95 2
	${INSTALL} -c -o root -g wheel -m 644 login.conf ${DESTDIR}/etc
	${INSTALL} -c -o root -g wheel -m 600 master.passwd ${DESTDIR}/etc
d97 5
a101 5
	${INSTALL} -c -o root -g wheel -m 644 moduli ${DESTDIR}/etc
	${INSTALL} -c -o root -g wheel -m 600 bgpd.conf ${DESTDIR}/etc
	${INSTALL} -c -o root -g wheel -m 600 pf.conf ${DESTDIR}/etc
	${INSTALL} -c -o root -g wheel -m 644 pf.os ${DESTDIR}/etc
	${INSTALL} -c -o root -g wheel -m 644 sensorsd.conf ${DESTDIR}/etc
d103 1
a103 1
	    etc.${MACHINE}/MAKEDEV ${DESTDIR}/dev
d118 1
a118 1
		    ${DESTDIR}/etc/mtree; \
d120 1
a120 1
		    ${DESTDIR}/etc/mtree; \
d122 1
a122 1
		    ${DESTDIR}/etc/mtree
d136 1
a136 1
		    ${DESTDIR}/etc/systrace;
d142 1
a142 1
		${DESTDIR}/var/crash
d237 4
d333 1
a333 1
		echo '#    $$MirBSD: src/etc/Makefile,v 2.2 2005/01/17 22:42:00 tg Exp $$'; \
@


2.2
log
@some more general improvements (I hope)
@
text
@d1 1
a1 1
# $MirBSD: src/etc/Makefile,v 2.1 2005/01/03 16:23:04 tg Exp $
d207 1
a207 1
	    ${BSDSRCDIR}/scripts/checkflist
d214 1
a214 1
	    ${BSDSRCDIR}/scripts/maketars ${OSrev}
d329 1
a329 1
		echo '#    $$MirBSD: src/etc/Makefile,v 2.1 2005/01/03 16:23:04 tg Exp $$'; \
@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@d1 1
a1 1
# $MirBSD: src/etc/Makefile,v 1.71 2004/12/14 19:07:48 tg Exp $
a65 2
# not for a release
#	cd ${DESTDIR}/etc && ln -s AFGHJ malloc.conf
a237 47
htman:
	@@echo "Building HTML format manual pages."
	${SHELL} -c ". ${BSDSRCDIR}/scripts/man2htm; \
	    convert_all ${BASEDESTDIR}/usr/share/man ${DESTDIR}"
	@@echo "Building ASCII to HTML format papers."
	mkdir -p ${DESTDIR}/papers
	-rm -rf ${BSDOBJDIR}/htman
.for _i in papers psd smm usd
	mkdir -p ${BSDOBJDIR}/htman/${_i}
	( cd ${BSDOBJDIR}/htman/${_i} \
	    && lndir ${BASEDESTDIR}/usr/share/doc/${_i} \
	    && ${MAKE} )
	[[ ! -e ${BSDOBJDIR}/htman/${_i}/Title.txt ]] \
	    || ${SHELL} -c ". ${BSDSRCDIR}/scripts/man2htm; \
	    output_header Title ${_i:U}; \
	    do_convert <${BSDOBJDIR}/htman/${_i}/Title.txt; \
	    output_footer" >${DESTDIR}/papers/${_i}-Title.htm
	[[ ! -e ${BSDOBJDIR}/htman/${_i}/contents.txt ]] \
	    || ${SHELL} -c ". ${BSDSRCDIR}/scripts/man2htm; \
	    output_header Contents ${_i:U}; \
	    do_convert <${BSDOBJDIR}/htman/${_i}/contents.txt; \
	    output_footer" >${DESTDIR}/papers/${_i}-contents.htm
	for f in ${BSDOBJDIR}/htman/${_i}/*/paper.txt; do \
		t=$$(print "$$f" | sed \
		    -e 's#${BSDOBJDIR}/htman/${_i}/##' \
		    -e 's#/paper.txt##'); \
		${SHELL} -c ". ${BSDSRCDIR}/scripts/man2htm; \
		    output_header $$t ${_i:U}; \
		    do_convert <$$f; \
		    output_footer" >${DESTDIR}/papers/${_i}.$$t.htm; \
	done
.endfor
	@@echo "============================================================"
	@@echo "Checking files:"
	@@echo ""
	-cd ${.CURDIR}/../distrib/lists/htman && RELEASEDIR="${RELEASEDIR}" \
	    DESTDIR="${DESTDIR}" ${SHELL} ${BSDSRCDIR}/scripts/checkflist
	@@echo "============================================================"
.  ifdef WAIT_CHECKFLIST
	@@read a?'Press Return to continue...'
.  endif
	-cd ${.CURDIR}/../distrib/lists/htman && RELEASEDIR="${RELEASEDIR}" \
	    DESTDIR="${DESTDIR}" ${SUDO} ${SHELL} \
	    ${BSDSRCDIR}/scripts/maketars ${OSrev}
	-cd ${RELEASEDIR}; md5 htman${OSrev}.ngz | ${SUDO} tee -a MD5; \
	    cksum htman${OSrev}.ngz | ${SUDO} tee -a CKSUM

a281 1
	# XXX no ${_STCMD_OBJ} because /sys/arch/*/compile/* is R/W
d283 2
a284 2
	    && ${MAKE} cleandir \
	    && ${MAKE} \
d329 1
a329 1
		echo '#    $$MirBSD: src/etc/Makefile,v 1.71 2004/12/14 19:07:48 tg Exp $$'; \
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile,v 1.206 2004/05/04 23:37:04 deraadt Exp $
d5 2
a6 3
LOCALTIME=	Canada/Mountain

NOOBJ=	oobj
d9 1
a9 1
.include "etc.${MACHINE}/Makefile.inc"
d12 2
d17 12
a28 15
BIN1=	changelist ccd.conf csh.cshrc csh.login csh.logout daily dhcpd.conf \
	dhcpd.interfaces exports ftpusers ftpchroot gettytab group hosts \
	hosts.lpd inetd.conf ksh.kshrc locate.rc man.conf monthly motd \
	mrouted.conf myname netstart networks newsyslog.conf phones printcap \
	protocols rbootd.conf rc rc.conf rc.local rc.securelevel rc.shutdown \
	remote rpc security services shells spamd.conf syslog.conf weekly \
	etc.${MACHINE}/disktab dhclient.conf mailer.conf

.if ${MACHINE} == "alpha" || ${MACHINE} == "amd64" || \
    ${MACHINE} == "cats" || ${MACHINE} == "hppa" || \
    ${MACHINE} == "i386" || ${MACHINE} == "luna88k" || \
    ${MACHINE} == "macppc" || ${MACHINE} == "sparc" || \
    ${MACHINE} == "sparc64"
BIN1+=	wsconsctl.conf
.endif
a32 5
NAMEDB=	localhost.rev localhost.v6.rev localhost.zone root.cache
PCS=	pcs750.bin
WCS1=	wcs fppwcs poc poc1 poc2 fppoc
WCS2=	fpevent fppwcs fppwcs_dual hdcwcs load_diags start_fpp wcs wcs_dual

d48 12
d61 1
a61 1
distribution-etc-root-var distribution distrib-dirs release snapshot:
d66 2
d69 2
a70 1
	cat etc.${MACHINE}/ttys ttys.pty > ${DESTDIR}/etc/ttys && \
d74 1
a74 1
	cat sysctl.conf etc.${MACHINE}/sysctl.conf > ${DESTDIR}/etc/sysctl.conf && \
d78 1
a78 1
	cat fbtab.head etc.${MACHINE}/fbtab fbtab.tail > ${DESTDIR}/etc/fbtab && \
d82 11
a106 6
		${INSTALL} -c -o root -g wheel -m 644 dot.cshrc \
		    ${DESTDIR}/root/.cshrc; \
		${INSTALL} -c -o root -g wheel -m 600 dot.klogin \
		    ${DESTDIR}/root/.klogin; \
		${INSTALL} -c -o root -g wheel -m 644 dot.login \
		    ${DESTDIR}/root/.login; \
d109 1
a109 2
		rm -f ${DESTDIR}/.cshrc ${DESTDIR}/.profile; \
		ln ${DESTDIR}/root/.cshrc ${DESTDIR}/.cshrc; \
d112 2
a113 4
		${INSTALL} -c -o root -g wheel -m 644 dot.cshrc \
		    ${DESTDIR}/etc/skel/.cshrc; \
		${INSTALL} -c -o root -g wheel -m 644 dot.login \
		    ${DESTDIR}/etc/skel/.login; \
a117 8
	cd kerberosV; \
		${INSTALL} -c -o root -g wheel -m 644 README \
		    ${DESTDIR}/etc/kerberosV; \
		${INSTALL} -c -o root -g wheel -m 644 krb5.conf.example \
		    ${DESTDIR}/etc/kerberosV
	cd amd; \
		${INSTALL} -c -o root -g wheel -m 644 master.sample \
		    ${DESTDIR}/etc/amd
a123 2
		    ${DESTDIR}/etc/mtree; \
		${INSTALL} -c -o root -g wheel -m 444 BSD.x11.dist \
d126 10
a135 31
		${INSTALL} -c -o root -g wheel -m 600 chap-secrets \
		    ${DESTDIR}/etc/ppp; \
		${INSTALL} -c -o root -g wheel -m 600 options \
		    ${DESTDIR}/etc/ppp; \
		${INSTALL} -c -o root -g wheel -m 600 options.leaf \
		    ${DESTDIR}/etc/ppp; \
		${INSTALL} -c -o root -g wheel -m 600 options.sample \
		    ${DESTDIR}/etc/ppp; \
		${INSTALL} -c -o root -g wheel -m 600 chatscript.sample \
		    ${DESTDIR}/etc/ppp; \
		${INSTALL} -c -o root -g wheel -m 600 pap-secrets \
		    ${DESTDIR}/etc/ppp; \
		${INSTALL} -c -o root -g wheel -m 600 ppp.conf.sample \
		    ${DESTDIR}/etc/ppp; \
		${INSTALL} -c -o root -g wheel -m 644 ppp.linkup.sample \
		    ${DESTDIR}/etc/ppp; \
		${INSTALL} -c -o root -g wheel -m 644 ppp.linkdown.sample \
		    ${DESTDIR}/etc/ppp; \
		${INSTALL} -c -o root -g wheel -m 644 ppp.secret.sample \
		    ${DESTDIR}/etc/ppp
	cd afs; \
		${INSTALL} -c -o root -g wheel -m 644 afsd.conf \
		    ${DESTDIR}/etc/afs; \
		${INSTALL} -c -o root -g wheel -m 644 ThisCell \
		    ${DESTDIR}/etc/afs; \
		${INSTALL} -c -o root -g wheel -m 644 CellServDB \
		    ${DESTDIR}/etc/afs; \
		${INSTALL} -c -o root -g wheel -m 644 SuidCells \
		    ${DESTDIR}/etc/afs; \
		${INSTALL} -c -o root -g wheel -m 644 README \
		    ${DESTDIR}/etc/afs
a137 2
		    ${DESTDIR}/etc/systrace; \
		${INSTALL} -c -o root -g wheel -m 600 usr_sbin_named \
a138 15
	cd bind; \
		${INSTALL} -c -o root -g named -m 640 named-simple.conf \
		    ${DESTDIR}/var/named/etc/named.conf; \
		${INSTALL} -c -o root -g named -m 640 named-*.conf \
		    ${DESTDIR}/var/named/etc; \
		${INSTALL} -c -o root -g wheel -m 644 db.localhost \
		    ${DESTDIR}/var/named/standard/localhost; \
		${INSTALL} -c -o root -g wheel -m 644 db.loopback \
		    ${DESTDIR}/var/named/standard/loopback; \
		${INSTALL} -c -o root -g wheel -m 644 db.loopback6.arpa \
		    ${DESTDIR}/var/named/standard/loopback6.arpa; \
		${INSTALL} -c -o root -g wheel -m 644 db.loopback6.int \
		    ${DESTDIR}/var/named/standard/loopback6.int; \
		${INSTALL} -c -o root -g wheel -m 644 root.hint \
		    ${DESTDIR}/var/named/standard; \
d147 6
a161 14
		${DESTDIR}/var/log/authlog
	${INSTALL} -c -o ${BINOWN} -g wheel -m 640 /dev/null \
		${DESTDIR}/var/log/daemon
	${INSTALL} -c -o ${BINOWN} -g wheel -m 600 /dev/null \
		${DESTDIR}/var/log/failedlogin
	${INSTALL} -c -o ${BINOWN} -g wheel -m 640 /dev/null \
		${DESTDIR}/var/log/ftpd
	${INSTALL} -c -o ${BINOWN} -g wheel -m 644 /dev/null \
		${DESTDIR}/var/log/lastlog
	${INSTALL} -c -o ${BINOWN} -g wheel -m 640 /dev/null \
		${DESTDIR}/var/log/lpd-errs
	${INSTALL} -c -o ${BINOWN} -g wheel -m 600 /dev/null \
		${DESTDIR}/var/log/maillog
	${INSTALL} -c -o ${BINOWN} -g wheel -m 644 /dev/null \
a162 2
	${INSTALL} -c -o ${BINOWN} -g wheel -m 600 /dev/null \
		${DESTDIR}/var/log/secure
a166 2
	${INSTALL} -c -o ${BINOWN} -g wheel -m 640 /dev/null \
		${DESTDIR}/var/log/xferlog
d171 3
a173 6
.if ${MACHINE} == "vax"
	uudecode -p etc.vax/${PCS}.uu > ${DESTDIR}/${PCS} && \
	    chown ${BINOWN} ${DESTDIR}/${PCS} && \
	    chgrp ${BINGRP} ${DESTDIR}/${PCS} && \
	    chmod 644 ${DESTDIR}/${PCS}
.endif
d175 1
a175 1
	cd ../usr.sbin/ypserv/ypinit && exec ${MAKE} distribution
a176 1
	cd ../usr.sbin/httpd && exec ${MAKE} -f Makefile.bsd-wrapper distribution
d178 7
a184 1
	cd ../gnu/usr.bin/lynx && exec ${MAKE} -f Makefile.bsd-wrapper distribution
d186 1
a186 1
	cd mail && exec ${MAKE} distribution
d191 2
d195 2
a196 12
	exec ${SUDO} ${MAKE} distribution-etc-root-var
	cd .. && exec ${SUDO} ${MAKE} install

distrib-dirs:
	if [ ! -d ${DESTDIR}/. ]; then \
		${INSTALL} -d -o root -g wheel -m 755 ${DESTDIR}; \
	fi
	mtree -qdef mtree/4.4BSD.dist -p ${DESTDIR}/ -U
	if [ ! -d ${DESTDIR}/usr/src ]; then \
		${INSTALL} -d -o root -g wsrc -m 775 ${DESTDIR}/usr/src; \
	fi
	cd ${DESTDIR}/; rm -f sys; ln -s usr/src/sys sys
d198 1
a198 1
.ifndef RELEASEDIR
d202 1
a202 1
.else
d204 20
a223 8
	cd ${.CURDIR}/../distrib/notes && ${MAKE} && exec ${SUDO} ${MAKE} install
	cd ${.CURDIR}/../distrib/sets && exec ${SUDO} sh maketars ${OSrev}
	-cp ${DESTDIR}/snapshot/bsd* ${RELEASEDIR}
	-cp ${DESTDIR}/snapshot/*boot* ${RELEASEDIR}
	-cp ${DESTDIR}/snapshot/*BOOT* ${RELEASEDIR}
	-cp ${DESTDIR}/snapshot/cd*.iso ${RELEASEDIR}
	-cp ${DESTDIR}/snapshot/INSTALL.* ${RELEASEDIR}
	-cp ${DESTDIR}/snapshot/*.fs ${DESTDIR}/snapshot/*.fs.gz ${RELEASEDIR}
d225 2
a226 2
		md5 bsd!(*.gz) *boot* *BOOT* INSTALL.* *.fs *.iso *.gz *.tgz \
		    > MD5
d228 58
a285 15
		cksum bsd!(*.gz) *boot* *BOOT* INSTALL.* *.fs *.iso *.gz *.tgz \
		    > CKSUM
.if defined(MACHINE_HAS_TOOLS)
	mkdir -p ${RELEASEDIR}/tools
	cp ${DESTDIR}/snapshot/tools/* ${RELEASEDIR}/tools
	cd ${RELEASEDIR} && md5 tools/* >>MD5
	cd ${RELEASEDIR} && cksum tools/* >>CKSUM
.endif
	-cd ${RELEASEDIR} && sort -o MD5 MD5
	-cd ${RELEASEDIR} && sort -o CKSUM -k 3 CKSUM
.endif

snapshot: distribution snap_pre snap_tar snap_md
	cd ${DESTDIR}/snapshot && cksum * > CKSUMS
	cd ${DESTDIR}/snapshot && md5 * > MD5
a290 31
snap_tar:
	cd ${DESTDIR} && tar cf - bin \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/bin.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - dev \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/dev.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - .profile .cshrc altroot etc home mnt \
	    root stand sys tmp | ${GZIP} ${GZIPFLAGS} \
	    > snapshot/etc.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - sbin \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/sbin.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - usr/bin \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/usr.bin.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - usr/games \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/usr.games.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - usr/include \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/usr.include.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - usr/lib \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/usr.lib.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - usr/libexec \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/usr.libexec.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - usr/mdec usr/libdata usr/lkm usr/local \
	    usr/src usr/obj | ${GZIP} ${GZIPFLAGS} \
	    > snapshot/usr.misc.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - usr/sbin \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/usr.sbin.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - usr/share \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/usr.share.tar${GZIPEXT}
	cd ${DESTDIR} && tar cf - var \
	    | ${GZIP} ${GZIPFLAGS} > snapshot/var.tar${GZIPEXT}
	cd ../distrib/notes; ${MAKE}; ${MAKE} install

a295 1
MAKEDEVARCHS+= alpha
a296 3
MAKEDEVARCHS+= cats
MAKEDEVARCHS+= hp300
MAKEDEVARCHS+= hppa
a297 2
MAKEDEVARCHS+= luna88k
MAKEDEVARCHS+= mac68k
a298 3
MAKEDEVARCHS+= mvme68k
MAKEDEVARCHS+= mvme88k
#MAKEDEVARCHS+= mvmeppc
a299 2
MAKEDEVARCHS+= sparc64
MAKEDEVARCHS+= vax
d311 1
a311 1
man: ${.CURDIR}/../share/man/man8/man.${M}/MAKEDEV.8
d315 1
a315 1
	m4 -DMACHINE=${M} MAKEDEV.mi > etc.${M}/.MAKEDEV.tmp && \
d319 2
a320 3
${.CURDIR}/../share/man/man8/man.${M}/MAKEDEV.8: ${MAKEDEVDOC} etc.${M}/MAKEDEV.md
	m4 -DMACHINE=${M} MAKEDEV.man > \
	    ${.CURDIR}/../share/man/man8/man8.${M}/MAKEDEV.8
d325 4
d331 44
a374 2
	cd ${.CURDIR}/../distrib && \
	    ${MAKE} cleandir && ${MAKE} && exec ${SUDO} ${MAKE} install
d376 1
a376 1
DHSIZE=1024 1536 2048 3072 4096
d379 1
d386 5
a390 1
	) > moduli
a391 2
.PHONY: distribution-etc-root-var distribution distrib-dirs \
	release snapshot allarchs snap_pre snap_tar snap_md m4
@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
