head	2.1;
branch	1.1.1;
access;
symbols
	cvs-200501160850:1.1.1.2
	start:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


2.1
date	2005.01.03.16.27.22;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.29.20;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.29.20;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.01.16.09.54.51;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@/*
 * Copyright (c) 2001-2002 Sendmail, Inc. and its suppliers.
 *      All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: t-event.c,v 1.11 2002/04/25 01:50:25 ca Exp $")

#include <stdio.h>

#include <stdlib.h>
#include <unistd.h>
# include <sys/wait.h>
#if SM_CONF_SETITIMER
# include <sys/time.h>
#endif /* SM_CONF_SETITIMER */

#include <sm/clock.h>
#include <sm/test.h>

int check;

void
evcheck(arg)
	int arg;
{
	SM_TEST(arg == 3);
	SM_TEST(check == 0);
	check++;
}

void
ev1(arg)
	int arg;
{
	SM_TEST(arg == 1);
}

/* define as x if you want debug output */
#define DBG_OUT(x)

int
main(argc, argv)
	int argc;
	char *argv[];
{
	SM_EVENT *ev;

	sm_test_begin(argc, argv, "test event handling");
	fprintf(stdout, "This test may hang. If there is no output within twelve seconds, abort it\nand recompile with -DSM_CONF_SETITIMER=%d\n",
		SM_CONF_SETITIMER == 0 ? 1 : 0);
	sleep(1);
	SM_TEST(1 == 1);
	DBG_OUT(fprintf(stdout, "We're back, test 1 seems to work.\n"));
	ev = sm_seteventm(1000, ev1, 1);
	sleep(1);
	SM_TEST(2 == 2);
	DBG_OUT(fprintf(stdout, "We're back, test 2 seems to work.\n"));

	/* schedule an event in 9s */
	ev = sm_seteventm(9000, ev1, 2);
	sleep(1);

	/* clear the event before it can fire */
	sm_clrevent(ev);
	SM_TEST(3 == 3);
	DBG_OUT(fprintf(stdout, "We're back, test 3 seems to work.\n"));

	/* schedule an event in 1s */
	check = 0;
	ev = sm_seteventm(1000, evcheck, 3);
	sleep(2);

	/* clear the event */
	sm_clrevent(ev);
	SM_TEST(4 == 4);
	SM_TEST(check == 1);
	DBG_OUT(fprintf(stdout, "We're back, test 4 seems to work.\n"));

	return sm_test_end();
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@


1.1.1.2
log
@Import a series of fixes and minor updates from OpenBSD
@
text
@d2 1
a2 1
 * Copyright (c) 2001-2002, 2004 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-event.c,v 1.12 2004/08/03 20:50:32 ca Exp $")
d25 1
a25 2
static void	evcheck __P((int));
static void	ev1 __P((int));
d27 1
a27 3
static int check;

static void
d36 1
a36 1
static void
@

