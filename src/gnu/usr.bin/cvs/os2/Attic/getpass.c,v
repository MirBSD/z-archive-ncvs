head	1.2;
access;
symbols
	cvs-1_12_11:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@ * @;


1.2
date	2005.01.08.21.48.45;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2005.01.08.21.13.41;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.01.08.21.13.41;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fastmerge
@
text
@#include <stdio.h>
#include <string.h>
#include "cvs.h"
#include "os2inc.h"

/* Only define this if you're testing and want to compile this file
   standalone. */
/* #define DIAGNOSTIC */

/* Turn off keyboard echo.  Does not check error returns. */
static void
EchoOff (void)
{
  KBDINFO KbdInfo;
  
  KbdGetStatus (&KbdInfo, 0);
  KbdInfo.fsMask = (KbdInfo.fsMask & ~KEYBOARD_ECHO_ON) | KEYBOARD_ECHO_OFF;
  KbdSetStatus (&KbdInfo, 0);
}

/* Turn on keyboard echo.  Does not check error returns. */
static void
EchoOn( void )
{
  KBDINFO KbdInfo;
  
  KbdGetStatus (&KbdInfo, 0);
  KbdInfo.fsMask = (KbdInfo.fsMask & ~KEYBOARD_ECHO_OFF) | KEYBOARD_ECHO_ON;
  KbdSetStatus (&KbdInfo, 0);
}

char *
getpass (char *prompt)
{
  static char Buf[80];
  STRINGINBUF StringInBuf;
  
  printf ("%s", prompt);
  fflush (stdout);

  EchoOff ();

  StringInBuf.cb = sizeof (Buf) - 1;
  StringInBuf.cchIn = 0;
  KbdStringIn ((PSZ) Buf, &StringInBuf, IO_WAIT, 0);
  Buf[StringInBuf.cchIn] = '\0';

  EchoOn ();

  return Buf;
}


#ifdef DIAGNOSTIC
main()
{
  char *s;
  s = getpass ("Input password (no echo): ");
  printf ("String was \"%s\"\n", s);
  fflush (stdout);
}
#endif /* DIAGNOSTIC */

@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU CVS 1.12.11
@
text
@@
