head     1.1;
branch   1.1.2;
access   ;
symbols  cvs-1_12_11:1.1.2.1 FSF:1.1.2;
locks    ; strict;
comment  @ * @;


1.1
date     2005.01.08.21.13.54;  author tg;  state Exp;
branches 1.1.2.1;
next     ;

1.1.2.1
date     2005.01.08.21.13.54;  author tg;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@/* memmove.c -- copy memory.
   Copy LENGTH bytes from SOURCE to DEST.  Does not null-terminate.
   In the public domain.
   By David MacKenzie <djm@@gnu.ai.mit.edu>.  */

#if HAVE_CONFIG_H
# include <config.h>
#endif

#include <stddef.h>

void *
memmove (void *dest0, void const *source0, size_t length)
{
  char *dest = dest0;
  char const *source = source0;
  if (source < dest)
    /* Moving from low mem to hi mem; start at end.  */
    for (source += length, dest += length; length; --length)
      *--dest = *--source;
  else if (source != dest)
    {
      /* Moving from hi mem to low mem; start at beginning.  */
      for (; length; --length)
	*dest++ = *source++;
    }
  return dest0;
}
@


1.1.2.1
log
@GNU CVS 1.12.11
@
text
@@
