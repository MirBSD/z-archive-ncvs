head     1.1;
branch   1.1.2;
access   ;
symbols  cvs-1_12_11:1.1.2.1 FSF:1.1.2;
locks    ; strict;
comment  @# @;


1.1
date     2005.01.08.21.13.38;  author tg;  state Exp;
branches 1.1.2.1;
next     ;

1.1.2.1
date     2005.01.08.21.13.38;  author tg;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#serial 8

dnl From Jim Meyering

AC_DEFUN([gl_TIMESPEC],
[
  dnl Prerequisites of lib/timespec.h.
  AC_REQUIRE([AC_HEADER_TIME])
  AC_CHECK_HEADERS_ONCE(sys/time.h)
  gl_CHECK_TYPE_STRUCT_TIMESPEC
  AC_STRUCT_ST_MTIM_NSEC

  dnl Persuade glibc <time.h> to declare nanosleep().
  AC_REQUIRE([AC_GNU_SOURCE])

  AC_CHECK_DECLS(nanosleep, , , [#include <time.h>])
])

dnl Define HAVE_STRUCT_TIMESPEC if `struct timespec' is declared
dnl in time.h or sys/time.h.

AC_DEFUN([gl_CHECK_TYPE_STRUCT_TIMESPEC],
[
  dnl Persuade pedantic Solaris to declare struct timespec.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_HEADER_TIME])
  AC_CHECK_HEADERS_ONCE(sys/time.h)
  AC_CACHE_CHECK([for struct timespec], fu_cv_sys_struct_timespec,
    [AC_TRY_COMPILE(
      [
#      if TIME_WITH_SYS_TIME
#       include <sys/time.h>
#       include <time.h>
#      else
#       if HAVE_SYS_TIME_H
#        include <sys/time.h>
#       else
#        include <time.h>
#       endif
#      endif
      ],
      [static struct timespec x; x.tv_sec = x.tv_nsec;],
      fu_cv_sys_struct_timespec=yes,
      fu_cv_sys_struct_timespec=no)
    ])

  if test $fu_cv_sys_struct_timespec = yes; then
    AC_DEFINE(HAVE_STRUCT_TIMESPEC, 1,
	      [Define if struct timespec is declared in <time.h>. ])
  fi
])
@


1.1.2.1
log
@GNU CVS 1.12.11
@
text
@@
