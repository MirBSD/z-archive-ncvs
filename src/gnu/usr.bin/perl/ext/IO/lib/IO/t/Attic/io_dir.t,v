head	1.2;
access;
symbols
	prone-for-deletion:1.1
	start:1.1.1.1 openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2005.01.03.15.04.34;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.12.12.21.27.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.27.45;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove some orphanes:
- stuff which was (wrongly) contained within the -bopenbsd import,
  because it happened to have existed earlier in openbsd
- stuff which was (correctly) contained within the -bopenbsd
  import, and we removed in -bmirbsd
@
text
@#!./perl

BEGIN {
    unless(grep /blib/, @@INC) {
        chdir 't' if -d 't';
        @@INC = '../lib';
    }
    require Config; import Config;
    if ($] < 5.00326 || not $Config{'d_readdir'}) {
	print "1..0 # Skip: readdir() not available\n";
	exit 0;
    }
}

select(STDERR); $| = 1;
select(STDOUT); $| = 1;

use IO::Dir qw(DIR_UNLINK);

print "1..10\n";

my $DIR = $^O eq 'MacOS' ? ":" : ".";

$dot = new IO::Dir $DIR;
print defined($dot) ? "ok" : "not ok", " 1\n";

@@a = sort <*>;
do { $first = $dot->read } while defined($first) && $first =~ /^\./;
print +(grep { $_ eq $first } @@a) ? "ok" : "not ok", " 2\n";

@@b = sort($first, (grep {/^[^.]/} $dot->read));
print +(join("\0", @@a) eq join("\0", @@b)) ? "ok" : "not ok", " 3\n";

$dot->rewind;
@@c = sort grep {/^[^.]/} $dot->read;
print +(join("\0", @@b) eq join("\0", @@c)) ? "ok" : "not ok", " 4\n";

$dot->close;
$dot->rewind;
print defined($dot->read) ? "not ok" : "ok", " 5\n";

open(FH,'>X') || die "Can't create x";
print FH "X";
close(FH) or die "Can't close: $!";

tie %dir, IO::Dir, $DIR;
my @@files = keys %dir;

# I hope we do not have an empty dir :-)
print @@files ? "ok" : "not ok", " 6\n";

my $stat = $dir{'X'};
print defined($stat) && UNIVERSAL::isa($stat,'File::stat') && $stat->size == 1
	? "ok" : "not ok", " 7\n";

delete $dir{'X'};

print -f 'X' ? "ok" : "not ok", " 8\n";

tie %dirx, IO::Dir, $DIR, DIR_UNLINK;

my $statx = $dirx{'X'};
print defined($statx) && UNIVERSAL::isa($statx,'File::stat') && $statx->size == 1
	? "ok" : "not ok", " 9\n";

delete $dirx{'X'};

print -f 'X' ? "not ok" : "ok", " 10\n";
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
