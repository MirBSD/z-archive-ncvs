head	2.1;
branch	1.1.1;
access;
symbols
	cvs-200501160850:1.1.1.2
	start:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


2.1
date	2005.01.03.16.23.46;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.27.29;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.27.29;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.01.16.09.55.57;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@use ExtUtils::MakeMaker;

unless($ENV{PERL_CORE}) {
    $ENV{PERL_CORE} = 1 if grep { $_ eq 'PERL_CORE=1' } @@ARGV;
}
if ($ENV{PERL_CORE}) {
    # Pods will be built by installman.
    @@coreopts = ( MAN3PODS => {} );
}
else {
    @@coreopts = ();
}

WriteMakefile(
    NAME	=> "Devel::PPPort",
    DISTNAME	=> "Devel-PPPort",
    VERSION_FROM=> 'PPPort.pm',

    PL_FILES	=> { 'ppport_h.PL' => 'ppport.h' },
    'depend'	=> { '$(OBJECT)' => '$(H_FILES)' },
    C		=> [qw(module2.c module3.c)],
    H		=> [qw(ppport.h)],
    OBJECT	=> '$(BASEEXT)$(OBJ_EXT) $(O_FILES)',
    XSPROTOARG	=> '-noprototypes',
    'dist'	=> { COMPRESS=>"gzip", SUFFIX=>"gz" },
    'clean'	=> { FILES => qw($(H_FILES))},
    @@coreopts,
);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@


1.1.1.2
log
@Import a series of fixes and minor updates from OpenBSD
@
text
@a0 21
################################################################################
#
#  Makefile.PL -- generate Makefile
#
################################################################################
#
#  $Revision: 14 $
#  $Author: mhx $
#  $Date: 2004/08/19 13:16:37 +0200 $
#
################################################################################
#
#  Version 3.x, Copyright (C) 2004, Marcus Holland-Moritz.
#  Version 2.x, Copyright (C) 2001, Paul Marquess.
#  Version 1.x, Copyright (C) 1999, Kenneth Albanowski.
#
#  This program is free software; you can redistribute it and/or
#  modify it under the same terms as Perl itself.
#
################################################################################

a1 1
require 5.003;
d3 2
a4 2
unless ($ENV{'PERL_CORE'}) {
  $ENV{'PERL_CORE'} = 1 if grep { $_ eq 'PERL_CORE=1' } @@ARGV;
d6 3
a8 4

if ($ENV{'PERL_CORE'}) {
  # Pods will be built by installman.
  @@coreopts = ( MAN3PODS => {} );
d11 1
a11 16
  # Devel::PPPort is in the core since 5.7.3
  @@coreopts = ( INSTALLDIRS => ($] >= 5.007003 ? 'perl' : 'site') );
}

@@ARGV = map { /^--with-(.*)/ && ++$opt{$1} ? () : $_ } @@ARGV;

%PL_FILES = ( 'ppport_h.PL'  => 'ppport.h' ),

@@C_FILES  = qw{ module2.c module3.c };

@@clean    = qw{ $(H_FILES) PPPort.c };

if ($opt{'apicheck'}) {
  $PL_FILES{'apicheck_c.PL'} = 'apicheck.c';
  push @@C_FILES, qw{ apicheck.c };
  push @@clean,   qw{ apicheck.c };
d15 13
a27 11
  NAME          => 'Devel::PPPort',
  VERSION_FROM  => 'PPPort_pm.PL',
  PL_FILES      => \%PL_FILES,
  PM            => { 'PPPort.pm' => '$(INST_LIBDIR)/PPPort.pm' },
  C             => \@@C_FILES,
  H             => [ qw(ppport.h) ],
  OBJECT        => '$(BASEEXT)$(OBJ_EXT) $(O_FILES)',
  XSPROTOARG    => '-noprototypes',
  clean         => { FILES => "@@clean" },
  depend        => { '$(OBJECT)' => '$(H_FILES)' },
  @@coreopts,
a28 19

sub MY::postamble {
  package MY;
  my $post = shift->SUPER::postamble(@@_);
  $post .= <<'POSTAMBLE';

purge_all: realclean
	@@$(RM_F) PPPort.pm PPPort.xs t/*.t

regen:
	$(PERL) -I$(INST_ARCHLIB) -I$(INST_LIB) -I$(PERL_ARCHLIB) -I$(PERL_LIB) PPPort_pm.PL
	$(PERL) -I$(INST_ARCHLIB) -I$(INST_LIB) -I$(PERL_ARCHLIB) -I$(PERL_LIB) PPPort_xs.PL
	$(PERL) -I$(INST_ARCHLIB) -I$(INST_LIB) -I$(PERL_ARCHLIB) -I$(PERL_LIB) mktests.PL
	$(PERL) -I$(INST_ARCHLIB) -I$(INST_LIB) -I$(PERL_ARCHLIB) -I$(PERL_LIB) ppport_h.PL

POSTAMBLE
  return $post;
}

@

