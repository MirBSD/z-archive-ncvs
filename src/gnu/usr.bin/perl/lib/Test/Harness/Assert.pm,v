head	2.1;
branch	1.1.1;
access;
symbols
	cvs-200501160850:1.1.1.1
	start:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


2.1
date	2005.01.03.16.25.39;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.28.25;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.28.25;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@# $Id: Assert.pm,v 1.1.1.2 2004/05/16 07:58:38 tg Stab $

package Test::Harness::Assert;

use strict;
require Exporter;
use vars qw($VERSION @@EXPORT @@ISA);

$VERSION = '0.02';

@@ISA = qw(Exporter);
@@EXPORT = qw(assert);


=head1 NAME

Test::Harness::Assert - simple assert

=head1 SYNOPSIS

  ### FOR INTERNAL USE ONLY ###

  use Test::Harness::Assert;

  assert( EXPR, $name );

=head1 DESCRIPTION

A simple assert routine since we don't have Carp::Assert handy.

B<For internal use by Test::Harness ONLY!>

=head1 FUNCTIONS

=head2 C<assert()>

  assert( EXPR, $name );

If the expression is false the program aborts.

=cut

sub assert ($;$) {
    my($assert, $name) = @@_;

    unless( $assert ) {
        require Carp;
        my $msg = 'Assert failed';
        $msg .= " - '$name'" if defined $name;
        $msg .= '!';
        Carp::croak($msg);
    }

}

=head1 AUTHOR

Michael G Schwern C<< <schwern@@pobox.com> >>

=head1 SEE ALSO

L<Carp::Assert>

=cut

1;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $Id: Assert.pm,v 1.3 2003/09/11 15:57:29 andy Exp $
@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
