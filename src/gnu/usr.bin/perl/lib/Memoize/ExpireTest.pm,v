head	2.1;
branch	1.1.1;
access;
symbols
	cvs-200501160850:1.1.1.1
	start:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


2.1
date	2005.01.03.16.25.26;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.28.21;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.28.21;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@package Memoize::ExpireTest;

=head1 NAME

Memoize::ExpireTest - test for Memoize expiration semantics

=head1 DESCRIPTION

This module is just for testing expiration semantics.  It's not a very
good example of how to write an expiration module.

If you are looking for an example, I recommend that you look at the
simple example in the Memoize::Expire documentation, or at the code
for Memoize::Expire itself.

If you have questions, I will be happy to answer them if you send them
to mjd-perl-memoize+@@plover.com.

=cut

$VERSION = 0.65;
my %cache;

sub TIEHASH {	
  my ($pack) = @@_;
  bless \%cache => $pack;
}

sub EXISTS {
  my ($cache, $key) = @@_;
  exists $cache->{$key} ? 1 : 0;
}

sub FETCH {
  my ($cache, $key) = @@_;
  $cache->{$key};
}

sub STORE {
  my ($cache, $key, $val) = @@_;
  $cache->{$key} = $val;
}

sub expire {
  my ($key) = @@_;
  delete $cache{$key};
}

1;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
