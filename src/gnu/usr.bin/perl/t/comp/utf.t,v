head	2.1;
branch	1.1.1;
access;
symbols
	cvs-200501160850:1.1.1.1
	start:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


2.1
date	2005.01.03.16.26.24;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.28.55;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.28.55;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@#!./perl

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
    unless (find PerlIO::Layer 'perlio') {
	print "1..0 # Skip: not perlio\n";
	exit 0;
    }
    if ($ENV{PERL_CORE_MINITEST}) {
	print "1..0 # Skip: no dynamic loading on miniperl, no threads\n";
	exit 0;
    }
    require Config; import Config;
    if ($Config{'extensions'} !~ /\bEncode\b/) {
      print "1..0 # Skip: Encode was not built\n";
      exit 0;
    }
}

require "./test.pl";

plan(tests => 15);

my $BOM = chr(0xFEFF);

sub test {
    my ($enc, $tag, $bom) = @@_;
    open(UTF_PL, ">:raw:encoding($enc)", "utf.pl")
	or die "utf.pl($enc,$tag,$bom): $!";
    print UTF_PL $BOM if $bom;
    print UTF_PL "$tag\n";
    close(UTF_PL);
    my $got = do "./utf.pl";
    is($got, $tag);
}

test("utf16le",    123,   1);
test("utf16le",    1234,  1);
test("utf16le",    12345, 1);
test("utf16be",    123,   1);
test("utf16be",    1234,  1);
test("utf16be",    12345, 1);
test("utf8",       123,   1);
test("utf8",       1234,  1);
test("utf8",       12345, 1);

test("utf16le",    123,   0);
test("utf16le",    1234,  0);
test("utf16le",    12345, 0);
test("utf16be",    123,   0);
test("utf16be",    1234,  0);
test("utf16be",    12345, 0);

END {
    1 while unlink "utf.pl";
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
