head	2.1;
branch	1.1.1;
access;
symbols
	cvs-200501160850:1.1.1.1
	start:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


2.1
date	2005.01.03.16.26.53;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.29.06;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.29.06;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@/* dirent.h */

/* djl
 * Provide UNIX compatibility
 */

#ifndef  _INC_DIRENT
#define  _INC_DIRENT

/*
 * NT versions of readdir(), etc
 * From the MSDOS implementation
 */

/* Directory entry size */
#ifdef DIRSIZ
#undef DIRSIZ
#endif
#define DIRSIZ(rp)  (sizeof(struct direct))

/* needed to compile directory stuff */
#define DIRENT direct

/* structure of a directory entry */
typedef struct direct 
{
	long	d_ino;			/* inode number (not used by MS-DOS)  */
	long	d_namlen;		/* name length  */
	char	d_name[257];		/* file name  */
} _DIRECT;

/* structure for dir operations */
typedef struct _dir_struc
{
	char	*start;			/* starting position */
	char	*curr;			/* current position */
	long	size;			/* allocated size of string table */
	long	nfiles;			/* number of filenames in table */
	struct direct dirstr;		/* directory structure to return */
	void*	handle;			/* system handle */
	char	*end;			/* position after last filename */
} DIR;

#if 0		/* these have moved to win32iop.h */
DIR *		win32_opendir(char *filename);
struct direct *	win32_readdir(DIR *dirp);
long		win32_telldir(DIR *dirp);
void		win32_seekdir(DIR *dirp,long loc);
void		win32_rewinddir(DIR *dirp);
int		win32_closedir(DIR *dirp);
#endif

#endif /* _INC_DIRENT */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
