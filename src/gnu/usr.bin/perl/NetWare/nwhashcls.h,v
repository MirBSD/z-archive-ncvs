head	2.1;
branch	1.1.1;
access;
symbols
	cvs-200501160850:1.1.1.1
	start:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


2.1
date	2005.01.03.16.23.34;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.27.56;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.27.56;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@
/*
 * Copyright © 2001 Novell, Inc. All Rights Reserved.
 *
 * You may distribute under the terms of either the GNU General Public
 * License or the Artistic License, as specified in the README file.
 *
 */

/*
 * FILENAME     :  nwhashcls.h
 * DESCRIPTION  :  Equivalent of Hash class
 *                 
 * Author       :  Srivathsa M
 * Date	Created :  July 26 2001
 */
#include <stdio.h>
#include <conio.h>
#include <process.h>

#define BUCKET_SIZE 37

struct HASHNODE
{
	void *data;
	struct HASHNODE	*next;
};

typedef void (*HASHFORALLFUN)(void *, void *);

class NWPerlHashList
{
private:
	HASHNODE*	MemListHash[BUCKET_SIZE];
    void removeAll() const;

public:
	~NWPerlHashList();
	NWPerlHashList();
	int insert(void *lData);
	int remove(void *lData);
    void forAll( void (*)(void *, void*), void * ) const;
};

struct KEYHASHNODE
{
	void *key;
	void *data;
	KEYHASHNODE	*next;
};

/**
typedef void (*KEYHASHFORALLFUN)(void *, void *);

class NWPerlKeyHashList
{
private:
	KEYHASHNODE*	MemListHash[BUCKET_SIZE];
    void removeAll() const;

public:
	~NWPerlKeyHashList();
	NWPerlKeyHashList();
	int insert(void *key, void *lData);
	int remove(void *key);
    void forAll( void (*)(void *, void*), void * ) const;
	int find(void *key, void **pData);
};
**/

//#define DEBUG_HASH 1

#ifdef DEBUG_HASH
#define DEBUGPRINT	ConsolePrintf
#else
#define DEBUGPRINT
#endif


@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
