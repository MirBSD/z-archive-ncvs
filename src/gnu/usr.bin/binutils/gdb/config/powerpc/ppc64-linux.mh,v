head     1.1;
branch   1.1.2;
access   ;
symbols  gdb-20050107:1.1.2.1 FSF:1.1.2;
locks    ; strict;
comment  @# @;


1.1
date     2005.01.08.23.04.27;  author tg;  state Exp;
branches 1.1.2.1;
next     ;

1.1.2.1
date     2005.01.08.23.04.27;  author tg;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@# Host: PowerPC64, running Linux

XM_CLIBS=

NAT_FILE= nm-ppc64-linux.h
NATDEPFILES= infptrace.o inftarg.o fork-child.o \
	ppc-linux-nat.o proc-service.o linux-thread-db.o \
	gcore.o linux-nat.o

# The PowerPC has severe limitations on TOC size, and uses them even
# for non-PIC code.  GDB overflows those tables when compiling with
# -mfull-toc (the default), so we need to ask GCC to use as few TOC
# entries as possible.
MH_CFLAGS= -mminimal-toc

# The dynamically loaded libthread_db needs access to symbols in the
# gdb executable.
LOADLIBES= -ldl -rdynamic
@


1.1.2.1
log
@The GNU Debugger 6.3.50-current, from
 ftp://sources.redhat.com/pub/gdb/snapshots/current/gdb-weekly-6.3.50.20050107.tar.bz2

only the gdb/ subdirectory, gdb/testsuite/ removed.

Luckily, this time it doesn't depend on a different libbfd than
the one we deliver with GNU binutils...
@
text
@@
