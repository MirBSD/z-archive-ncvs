head     1.1;
branch   1.1.2;
access   ;
symbols  gdb-20050107:1.1.2.1 FSF:1.1.2;
locks    ; strict;
comment  @ * @;


1.1
date     2005.01.08.23.03.52;  author tg;  state Exp;
branches 1.1.2.1;
next     ;

1.1.2.1
date     2005.01.08.23.03.52;  author tg;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@/* Manage register sets.

   Copyright 2003, 2004 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#ifndef REGSET_H
#define REGSET_H 1

struct gdbarch;
struct regcache;

/* Data structure describing a register set.  */

typedef void (supply_regset_ftype) (const struct regset *, struct regcache *,
                                    int, const void *, size_t);
typedef void (collect_regset_ftype) (const struct regset *, 
                                     const struct regcache *,
                                     int, void *, size_t);

struct regset
{
  /* Data pointer for private use by the methods below, presumably
     providing some sort of description of the register set.  */
  const void *descr;

  /* Function supplying values in a register set to a register cache.  */
  supply_regset_ftype *supply_regset;

  /* Function collecting values in a register set from a register cache.  */
  collect_regset_ftype *collect_regset;

  /* Architecture associated with the register set.  */
  struct gdbarch *arch;
};

/* Allocate a fresh 'struct regset' whose supply_regset function is
   SUPPLY_REGSET, and whose collect_regset function is COLLECT_REGSET.
   If the regset has no collect_regset function, pass NULL for
   COLLECT_REGSET.

   The object returned is allocated on ARCH's obstack.  */

extern struct regset *regset_alloc (struct gdbarch *arch,
                                    supply_regset_ftype *supply_regset,
                                    collect_regset_ftype *collect_regset);

#endif /* regset.h */
@


1.1.2.1
log
@The GNU Debugger 6.3.50-current, from
 ftp://sources.redhat.com/pub/gdb/snapshots/current/gdb-weekly-6.3.50.20050107.tar.bz2

only the gdb/ subdirectory, gdb/testsuite/ removed.

Luckily, this time it doesn't depend on a different libbfd than
the one we deliver with GNU binutils...
@
text
@@
