head	1.2;
access;
symbols
	binutils-20050118:1.1.2.1
	binutils-050108:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@ * @;


1.2
date	2005.01.08.23.10.18;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2005.01.08.23.02.34;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.01.08.23.02.34;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@basic cleanup, more to follow
@
text
@/* memcmp -- compare two memory regions.
   This function is in the public domain.  */

/*

@@deftypefn Supplemental int memcmp (const void *@@var{x}, const void *@@var{y}, size_t @@var{count})

Compares the first @@var{count} bytes of two areas of memory.  Returns
zero if they are the same, a value less than zero if @@var{x} is
lexically less than @@var{y}, or a value greater than zero if @@var{x}
is lexically greater than @@var{y}.  Note that lexical order is determined
as if comparing unsigned char arrays.

@@end deftypefn

*/

#include <ansidecl.h>
#ifdef ANSI_PROTOTYPES
#include <stddef.h>
#else
#define size_t unsigned long
#endif

int
memcmp (str1, str2, count)
     const PTR str1;
     const PTR str2;
     size_t count;
{
  register const unsigned char *s1 = (const unsigned char*)str1;
  register const unsigned char *s2 = (const unsigned char*)str2;

  while (count-- > 0)
    {
      if (*s1++ != *s2++)
	  return s1[-1] < s2[-1] ? -1 : 1;
    }
  return 0;
}

@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU binutils 2.15-current, from
 ftp://sources.redhat.com/pub/binutils/snapshots/binutils-050108.tar.bz2
with the following directories removed:
 bfd/po
 binutils/po
 binutils/testsuite
 gas/po
 gas/testsuite
 gprof
 intl
 ld/po
 ld/testsuite
 opcodes/po
 texinfo
and all top-level non-directory files.
@
text
@@
