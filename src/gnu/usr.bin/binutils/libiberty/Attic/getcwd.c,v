head	1.2;
access;
symbols
	binutils-20050118:1.1.2.1
	binutils-050108:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@ * @;


1.2
date	2005.01.08.23.10.18;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2005.01.08.23.02.31;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.01.08.23.02.31;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@basic cleanup, more to follow
@
text
@/* Emulate getcwd using getwd.
   This function is in the public domain. */

/*

@@deftypefn Supplemental char* getcwd (char *@@var{pathname}, int @@var{len})

Copy the absolute pathname for the current working directory into
@@var{pathname}, which is assumed to point to a buffer of at least
@@var{len} bytes, and return a pointer to the buffer.  If the current
directory's path doesn't fit in @@var{len} characters, the result is
@@code{NULL} and @@code{errno} is set.  If @@var{pathname} is a null pointer,
@@code{getcwd} will obtain @@var{len} bytes of space using
@@code{malloc}.

@@end deftypefn

*/

#include "config.h"

#ifdef HAVE_SYS_PARAM_H
#include <sys/param.h>
#endif
#include <errno.h>
#ifdef HAVE_STRING_H
#include <string.h>
#endif
#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif

extern char *getwd ();
extern int errno;

#ifndef MAXPATHLEN
#define MAXPATHLEN 1024
#endif

char *
getcwd (buf, len)
  char *buf;
  size_t len;
{
  char ourbuf[MAXPATHLEN];
  char *result;

  result = getwd (ourbuf);
  if (result) {
    if (strlen (ourbuf) >= len) {
      errno = ERANGE;
      return 0;
    }
    if (!buf) {
       buf = (char*)malloc(len);
       if (!buf) {
           errno = ENOMEM;
	   return 0;
       }
    }
    strcpy (buf, ourbuf);
  }
  return buf;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU binutils 2.15-current, from
 ftp://sources.redhat.com/pub/binutils/snapshots/binutils-050108.tar.bz2
with the following directories removed:
 bfd/po
 binutils/po
 binutils/testsuite
 gas/po
 gas/testsuite
 gprof
 intl
 ld/po
 ld/testsuite
 opcodes/po
 texinfo
and all top-level non-directory files.
@
text
@@
