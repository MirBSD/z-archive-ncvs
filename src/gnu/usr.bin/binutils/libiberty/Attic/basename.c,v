head	1.2;
access;
symbols
	binutils-20050118:1.1.2.1
	binutils-050108:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@ * @;


1.2
date	2005.01.08.23.10.17;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2005.01.08.23.02.30;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.01.08.23.02.30;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@basic cleanup, more to follow
@
text
@/* Return the basename of a pathname.
   This file is in the public domain. */

/*

@@deftypefn Supplemental char* basename (const char *@@var{name})

Returns a pointer to the last component of pathname @@var{name}.
Behavior is undefined if the pathname ends in a directory separator.

@@end deftypefn

*/

#include "ansidecl.h"
#include "libiberty.h"
#include "safe-ctype.h"

#ifndef DIR_SEPARATOR
#define DIR_SEPARATOR '/'
#endif

#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \
  defined (__OS2__)
#define HAVE_DOS_BASED_FILE_SYSTEM
#ifndef DIR_SEPARATOR_2 
#define DIR_SEPARATOR_2 '\\'
#endif
#endif

/* Define IS_DIR_SEPARATOR.  */
#ifndef DIR_SEPARATOR_2
# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)
#else /* DIR_SEPARATOR_2 */
# define IS_DIR_SEPARATOR(ch) \
	(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))
#endif /* DIR_SEPARATOR_2 */

char *
basename (name)
     const char *name;
{
  const char *base;

#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
  /* Skip over the disk name in MSDOS pathnames. */
  if (ISALPHA (name[0]) && name[1] == ':') 
    name += 2;
#endif

  for (base = name; *name; name++)
    {
      if (IS_DIR_SEPARATOR (*name))
	{
	  base = name + 1;
	}
    }
  return (char *) base;
}

@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU binutils 2.15-current, from
 ftp://sources.redhat.com/pub/binutils/snapshots/binutils-050108.tar.bz2
with the following directories removed:
 bfd/po
 binutils/po
 binutils/testsuite
 gas/po
 gas/testsuite
 gprof
 intl
 ld/po
 ld/testsuite
 opcodes/po
 texinfo
and all top-level non-directory files.
@
text
@@
