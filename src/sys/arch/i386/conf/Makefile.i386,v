head	2.2;
access;
symbols
	start:1.1.1.1 openbsd:1.1.1;
locks; strict;
comment	@# @;


2.2
date	2005.01.09.15.02.19;	author tg;	state Exp;
branches;
next	2.1;

2.1
date	2005.01.03.16.34.16;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.32.12;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.32.12;	author tg;	state Exp;
branches;
next	;


desc
@@


2.2
log
@unfold the kernel part of ocvs:mergefixes into the new master tree,
effectively switching src/ over
@
text
@# $MirBSD: src/sys/arch/i386/conf/Makefile.i386,v 1.25.4.1 2005/01/09 14:27:54 tg Exp $
# $OpenBSD: Makefile.i386,v 1.40 2004/05/11 04:01:00 deraadt Exp $

# Makefile for MirOS BSD and derived operating environments
# based upon Makefile for OpenBSD (NetBSD, 4.4BSD-Lite, etc.)
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/i386/conf/MACHINEID
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/i386/conf/Makefile.i386
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas

# DEBUG is set to -g if debugging.

.include <bsd.own.mk>

MKDEP?=	mkdep
SIZE?=	size
STRIP?=	strip

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	cd ../../../..; pwd
.endif
I386=	$S/arch/i386

INCLUDES=	-nostdinc -I. -I$S/arch -I$S
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Di386
CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main

.if !${IDENT:M-DI386_CPU}
CMACHFLAGS=	-march=i486
.else
CMACHFLAGS=
.endif
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-log -ffreestanding

COPTS?=		-O2
CFLAGS=		${DEBUG} ${CDIAGFLAGS} ${CMACHFLAGS} \
		${COPTS:S/-g//} ${PIPE} ${CSYS}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
LINKFLAGS=	-Ttext 0xD0100120 -e start -N
STRIPFLAGS=	-g -X -x

HOSTCC=		${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
LIBKERN=	${KERNLIB}

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
LIBCOMPAT=	${COMPATLIB}

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL or DRIVER; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} -c $<

NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<

HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<

%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ=	locore.o tai_leaps.o init_ssp.o \
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	rm -f $@@
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
.else
LINKFLAGS+=	-x
.endif

%LOAD

assym.h: $S/kern/genassym.sh ${I386}/i386/genassym.cf Makefile
	${SHELL} $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} <${I386}/i386/genassym.cf >assym.h.tmp && \
	    mv -f assym.h.tmp assym.h

# Propolice init
init_ssp.o: $S/kern/init_ssp.c
	${NORMAL_C} -fno-stack-protector

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C_C}

ioconf.o: ioconf.c
	${NORMAL_C}

tai_leaps.o: tai_leaps.c
	${NORMAL_C}

tai_leaps.c: tai_make
	./tai_make >$@@ || (rm -f $@@; false)

tai_make: tai_make.o
	${HOSTCC} ${HOSTED_CFLAGS} -o $@@ $>

tai_make.o: $S/lib/libkern/tai_make.c
	${HOSTED_C}

newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	${SHELL} $S/conf/newvers.sh "${OSrev}" "${OSrpl}" \
	    "${OSREV:C/^${OSrev}.//}" "${OScompat}"
	${CC} ${CFLAGS} ${CPPFLAGS} -c vers.c


clean::
	rm -f eddep *bsd bsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs makelinks assym.h

lint:
	@@lint -hbxncez -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
	    ${CFILES} ioconf.c param.c | \
	    grep -v 'static function .* unused'

tags:
	@@echo "see $S/kern/Makefile for tags"

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u >dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' >makelinks
	${SHELL} makelinks && rm -f dontlink makelinks

SRCS=	${I386}/i386/locore.s \
	param.c ioconf.c ${CFILES} ${SFILES}
depend:: .depend
.depend: ${SRCS} assym.h param.c ${APMINC}
	CC="${CC}" ${MKDEP} ${AFLAGS} ${CPPFLAGS} ${I386}/i386/locore.s
	CC="${CC}" ${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	CC="${CC}" ${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	CC="${CC}" ${SHELL} $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} <${I386}/i386/genassym.cf
	@@sed -e 's/.*\.o:.* /assym.h: /' <assym.dep >>.depend
	@@rm -f assym.dep


# depend on root or device configuration
autoconf.o conf.o: Makefile

# depend on network or filesystem configuration
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile
if.o if_tun.o if_loop.o if_ethersubr.o: Makefile
if_arp.o if_ether.o: Makefile
ip_input.o ip_output.o in_pcb.o in_proto.o: Makefile
tcp_subr.o tcp_timer.o tcp_output.o: Makefile

# depend on maxusers
machdep.o: Makefile

# depend on CPU configuration
locore.o machdep.o: Makefile


locore.o: ${I386}/i386/locore.s assym.h
	${NORMAL_S}

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif

%RULES
@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@d1 1
a1 1
# $MirBSD: src/sys/arch/i386/conf/Makefile.i386,v 1.25 2004/12/11 16:50:06 tg Exp $
d40 1
a40 1
		-Wno-uninitialized -Wno-format -Wno-main -ffreestanding
d50 1
a50 1
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-log
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile.i386,v 1.40 2004/05/11 04:01:00 deraadt Exp $
d4 2
a5 1
# Makefile for OpenBSD
d10 1
a10 1
#	/sys/arch/i386/conf/``machineid''
a23 1
# PROF is set to -pg if profiling.
d40 1
a40 1
		-Wno-uninitialized -Wno-format -Wno-main
d53 2
a54 1
CFLAGS=		${DEBUG} ${CDIAGFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
d59 1
a59 1
HOSTCC= ${CC}
a64 1
.ifndef PROF
a65 3
.else
LIBKERN=	${KERNLIB_PROF}
.endif
a68 1
.ifndef PROF
a69 3
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif
d72 1
a72 1
# where TYPE is NORMAL, DRIVER, or PROFILE; SUFFIX is the file suffix,
d76 2
a77 2
NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d79 2
a80 2
DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d98 1
a98 1
SYSTEM_OBJ=	locore.o \
d119 2
a120 2
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${I386}/i386/genassym.cf > assym.h.tmp && \
d123 4
d137 12
d150 3
a152 2
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c
d169 1
a169 1
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
d172 2
a173 2
	  sed 's,.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink makelinks
d179 6
a184 6
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${I386}/i386/locore.s
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} < ${I386}/i386/genassym.cf
	@@sed -e 's/.*\.o:.* /assym.h: /' < assym.dep >> .depend
d190 3
a192 3
 
# depend on network or filesystem configuration 
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile 
d201 1
a201 1
# depend on CPU configuration 
@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
