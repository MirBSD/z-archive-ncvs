head	2.1;
access;
symbols
	start:1.1.1.1 openbsd:1.1.1;
locks; strict;
comment	@ * @;


2.1
date	2005.01.03.16.34.44;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.19.17.40.41;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.32.22;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.32.22;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@/**	$MirBSD: src/sys/arch/powerpc/include/ansi.h,v 1.1.1.4.4.1.2.1 2004/12/25 16:31:48 tg Exp $ */
/*	$OpenBSD: ansi.h,v 1.12 2004/01/03 14:08:53 espie Exp $	*/
/*	$NetBSD: ansi.h,v 1.2 1996/11/15 22:38:57 jtc Exp $	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)ansi.h	8.2 (Berkeley) 1/4/94
 */

#ifndef	_ANSI_H_
#define	_ANSI_H_

/*
 * Types which are fundamental to the implementation and may appear in
 * more than one standard header are defined here.  Standard headers
 * then use:
 *	#ifdef	_BSD_SIZE_T_
 *	typedef	_BSD_SIZE_T_ size_t;
 *	#undef	_BSD_SIZE_T_
 *	#endif
 */
#define	_BSD_CLOCK_T_	unsigned long		/* clock() */
#define	_BSD_PTRDIFF_T_	int			/* ptr1 - ptr2 */
#define	_BSD_SIZE_T_	unsigned int		/* sizeof() */
#define	_BSD_SSIZE_T_	int			/* byte count or error */
#ifdef __BIT_TYPES_DEFINED__
#define	_BSD_TIME_T_	int64_t			/* time() */
#else
/* LONGLONG */
#define	_BSD_TIME_T_	long long		/* time() */
#endif
struct __va_list_tag;
#if defined(__GNUC__) && __GNUC__ >= 3
#define _BSD_VA_LIST_	__builtin_va_list
#else
#define _BSD_VA_LIST_   struct __va_list_tag *	/* va_list */
#endif
#define _BSD_CLOCKID_T_	int
#define _BSD_TIMER_T_	int

/*
 * Runes (wchar_t) is declared to be an "int" instead of the more natural
 * "unsigned long" or "long".  Two things are happening here.  It is not
 * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,
 * it looks like 10646 will be a 31 bit standard.  This means that if your
 * ints cannot hold 32 bits, you will be in trouble.  The reason an int was
 * chosen over a long is that the is*() and to*() routines take ints (says
 * ANSI C), but they use _RUNE_T_ instead of int.  By changing it here, you
 * lose a bit of ANSI conformance, but your programs will still work.
 *
 * Note that _WCHAR_T_ and _RUNE_T_ must be of the same type.  When wchar_t
 * and rune_t are typedef'd, _WCHAR_T_ will be undef'd, but _RUNE_T remains
 * defined for ctype.h.
 */
#define	_BSD_WCHAR_T_	int			/* wchar_t */
#define _BSD_WINT_T_	int			/* wint_t */
#define	_BSD_RUNE_T_	int			/* rune_t */

/*
 * We describe off_t here so its declaration can be visible to
 * stdio without pulling in all of <sys/types.h>, thus appeasing ANSI.
 */
#ifdef __BIT_TYPES_DEFINED__
#define _BSD_OFF_T_	int64_t			/* file offset */
#else
/* LONGLONG */
#define _BSD_OFF_T_	long long		/* file offset */
#endif

#endif	/* _ANSI_H_ */
@


1.2
log
@my first and probably last commit to the mirppc port:
this will be a time_t-64 arch, sync with i386

now maintainership for the powerpc and macppc md tree,
the subtree for new-world macs and the assorted mi has
bsiegert@@ while the subtree for old-world macs and the
assorted mi stuff is assigned to wbx@@ when he is back.
@
text
@d1 1
a1 1
/**	$MirBSD$ */
@


1.1
log
@Initial revision
@
text
@d1 1
d52 6
a57 1
#define	_BSD_TIME_T_	int			/* time() */
d62 1
a62 1
#define _BSD_VA_LIST_   struct __va_list_tag * /* va_list */
d68 2
a69 2
 * Runes (wchar_t) is declared to be an ``int'' instead of the more natural
 * ``unsigned long'' or ``long''.  Two things are happening here.  It is not
d76 1
a76 1
 *    
d82 1
a82 1
#define	_BSD_WINT_T_	int			/* wint_t */
d87 1
a87 1
 * stdio without pulling in all of <sys/type.h>, thus appeasing ANSI.
d89 4
d94 1
@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
