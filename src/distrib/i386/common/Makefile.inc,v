head	2.4;
access;
symbols
	start:1.1.1.1 openbsd:1.1.1;
locks; strict;
comment	@# @;


2.4
date	2005.01.26.20.48.56;	author tg;	state Exp;
branches;
next	2.3;

2.3
date	2005.01.18.18.13.27;	author tg;	state Exp;
branches;
next	2.2;

2.2
date	2005.01.13.20.34.59;	author tg;	state Exp;
branches;
next	2.1;

2.1
date	2005.01.03.16.22.50;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.27.03;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.27.03;	author tg;	state Exp;
branches;
next	;


desc
@@


2.4
log
@I think we can now build a floppy (systrace'd of course) with this.
While here, fix the generated kernel's name.
@
text
@# $MirBSD: src/distrib/i386/common/Makefile.inc,v 2.3 2005/01/18 18:13:27 tg Exp $
# $OpenBSD: Makefile.inc,v 1.14 2004/05/05 23:40:13 deraadt Exp $

.ifndef _MODSRC_DISTRIB_I386_COMMON_MAKEFILE_INC
_MODSRC_DISTRIB_I386_COMMON_MAKEFILE_INC=1

.include <bsd.own.mk>

TOP=		${.CURDIR}/..
REALOBJDIR!=	readlink ${.OBJDIR} || ( cd ${.OBJDIR} && pwd )
IMAGE=		mr.fs
CBIN?=		instbin
CRUNCHCONF?=	${CBIN}.conf
LISTS?=		${.CURDIR}/../common/list
.if exists(${.CURDIR}/list.local)
LISTS+=		${.CURDIR}/list.local
.endif
UTILS?=		${.CURDIR}/../../miniroot
STRIP?=		strip
STRIP_ADDS?=	-K cngetc

MOUNT_POINT=	${REALOBJDIR}/tmpmnt
MTREE?=		${UTILS}/mtree.conf

XNAME?=		floppy
FS?=		${XNAME}${OSrev}.fs
VND?=		svnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
REALIMAGE=	${REALOBJDIR}/tmp.ima
BOOT=		${DESTDIR}/usr/mdec/boot
FLOPPYSIZE?=	144
FLOPPYSECS?=	18
FLOPPYTYPE?=	floppy3
HOSTCFLAGS?=	${CFLAGS} ${COPTS}
.if !${COPTS:M-Os}
COPTS+=		-Os
.endif
CFLAGS+=	${CDIAGFLAGS} ${COPTS}

SYSDIR=		${.CURDIR}/../../../sys
SYSSUBDIR=	${SYSDIR}/arch/i386
KERNDIR=	${SYSSUBDIR}/compile/${RAMDISK}

DO_FLOPPY?=	Yes
DO_BSDRD_NAME?=	bsd.rd

.if ${DO_FLOPPY:L} == "yes"
all:	${FS}
.else
all:	${DO_BSDRD_NAME}
.endif

${FS}:	bsd.gz
	dd if=/dev/zero of=${REALIMAGE} bs=10k count=${FLOPPYSIZE}
	${SUDO} vnconfig -v -c ${VND} ${REALIMAGE}
	${SUDO} disklabel -w -r ${VND} ${FLOPPYTYPE}
	${SUDO} newfs -m 0 -o space -i 1048576 -c 80 -b 4096 ${VND_RDEV}
	mkdir -p ${MOUNT_POINT}
	${SUDO} mount ${VND_DEV} ${MOUNT_POINT}
	${SUDO} cp ${BOOT} ${.OBJDIR}/boot
	${SUDO} dd if=${.OBJDIR}/boot of=${MOUNT_POINT}/boot obs=512 conv=osync
	${SUDO} dd if=bsd.gz of=${MOUNT_POINT}/bsd obs=512 conv=osync
	${SUDO} /usr/mdec/installboot -v -s ${FLOPPYSECS} -h 2 \
	    ${MOUNT_POINT}/boot ${DESTDIR}/usr/mdec/ffspbr ${VND_CRDEV}
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	${SUDO} umount ${MOUNT_POINT}
	${SUDO} vnconfig -u ${VND}
	cp ${REALIMAGE} ${FS}
	rm ${REALIMAGE}

DISKTYPE?=       ipldisc
NBLKS?=          8192
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS=	-m 0 -o space -c 16 -i 3072

bsd.gz: ${DO_BSDRD_NAME}
	cp ${DO_BSDRD_NAME} bsd.strip
	${STRIP} --strip-all -R .comment -R .eh_frame ${STRIP_ADDS} bsd.strip
	gzip -nc9 bsd.strip >bsd.gz

${DO_BSDRD_NAME}:	${IMAGE} bsd rdsetroot
	cp bsd ${DO_BSDRD_NAME}
	${.OBJDIR}/rdsetroot ${DO_BSDRD_NAME} <${IMAGE}

.ifndef KERNEL_LOCAL_BUILD
bsd:
	mkdir -p build/${RAMDISK}
	[[ -f build/${RAMDISK}/version || ! -f ${KERNDIR}/version ]] \
	    || cat ${KERNDIR}/version >build/${RAMDISK}/version
	( cd build/${RAMDISK}; config -s ${SYSDIR} -b . \
	    ${SYSSUBDIR}/conf/${RAMDISK} \
	    && ${MAKE} clean && ${MAKE} depend && exec ${MAKE} bsd )
	mv build/${RAMDISK}/bsd .
	-[[ -e ${KERNDIR} ]] \
	    && if ! cat build/${RAMDISK}/version >${KERNDIR}/version; then \
		( print "# Attention: kernel version changed"; \
		  print "print $$(<build/${RAMDISK}/version)" \
		     ">${KERNDIR}/version" ) \
		  | tee -a /var/tmp/.buildnotice >&2; \
	    fi
.endif

${IMAGE}: ${CBIN} rd_setup do_files rd_teardown

rd_setup: ${CBIN}
	dd if=/dev/zero of=${REALIMAGE} bs=512 count=${NBLKS}
	${SUDO} vnconfig -v -c ${VND} ${REALIMAGE}
	${SUDO} disklabel -w -r ${VND} ${DISKTYPE}
	${SUDO} newfs ${NEWFSARGS} ${VND_RDEV}
	${SUDO} fsck ${VND_RDEV}
	mkdir -p ${MOUNT_POINT}
	${SUDO} mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-${SUDO} umount ${MOUNT_POINT}
	-${SUDO} vnconfig -u ${VND}
	cp ${REALIMAGE} ${IMAGE}
	rm ${REALIMAGE}

rdsetroot:	${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -DDEBUG -o $@@ ${TOP}/../common/elfrdsetroot.c

unconfig:
	-${SUDO} umount -f ${MOUNT_POINT}
	-${SUDO} vnconfig -u ${VND}

.PRECIOUS:	${IMAGE}

install:
.ifndef NOBSDRD
	cp ${DO_BSDRD_NAME} ${DESTDIR}/snapshot/
.endif
.if ${DO_FLOPPY:L} == "yes"
	cp ${FS} ${DESTDIR}/snapshot/${FS}
.endif

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -E -D ${BSDSRCDIR} -L ${DESTDIR}/usr/lib \
	    -c ${CBIN}.c -e ${CBIN} -m ${CBIN}.mk ${CRUNCHCONF}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	make -f ${CBIN}.mk CFLAGS="${CFLAGS}" all
	${STRIP} --strip-all -R .comment -R .eh_frame ${CBIN}

${CRUNCHCONF}: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} >${CRUNCHCONF}

do_files:
	${SUDO} mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${OSrev} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    ${SUDO} ${SHELL} ${UTILS}/runlist.sh ${LISTS}
	${SUDO} rm ${MOUNT_POINT}/${CBIN}

clean cleandir:
.ifndef KERNEL_LOCAL_BUILD
	-rm -rf build
.endif
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}*.cache boot \
	    *.o *.lo *.c bsd bsd.rd bsd.gz bsd.strip floppy*.fs rdsetroot \
	    cdrom*.fs ${CRUNCHCONF} ${DO_BSDRD_NAME} ${FS} ${REALIMAGE}
	/bin/rm -rf ${MOUNT_POINT}

cleannobsd:
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}*.cache boot \
	    *.o *.lo *.c bsd.rd bsd.gz bsd.strip floppy*.fs rdsetroot \
	    cdrom*.fs ${CRUNCHCONF} ${DO_BSDRD_NAME} ${FS} ${REALIMAGE}
	/bin/rm -rf ${MOUNT_POINT}

.include <bsd.obj.mk>
.include <bsd.subdir.mk>

.endif
@


2.3
log
@I told you... these _are_ evil ways.
@
text
@d1 1
a1 1
# $MirBSD: src/distrib/i386/common/Makefile.inc,v 2.2 2005/01/13 20:34:59 tg Exp $
d42 4
d91 14
a104 4
	cd ${.CURDIR}/../../../sys/arch/i386/conf && config ${RAMDISK}
	cd ${.CURDIR}/../../../sys/arch/i386/compile/${RAMDISK} && \
	    make clean && make depend && make COPTS="${COPTS}"
	cp ${.CURDIR}/../../../sys/arch/i386/compile/${RAMDISK}/bsd bsd
d161 3
@


2.2
log
@further merge and fix double-inclusion-protection
@
text
@d1 1
a1 1
# $MirBSD: src/distrib/i386/common/Makefile.inc,v 2.1 2005/01/03 16:22:50 tg Exp $
d22 1
a22 1
MOUNT_POINT=	${.OBJDIR}/tmpmnt
d31 1
a31 2
PID!=		echo $$$$
REALIMAGE!=	echo ${.OBJDIR}/tmp.ima
d36 2
d39 1
d85 1
a85 1
.ifndef	KERNEL_LOCAL_BUILD
d112 1
a112 1
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/../common/elfrdsetroot.c
@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@d1 1
a1 1
# $MirBSD: src/distrib/i386/common/Makefile.inc,v 1.33 2004/12/10 21:35:41 tg Exp $
d4 3
d158 2
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
#	$OpenBSD: Makefile.inc,v 1.14 2004/05/05 23:40:13 deraadt Exp $
d7 1
a7 2

.include "${TOP}/Makefile.inc"
d12 3
d16 2
d19 2
a20 2
MOUNT_POINT=	/mnt
MTREE=		${UTILS}/mtree.conf
d23 1
a23 1
FS?=		${XNAME}${REV}.fs
d29 1
a29 1
REALIMAGE!=	echo /var/tmp/image.${PID}
d32 1
d34 5
d40 1
d42 3
d48 10
a57 11
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w -r ${VND} ${FLOPPYTYPE}
	newfs -m 0 -o space -i 524288 -c 80 ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}
	cp ${BOOT} ${.OBJDIR}/boot
	strip ${.OBJDIR}/boot
	strip -R .comment ${.OBJDIR}/boot
	dd if=${.OBJDIR}/boot of=${MOUNT_POINT}/boot bs=512
	dd if=bsd.gz of=${MOUNT_POINT}/bsd bs=512
	/usr/mdec/installboot -v ${MOUNT_POINT}/boot \
	    ${DESTDIR}/usr/mdec/biosboot ${VND_CRDEV}
d61 2
a62 2
	umount ${MOUNT_POINT}
	vnconfig -u ${VND}
d66 2
a67 2
DISKTYPE?=       rdroot
NBLKS?=          3510
d69 1
a69 11
NEWFSARGS= -m 0 -o space -c 16 -i 4096

bsd.gz: bsd.rd
	cp bsd.rd bsd.strip
	strip bsd.strip
	strip -R .comment bsd.strip
	gzip -c9 bsd.strip > bsd.gz

bsd.rd:	${IMAGE} bsd rdsetroot
	cp bsd bsd.rd
	${.OBJDIR}/rdsetroot bsd.rd < ${IMAGE}
d71 8
d80 1
d84 1
a84 1
	    make clean && make depend && COPTS=-Os make
d86 1
d92 6
a97 5
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w -r ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}
d101 2
a102 2
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}
d110 2
a111 2
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}
d117 1
a117 1
	cp bsd.rd ${DESTDIR}/snapshot/bsd.rd
d119 1
d121 1
d125 1
a125 1
	-c ${CBIN}.c -e ${CBIN} -m ${CBIN}.mk ${CRUNCHCONF}
d128 2
a129 2
	make -f ${CBIN}.mk all
	strip -R .comment ${CBIN}
d132 1
a132 1
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CRUNCHCONF}
d135 1
a135 1
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
d137 3
a139 3
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}
d142 10
a151 3
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}*.cache \
	    *.o *.lo *.c bsd bsd.rd bsd.gz bsd.strip floppy*.fs \
	    rdsetroot boot ${CRUNCHCONF} ${FS}
@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
