head	1.2;
access;
symbols
	cvs-200501070130:1.1.5.1 TNF:1.1.5;
locks; strict;
comment	@ * @;


1.2
date	2005.01.07.01.45.29;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.07.01.32.13;	author tg;	state Exp;
branches
	1.1.5.1;
next	;

1.1.5.1
date	2005.01.07.01.32.13;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge and style
@
text
@/* $MirBSD: src/lib/csu/i386_elf/dot_init.h,v 1.3 2004/10/31 12:50:53 tg Exp $ */
/* $NetBSD: dot_init.h,v 1.3 2002/11/22 06:45:00 thorpej Exp $ */

/*-
 * Copyright (c) 2001 Ross Harvey
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/cdefs.h>			/* RCS ID & Copyright macro defns */

/*
 * These must be extern to avoid warnings ("declared static but never defined")
 * However, only the declaration is extern, the actually __asm() defines them
 * as static.
 */
#define	INIT_FALLTHRU_DECL void init_fallthru(void)
#define	FINI_FALLTHRU_DECL void fini_fallthru(void)

#define	INIT_FALLTHRU()	init_fallthru()
#define	FINI_FALLTHRU()	fini_fallthru()

#define	MD_SECTION_PROLOGUE(sect, entry_pt)			\
	__asm__(".section " __STRING(sect) ",\"ax\",@@progbits"	\
	"\n" __STRING(entry_pt) ":"				\
	"\n	.balign 16"					\
	"\n	/* fall thru */"				\
	"\n	.previous")

	/* placement of the .align _after_ the label is intentional */

#define	MD_SECTION_EPILOGUE(sect)				\
	__asm__(".section " __STRING(sect) ",\"ax\",@@progbits"	\
	"\n	ret"						\
	"\n	.previous")

#define	MD_INIT_SECTION_PROLOGUE MD_SECTION_PROLOGUE(.init, init_fallthru)
#define	MD_FINI_SECTION_PROLOGUE MD_SECTION_PROLOGUE(.fini, fini_fallthru)

#define	MD_INIT_SECTION_EPILOGUE MD_SECTION_EPILOGUE(.init)
#define	MD_FINI_SECTION_EPILOGUE MD_SECTION_EPILOGUE(.fini)

#define MD_CALL_STATIC_FUNCTION(section, func)	\
	__asm__(".section " __STRING(section)	\
	"\n	call " __STRING(func)		\
	"\n	.previous");

__RCSID("$MirBSD: src/lib/csu/i386_elf/dot_init.h,v 1.3 2004/10/31 12:50:53 tg Exp $");
@


1.1
log
@Initial revision
@
text
@d1 1
d50 13
a62 15
#define	MD_SECTION_PROLOGUE(sect, entry_pt)		\
		__asm (					\
		".section "#sect",\"ax\",@@progbits	\n"\
		#entry_pt":				\n"\
		"	.align	16			\n"\
		"	/* fall thru */			\n"\
		".previous")

		/* placement of the .align _after_ the label is intentional */

#define	MD_SECTION_EPILOGUE(sect)			\
		__asm (					\
		".section "#sect",\"ax\",@@progbits	\n"\
		"	ret				\n"\
		".previous")
d70 6
a75 2
#define MD_CALL_STATIC_FUNCTION(section, func) \
asm(".section " #section "; call " #func "; .previous");
@


1.1.5.1
log
@tnf's csu
@
text
@@
