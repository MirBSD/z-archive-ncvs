head	2.1;
access;
symbols
	start:1.1.1.1 openbsd:1.1.1;
locks; strict;
comment	@ * @;


2.1
date	2005.01.03.16.31.20;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.12.21.31.19;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.12.12.21.31.19;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@work over most of the changes MirOS has done, and add
the new or copied/moved files
@
text
@/**	$MirBSD: src/sbin/fdisk/cmd.h,v 1.5 2004/08/22 16:31:37 tg Stab $ */
/*	$OpenBSD: cmd.h,v 1.8 2003/06/03 01:13:19 weingart Exp $	*/

/*
 * Copyright (c) 1997 Tobias Weingartner
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _CMD_H
#define _CMD_H

/* Includes */
#include "disk.h"
#include "mbr.h"


/* Constants (returned by cmd funs) */
#define CMD_EXIT	0x0000
#define CMD_SAVE	0x0001
#define CMD_CONT	0x0002
#define CMD_CLEAN	0x0003
#define CMD_DIRTY	0x0004


/* Data types */
struct _cmd_table_t;
typedef struct _cmd_t {
	struct _cmd_table_t *table;
	char cmd[10];
	char args[100];
} cmd_t;

typedef struct _cmd_table_t {
	char *cmd;
	int (*fcn)(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
	char *help;
} cmd_table_t;


/* Prototypes */
int Xreinit(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xdisk(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xmanual(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xedit(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xsetpid(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xselect(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xprint(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xwrite(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xexit(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xquit(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xabort(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xhelp(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xflag(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xfdef(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xupdate(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);
int Xumin(cmd_t *, disk_t *, mbr_t *, mbr_t *, int);

#endif /* _CMD_H */
@


1.1
log
@Initial revision
@
text
@d1 1
d74 1
d76 1
a78 2


@


1.1.1.1
log
@Import base OpenBSD repository of MirOS ocvs:HEAD
@
text
@@
