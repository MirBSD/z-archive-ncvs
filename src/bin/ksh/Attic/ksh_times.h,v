head	2.2;
access;
symbols
	mksh-R20:2.1
	mksh-R19:2.1
	cvs-200412101800:1.1.15.1
	mirbsd:1.1.15;
locks; strict;
comment	@ * @;


2.2
date	2004.12.31.18.41.47;	author tg;	state dead;
branches;
next	2.1;

2.1
date	2004.12.10.18.09.41;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.10.18.08.08;	author tg;	state Exp;
branches
	1.1.15.1;
next	;

1.1.15.1
date	2004.12.10.18.08.08;	author tg;	state Exp;
branches;
next	;


desc
@@


2.2
log
@Our times(3) just calls getrusage(2) and gettimeofday(2), converting seconds
to ticks.  Since ksh needs things in seconds it then converted them back.
Avoid the silliness and use the getrusage(2) and gettimeofday(2) directly.
With man page help from jmc@@
From: Todd C. Miller <millert@@cvs.openbsd.org>
@
text
@/**	$MirBSD: src/bin/ksh/ksh_times.h,v 2.1 2004/12/10 18:09:41 tg Exp $ */
/*	$OpenBSD: ksh_times.h,v 1.2 1996/10/01 02:05:41 downsj Exp $	*/

#ifndef KSH_TIMES_H
#define KSH_TIMES_H

/* Needed for clock_t on some systems (ie, NeXT in non-posix mode) */
#include "ksh_time.h"

#include <sys/times.h>

#ifdef TIMES_BROKEN
extern clock_t	ksh_times(struct tms *);
#else /* TIMES_BROKEN */
# define ksh_times times
#endif /* TIMES_BROKEN */

#ifdef HAVE_TIMES
extern clock_t	times(struct tms *);
#endif /* HAVE_TIMES */

#endif /* KSH_TIMES_H */
@


2.1
log
@bump to mksh R19
@
text
@d1 1
a1 1
/**	$MirBSD: src/bin/ksh/ksh_times.h,v 1.1.15.1 2004/12/10 18:08:08 tg Exp $ */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/**	$MirBSD: src/bin/ksh/ksh_times.h,v 1.5 2004/10/28 11:53:42 tg Exp $ */
@


1.1.15.1
log
@Import mirbsdksh-HEAD into new CVS
@
text
@@
