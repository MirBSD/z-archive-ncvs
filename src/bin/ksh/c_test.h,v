head	2.1;
access;
symbols
	mksh-R20:2.1
	mksh-R19:2.1
	cvs-200412101800:1.1.15.1
	mirbsd:1.1.15;
locks; strict;
comment	@ * @;


2.1
date	2004.12.10.18.09.41;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.10.18.08.08;	author tg;	state Exp;
branches
	1.1.15.1;
next	;

1.1.15.1
date	2004.12.10.18.08.08;	author tg;	state Exp;
branches;
next	;


desc
@@


2.1
log
@bump to mksh R19
@
text
@/**	$MirBSD: src/bin/ksh/c_test.h,v 1.1.15.1 2004/12/10 18:08:08 tg Exp $ */
/*	$OpenBSD: c_test.h,v 1.2 2003/10/22 07:40:38 jmc Exp $	*/

#ifndef C_TEST_H
#define C_TEST_H

/* Various types of operations.  Keeping things grouped nicely
 * (unary,binary) makes switch() statements more efficient.
 */
enum Test_op {
	TO_NONOP = 0,	/* non-operator */
	/* unary operators */
	TO_STNZE, TO_STZER, TO_OPTION,
	TO_FILAXST,
	TO_FILEXST,
	TO_FILREG, TO_FILBDEV, TO_FILCDEV, TO_FILSYM, TO_FILFIFO, TO_FILSOCK,
	TO_FILCDF, TO_FILID, TO_FILGID, TO_FILSETG, TO_FILSTCK, TO_FILUID,
	TO_FILRD, TO_FILGZ, TO_FILTT, TO_FILSETU, TO_FILWR, TO_FILEX,
	/* binary operators */
	TO_STEQL, TO_STNEQ, TO_STLT, TO_STGT, TO_INTEQ, TO_INTNE, TO_INTGT,
	TO_INTGE, TO_INTLT, TO_INTLE, TO_FILEQ, TO_FILNT, TO_FILOT
};
typedef enum Test_op Test_op;

/* Used by Test_env.isa() (order important - used to index *_tokens[] arrays) */
enum Test_meta {
	TM_OR,		/* -o or || */
	TM_AND,		/* -a or && */
	TM_NOT,		/* ! */
	TM_OPAREN,	/* ( */
	TM_CPAREN,	/* ) */
	TM_UNOP,	/* unary operator */
	TM_BINOP,	/* binary operator */
	TM_END		/* end of input */
};
typedef enum Test_meta Test_meta;

#define TEF_ERROR	BIT(0)		/* set if we've hit an error */
#define TEF_DBRACKET	BIT(1)		/* set if [[ .. ]] test */

typedef struct test_env Test_env;
struct test_env {
	int	flags;		/* TEF_* */
	union {
		char	**wp;		/* used by ptest_* */
		XPtrV	*av;		/* used by dbtestp_* */
	} pos;
	char **wp_end;			/* used by ptest_* */
	int	(*isa)(Test_env *te, Test_meta meta);
	const char *(*getopnd)(Test_env *te, Test_op op, int do_eval);
	int	(*eval)(Test_env *te, Test_op op, const char *opnd1,
				 const char *opnd2, int do_eval);
	void	(*error)(Test_env *te, int offset, const char *msg);
};

Test_op	test_isop(Test_env *te, Test_meta meta, const char *s);
int     test_eval(Test_env *te, Test_op op, const char *opnd1,
			const char *opnd2, int do_eval);
int	test_parse(Test_env *te);

#endif	/* ndef C_TEST_H */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/**	$MirBSD: src/bin/ksh/c_test.h,v 1.5 2004/10/28 11:53:40 tg Exp $ */
@


1.1.15.1
log
@Import mirbsdksh-HEAD into new CVS
@
text
@@
